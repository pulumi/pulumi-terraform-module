// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vpc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vpc.ModuleArgs;
import com.pulumi.vpc.Utilities;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="vpc:index:Module")
public class Module extends com.pulumi.resources.ComponentResource {
    /**
     * A list of availability zones specified as argument to this module
     * 
     */
    @Export(name="azs", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> azs;

    /**
     * @return A list of availability zones specified as argument to this module
     * 
     */
    public Output<Optional<List<String>>> azs() {
        return Codegen.optional(this.azs);
    }
    /**
     * List of ARNs of Customer Gateway
     * 
     */
    @Export(name="cgw_arns", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> cgw_arns;

    /**
     * @return List of ARNs of Customer Gateway
     * 
     */
    public Output<Optional<List<String>>> cgw_arns() {
        return Codegen.optional(this.cgw_arns);
    }
    /**
     * List of IDs of Customer Gateway
     * 
     */
    @Export(name="cgw_ids", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> cgw_ids;

    /**
     * @return List of IDs of Customer Gateway
     * 
     */
    public Output<Optional<List<String>>> cgw_ids() {
        return Codegen.optional(this.cgw_ids);
    }
    /**
     * ID of the database internet gateway route
     * 
     */
    @Export(name="database_internet_gateway_route_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> database_internet_gateway_route_id;

    /**
     * @return ID of the database internet gateway route
     * 
     */
    public Output<Optional<String>> database_internet_gateway_route_id() {
        return Codegen.optional(this.database_internet_gateway_route_id);
    }
    /**
     * ID of the database IPv6 egress route
     * 
     */
    @Export(name="database_ipv6_egress_route_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> database_ipv6_egress_route_id;

    /**
     * @return ID of the database IPv6 egress route
     * 
     */
    public Output<Optional<String>> database_ipv6_egress_route_id() {
        return Codegen.optional(this.database_ipv6_egress_route_id);
    }
    /**
     * List of IDs of the database nat gateway route
     * 
     */
    @Export(name="database_nat_gateway_route_ids", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> database_nat_gateway_route_ids;

    /**
     * @return List of IDs of the database nat gateway route
     * 
     */
    public Output<Optional<List<String>>> database_nat_gateway_route_ids() {
        return Codegen.optional(this.database_nat_gateway_route_ids);
    }
    /**
     * ARN of the database network ACL
     * 
     */
    @Export(name="database_network_acl_arn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> database_network_acl_arn;

    /**
     * @return ARN of the database network ACL
     * 
     */
    public Output<Optional<String>> database_network_acl_arn() {
        return Codegen.optional(this.database_network_acl_arn);
    }
    /**
     * ID of the database network ACL
     * 
     */
    @Export(name="database_network_acl_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> database_network_acl_id;

    /**
     * @return ID of the database network ACL
     * 
     */
    public Output<Optional<String>> database_network_acl_id() {
        return Codegen.optional(this.database_network_acl_id);
    }
    /**
     * List of IDs of the database route table association
     * 
     */
    @Export(name="database_route_table_association_ids", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> database_route_table_association_ids;

    /**
     * @return List of IDs of the database route table association
     * 
     */
    public Output<Optional<List<String>>> database_route_table_association_ids() {
        return Codegen.optional(this.database_route_table_association_ids);
    }
    /**
     * List of IDs of database route tables
     * 
     */
    @Export(name="database_route_table_ids", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> database_route_table_ids;

    /**
     * @return List of IDs of database route tables
     * 
     */
    public Output<Optional<List<String>>> database_route_table_ids() {
        return Codegen.optional(this.database_route_table_ids);
    }
    /**
     * List of ARNs of database subnets
     * 
     */
    @Export(name="database_subnet_arns", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> database_subnet_arns;

    /**
     * @return List of ARNs of database subnets
     * 
     */
    public Output<Optional<List<String>>> database_subnet_arns() {
        return Codegen.optional(this.database_subnet_arns);
    }
    /**
     * ID of database subnet group
     * 
     */
    @Export(name="database_subnet_group", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> database_subnet_group;

    /**
     * @return ID of database subnet group
     * 
     */
    public Output<Optional<String>> database_subnet_group() {
        return Codegen.optional(this.database_subnet_group);
    }
    /**
     * Name of database subnet group
     * 
     */
    @Export(name="database_subnet_group_name", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> database_subnet_group_name;

    /**
     * @return Name of database subnet group
     * 
     */
    public Output<Optional<String>> database_subnet_group_name() {
        return Codegen.optional(this.database_subnet_group_name);
    }
    /**
     * A list of all database subnets, containing the full objects.
     * 
     */
    @Export(name="database_subnet_objects", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> database_subnet_objects;

    /**
     * @return A list of all database subnets, containing the full objects.
     * 
     */
    public Output<Optional<String>> database_subnet_objects() {
        return Codegen.optional(this.database_subnet_objects);
    }
    /**
     * List of IDs of database subnets
     * 
     */
    @Export(name="database_subnets", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> database_subnets;

    /**
     * @return List of IDs of database subnets
     * 
     */
    public Output<Optional<List<String>>> database_subnets() {
        return Codegen.optional(this.database_subnets);
    }
    /**
     * List of cidr_blocks of database subnets
     * 
     */
    @Export(name="database_subnets_cidr_blocks", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> database_subnets_cidr_blocks;

    /**
     * @return List of cidr_blocks of database subnets
     * 
     */
    public Output<Optional<List<String>>> database_subnets_cidr_blocks() {
        return Codegen.optional(this.database_subnets_cidr_blocks);
    }
    /**
     * List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC
     * 
     */
    @Export(name="database_subnets_ipv6_cidr_blocks", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> database_subnets_ipv6_cidr_blocks;

    /**
     * @return List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC
     * 
     */
    public Output<Optional<List<String>>> database_subnets_ipv6_cidr_blocks() {
        return Codegen.optional(this.database_subnets_ipv6_cidr_blocks);
    }
    /**
     * The ID of the default network ACL
     * 
     */
    @Export(name="default_network_acl_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> default_network_acl_id;

    /**
     * @return The ID of the default network ACL
     * 
     */
    public Output<Optional<String>> default_network_acl_id() {
        return Codegen.optional(this.default_network_acl_id);
    }
    /**
     * The ID of the default route table
     * 
     */
    @Export(name="default_route_table_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> default_route_table_id;

    /**
     * @return The ID of the default route table
     * 
     */
    public Output<Optional<String>> default_route_table_id() {
        return Codegen.optional(this.default_route_table_id);
    }
    /**
     * The ID of the security group created by default on VPC creation
     * 
     */
    @Export(name="default_security_group_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> default_security_group_id;

    /**
     * @return The ID of the security group created by default on VPC creation
     * 
     */
    public Output<Optional<String>> default_security_group_id() {
        return Codegen.optional(this.default_security_group_id);
    }
    /**
     * The ARN of the Default VPC
     * 
     */
    @Export(name="default_vpc_arn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> default_vpc_arn;

    /**
     * @return The ARN of the Default VPC
     * 
     */
    public Output<Optional<String>> default_vpc_arn() {
        return Codegen.optional(this.default_vpc_arn);
    }
    /**
     * The CIDR block of the Default VPC
     * 
     */
    @Export(name="default_vpc_cidr_block", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> default_vpc_cidr_block;

    /**
     * @return The CIDR block of the Default VPC
     * 
     */
    public Output<Optional<String>> default_vpc_cidr_block() {
        return Codegen.optional(this.default_vpc_cidr_block);
    }
    /**
     * The ID of the default network ACL of the Default VPC
     * 
     */
    @Export(name="default_vpc_default_network_acl_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> default_vpc_default_network_acl_id;

    /**
     * @return The ID of the default network ACL of the Default VPC
     * 
     */
    public Output<Optional<String>> default_vpc_default_network_acl_id() {
        return Codegen.optional(this.default_vpc_default_network_acl_id);
    }
    /**
     * The ID of the default route table of the Default VPC
     * 
     */
    @Export(name="default_vpc_default_route_table_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> default_vpc_default_route_table_id;

    /**
     * @return The ID of the default route table of the Default VPC
     * 
     */
    public Output<Optional<String>> default_vpc_default_route_table_id() {
        return Codegen.optional(this.default_vpc_default_route_table_id);
    }
    /**
     * The ID of the security group created by default on Default VPC creation
     * 
     */
    @Export(name="default_vpc_default_security_group_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> default_vpc_default_security_group_id;

    /**
     * @return The ID of the security group created by default on Default VPC creation
     * 
     */
    public Output<Optional<String>> default_vpc_default_security_group_id() {
        return Codegen.optional(this.default_vpc_default_security_group_id);
    }
    /**
     * Whether or not the Default VPC has DNS hostname support
     * 
     */
    @Export(name="default_vpc_enable_dns_hostnames", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> default_vpc_enable_dns_hostnames;

    /**
     * @return Whether or not the Default VPC has DNS hostname support
     * 
     */
    public Output<Optional<String>> default_vpc_enable_dns_hostnames() {
        return Codegen.optional(this.default_vpc_enable_dns_hostnames);
    }
    /**
     * Whether or not the Default VPC has DNS support
     * 
     */
    @Export(name="default_vpc_enable_dns_support", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> default_vpc_enable_dns_support;

    /**
     * @return Whether or not the Default VPC has DNS support
     * 
     */
    public Output<Optional<String>> default_vpc_enable_dns_support() {
        return Codegen.optional(this.default_vpc_enable_dns_support);
    }
    /**
     * The ID of the Default VPC
     * 
     */
    @Export(name="default_vpc_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> default_vpc_id;

    /**
     * @return The ID of the Default VPC
     * 
     */
    public Output<Optional<String>> default_vpc_id() {
        return Codegen.optional(this.default_vpc_id);
    }
    /**
     * Tenancy of instances spin up within Default VPC
     * 
     */
    @Export(name="default_vpc_instance_tenancy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> default_vpc_instance_tenancy;

    /**
     * @return Tenancy of instances spin up within Default VPC
     * 
     */
    public Output<Optional<String>> default_vpc_instance_tenancy() {
        return Codegen.optional(this.default_vpc_instance_tenancy);
    }
    /**
     * The ID of the main route table associated with the Default VPC
     * 
     */
    @Export(name="default_vpc_main_route_table_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> default_vpc_main_route_table_id;

    /**
     * @return The ID of the main route table associated with the Default VPC
     * 
     */
    public Output<Optional<String>> default_vpc_main_route_table_id() {
        return Codegen.optional(this.default_vpc_main_route_table_id);
    }
    /**
     * The ID of the DHCP options
     * 
     */
    @Export(name="dhcp_options_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dhcp_options_id;

    /**
     * @return The ID of the DHCP options
     * 
     */
    public Output<Optional<String>> dhcp_options_id() {
        return Codegen.optional(this.dhcp_options_id);
    }
    /**
     * The ID of the egress only Internet Gateway
     * 
     */
    @Export(name="egress_only_internet_gateway_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> egress_only_internet_gateway_id;

    /**
     * @return The ID of the egress only Internet Gateway
     * 
     */
    public Output<Optional<String>> egress_only_internet_gateway_id() {
        return Codegen.optional(this.egress_only_internet_gateway_id);
    }
    /**
     * ARN of the elasticache network ACL
     * 
     */
    @Export(name="elasticache_network_acl_arn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> elasticache_network_acl_arn;

    /**
     * @return ARN of the elasticache network ACL
     * 
     */
    public Output<Optional<String>> elasticache_network_acl_arn() {
        return Codegen.optional(this.elasticache_network_acl_arn);
    }
    /**
     * ID of the elasticache network ACL
     * 
     */
    @Export(name="elasticache_network_acl_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> elasticache_network_acl_id;

    /**
     * @return ID of the elasticache network ACL
     * 
     */
    public Output<Optional<String>> elasticache_network_acl_id() {
        return Codegen.optional(this.elasticache_network_acl_id);
    }
    /**
     * List of IDs of the elasticache route table association
     * 
     */
    @Export(name="elasticache_route_table_association_ids", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> elasticache_route_table_association_ids;

    /**
     * @return List of IDs of the elasticache route table association
     * 
     */
    public Output<Optional<List<String>>> elasticache_route_table_association_ids() {
        return Codegen.optional(this.elasticache_route_table_association_ids);
    }
    /**
     * List of IDs of elasticache route tables
     * 
     */
    @Export(name="elasticache_route_table_ids", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> elasticache_route_table_ids;

    /**
     * @return List of IDs of elasticache route tables
     * 
     */
    public Output<Optional<String>> elasticache_route_table_ids() {
        return Codegen.optional(this.elasticache_route_table_ids);
    }
    /**
     * List of ARNs of elasticache subnets
     * 
     */
    @Export(name="elasticache_subnet_arns", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> elasticache_subnet_arns;

    /**
     * @return List of ARNs of elasticache subnets
     * 
     */
    public Output<Optional<List<String>>> elasticache_subnet_arns() {
        return Codegen.optional(this.elasticache_subnet_arns);
    }
    /**
     * ID of elasticache subnet group
     * 
     */
    @Export(name="elasticache_subnet_group", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> elasticache_subnet_group;

    /**
     * @return ID of elasticache subnet group
     * 
     */
    public Output<Optional<String>> elasticache_subnet_group() {
        return Codegen.optional(this.elasticache_subnet_group);
    }
    /**
     * Name of elasticache subnet group
     * 
     */
    @Export(name="elasticache_subnet_group_name", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> elasticache_subnet_group_name;

    /**
     * @return Name of elasticache subnet group
     * 
     */
    public Output<Optional<String>> elasticache_subnet_group_name() {
        return Codegen.optional(this.elasticache_subnet_group_name);
    }
    /**
     * A list of all elasticache subnets, containing the full objects.
     * 
     */
    @Export(name="elasticache_subnet_objects", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> elasticache_subnet_objects;

    /**
     * @return A list of all elasticache subnets, containing the full objects.
     * 
     */
    public Output<Optional<String>> elasticache_subnet_objects() {
        return Codegen.optional(this.elasticache_subnet_objects);
    }
    /**
     * List of IDs of elasticache subnets
     * 
     */
    @Export(name="elasticache_subnets", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> elasticache_subnets;

    /**
     * @return List of IDs of elasticache subnets
     * 
     */
    public Output<Optional<List<String>>> elasticache_subnets() {
        return Codegen.optional(this.elasticache_subnets);
    }
    /**
     * List of cidr_blocks of elasticache subnets
     * 
     */
    @Export(name="elasticache_subnets_cidr_blocks", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> elasticache_subnets_cidr_blocks;

    /**
     * @return List of cidr_blocks of elasticache subnets
     * 
     */
    public Output<Optional<List<String>>> elasticache_subnets_cidr_blocks() {
        return Codegen.optional(this.elasticache_subnets_cidr_blocks);
    }
    /**
     * List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC
     * 
     */
    @Export(name="elasticache_subnets_ipv6_cidr_blocks", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> elasticache_subnets_ipv6_cidr_blocks;

    /**
     * @return List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC
     * 
     */
    public Output<Optional<List<String>>> elasticache_subnets_ipv6_cidr_blocks() {
        return Codegen.optional(this.elasticache_subnets_ipv6_cidr_blocks);
    }
    /**
     * The ARN of the Internet Gateway
     * 
     */
    @Export(name="igw_arn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> igw_arn;

    /**
     * @return The ARN of the Internet Gateway
     * 
     */
    public Output<Optional<String>> igw_arn() {
        return Codegen.optional(this.igw_arn);
    }
    /**
     * The ID of the Internet Gateway
     * 
     */
    @Export(name="igw_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> igw_id;

    /**
     * @return The ID of the Internet Gateway
     * 
     */
    public Output<Optional<String>> igw_id() {
        return Codegen.optional(this.igw_id);
    }
    /**
     * ARN of the intra network ACL
     * 
     */
    @Export(name="intra_network_acl_arn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> intra_network_acl_arn;

    /**
     * @return ARN of the intra network ACL
     * 
     */
    public Output<Optional<String>> intra_network_acl_arn() {
        return Codegen.optional(this.intra_network_acl_arn);
    }
    /**
     * ID of the intra network ACL
     * 
     */
    @Export(name="intra_network_acl_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> intra_network_acl_id;

    /**
     * @return ID of the intra network ACL
     * 
     */
    public Output<Optional<String>> intra_network_acl_id() {
        return Codegen.optional(this.intra_network_acl_id);
    }
    /**
     * List of IDs of the intra route table association
     * 
     */
    @Export(name="intra_route_table_association_ids", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> intra_route_table_association_ids;

    /**
     * @return List of IDs of the intra route table association
     * 
     */
    public Output<Optional<List<String>>> intra_route_table_association_ids() {
        return Codegen.optional(this.intra_route_table_association_ids);
    }
    /**
     * List of IDs of intra route tables
     * 
     */
    @Export(name="intra_route_table_ids", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> intra_route_table_ids;

    /**
     * @return List of IDs of intra route tables
     * 
     */
    public Output<Optional<List<String>>> intra_route_table_ids() {
        return Codegen.optional(this.intra_route_table_ids);
    }
    /**
     * List of ARNs of intra subnets
     * 
     */
    @Export(name="intra_subnet_arns", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> intra_subnet_arns;

    /**
     * @return List of ARNs of intra subnets
     * 
     */
    public Output<Optional<List<String>>> intra_subnet_arns() {
        return Codegen.optional(this.intra_subnet_arns);
    }
    /**
     * A list of all intra subnets, containing the full objects.
     * 
     */
    @Export(name="intra_subnet_objects", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> intra_subnet_objects;

    /**
     * @return A list of all intra subnets, containing the full objects.
     * 
     */
    public Output<Optional<String>> intra_subnet_objects() {
        return Codegen.optional(this.intra_subnet_objects);
    }
    /**
     * List of IDs of intra subnets
     * 
     */
    @Export(name="intra_subnets", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> intra_subnets;

    /**
     * @return List of IDs of intra subnets
     * 
     */
    public Output<Optional<List<String>>> intra_subnets() {
        return Codegen.optional(this.intra_subnets);
    }
    /**
     * List of cidr_blocks of intra subnets
     * 
     */
    @Export(name="intra_subnets_cidr_blocks", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> intra_subnets_cidr_blocks;

    /**
     * @return List of cidr_blocks of intra subnets
     * 
     */
    public Output<Optional<List<String>>> intra_subnets_cidr_blocks() {
        return Codegen.optional(this.intra_subnets_cidr_blocks);
    }
    /**
     * List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC
     * 
     */
    @Export(name="intra_subnets_ipv6_cidr_blocks", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> intra_subnets_ipv6_cidr_blocks;

    /**
     * @return List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC
     * 
     */
    public Output<Optional<List<String>>> intra_subnets_ipv6_cidr_blocks() {
        return Codegen.optional(this.intra_subnets_ipv6_cidr_blocks);
    }
    /**
     * The name of the VPC specified as argument to this module
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> name;

    /**
     * @return The name of the VPC specified as argument to this module
     * 
     */
    public Output<Optional<String>> name() {
        return Codegen.optional(this.name);
    }
    /**
     * List of allocation ID of Elastic IPs created for AWS NAT Gateway
     * 
     */
    @Export(name="nat_ids", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> nat_ids;

    /**
     * @return List of allocation ID of Elastic IPs created for AWS NAT Gateway
     * 
     */
    public Output<Optional<List<String>>> nat_ids() {
        return Codegen.optional(this.nat_ids);
    }
    /**
     * List of public Elastic IPs created for AWS NAT Gateway
     * 
     */
    @Export(name="nat_public_ips", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> nat_public_ips;

    /**
     * @return List of public Elastic IPs created for AWS NAT Gateway
     * 
     */
    public Output<Optional<String>> nat_public_ips() {
        return Codegen.optional(this.nat_public_ips);
    }
    /**
     * List of NAT Gateway IDs
     * 
     */
    @Export(name="natgw_ids", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> natgw_ids;

    /**
     * @return List of NAT Gateway IDs
     * 
     */
    public Output<Optional<List<String>>> natgw_ids() {
        return Codegen.optional(this.natgw_ids);
    }
    /**
     * List of Network Interface IDs assigned to NAT Gateways
     * 
     */
    @Export(name="natgw_interface_ids", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> natgw_interface_ids;

    /**
     * @return List of Network Interface IDs assigned to NAT Gateways
     * 
     */
    public Output<Optional<List<String>>> natgw_interface_ids() {
        return Codegen.optional(this.natgw_interface_ids);
    }
    /**
     * ARN of the outpost network ACL
     * 
     */
    @Export(name="outpost_network_acl_arn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> outpost_network_acl_arn;

    /**
     * @return ARN of the outpost network ACL
     * 
     */
    public Output<Optional<String>> outpost_network_acl_arn() {
        return Codegen.optional(this.outpost_network_acl_arn);
    }
    /**
     * ID of the outpost network ACL
     * 
     */
    @Export(name="outpost_network_acl_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> outpost_network_acl_id;

    /**
     * @return ID of the outpost network ACL
     * 
     */
    public Output<Optional<String>> outpost_network_acl_id() {
        return Codegen.optional(this.outpost_network_acl_id);
    }
    /**
     * List of ARNs of outpost subnets
     * 
     */
    @Export(name="outpost_subnet_arns", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> outpost_subnet_arns;

    /**
     * @return List of ARNs of outpost subnets
     * 
     */
    public Output<Optional<List<String>>> outpost_subnet_arns() {
        return Codegen.optional(this.outpost_subnet_arns);
    }
    /**
     * A list of all outpost subnets, containing the full objects.
     * 
     */
    @Export(name="outpost_subnet_objects", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> outpost_subnet_objects;

    /**
     * @return A list of all outpost subnets, containing the full objects.
     * 
     */
    public Output<Optional<String>> outpost_subnet_objects() {
        return Codegen.optional(this.outpost_subnet_objects);
    }
    /**
     * List of IDs of outpost subnets
     * 
     */
    @Export(name="outpost_subnets", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> outpost_subnets;

    /**
     * @return List of IDs of outpost subnets
     * 
     */
    public Output<Optional<List<String>>> outpost_subnets() {
        return Codegen.optional(this.outpost_subnets);
    }
    /**
     * List of cidr_blocks of outpost subnets
     * 
     */
    @Export(name="outpost_subnets_cidr_blocks", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> outpost_subnets_cidr_blocks;

    /**
     * @return List of cidr_blocks of outpost subnets
     * 
     */
    public Output<Optional<List<String>>> outpost_subnets_cidr_blocks() {
        return Codegen.optional(this.outpost_subnets_cidr_blocks);
    }
    /**
     * List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC
     * 
     */
    @Export(name="outpost_subnets_ipv6_cidr_blocks", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> outpost_subnets_ipv6_cidr_blocks;

    /**
     * @return List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC
     * 
     */
    public Output<Optional<List<String>>> outpost_subnets_ipv6_cidr_blocks() {
        return Codegen.optional(this.outpost_subnets_ipv6_cidr_blocks);
    }
    /**
     * List of IDs of the ipv6 egress route
     * 
     */
    @Export(name="private_ipv6_egress_route_ids", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> private_ipv6_egress_route_ids;

    /**
     * @return List of IDs of the ipv6 egress route
     * 
     */
    public Output<Optional<List<String>>> private_ipv6_egress_route_ids() {
        return Codegen.optional(this.private_ipv6_egress_route_ids);
    }
    /**
     * List of IDs of the private nat gateway route
     * 
     */
    @Export(name="private_nat_gateway_route_ids", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> private_nat_gateway_route_ids;

    /**
     * @return List of IDs of the private nat gateway route
     * 
     */
    public Output<Optional<List<String>>> private_nat_gateway_route_ids() {
        return Codegen.optional(this.private_nat_gateway_route_ids);
    }
    /**
     * ARN of the private network ACL
     * 
     */
    @Export(name="private_network_acl_arn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> private_network_acl_arn;

    /**
     * @return ARN of the private network ACL
     * 
     */
    public Output<Optional<String>> private_network_acl_arn() {
        return Codegen.optional(this.private_network_acl_arn);
    }
    /**
     * ID of the private network ACL
     * 
     */
    @Export(name="private_network_acl_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> private_network_acl_id;

    /**
     * @return ID of the private network ACL
     * 
     */
    public Output<Optional<String>> private_network_acl_id() {
        return Codegen.optional(this.private_network_acl_id);
    }
    /**
     * List of IDs of the private route table association
     * 
     */
    @Export(name="private_route_table_association_ids", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> private_route_table_association_ids;

    /**
     * @return List of IDs of the private route table association
     * 
     */
    public Output<Optional<List<String>>> private_route_table_association_ids() {
        return Codegen.optional(this.private_route_table_association_ids);
    }
    /**
     * List of IDs of private route tables
     * 
     */
    @Export(name="private_route_table_ids", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> private_route_table_ids;

    /**
     * @return List of IDs of private route tables
     * 
     */
    public Output<Optional<String>> private_route_table_ids() {
        return Codegen.optional(this.private_route_table_ids);
    }
    /**
     * List of ARNs of private subnets
     * 
     */
    @Export(name="private_subnet_arns", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> private_subnet_arns;

    /**
     * @return List of ARNs of private subnets
     * 
     */
    public Output<Optional<List<String>>> private_subnet_arns() {
        return Codegen.optional(this.private_subnet_arns);
    }
    /**
     * A list of all private subnets, containing the full objects.
     * 
     */
    @Export(name="private_subnet_objects", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> private_subnet_objects;

    /**
     * @return A list of all private subnets, containing the full objects.
     * 
     */
    public Output<Optional<String>> private_subnet_objects() {
        return Codegen.optional(this.private_subnet_objects);
    }
    /**
     * List of IDs of private subnets
     * 
     */
    @Export(name="private_subnets", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> private_subnets;

    /**
     * @return List of IDs of private subnets
     * 
     */
    public Output<Optional<List<String>>> private_subnets() {
        return Codegen.optional(this.private_subnets);
    }
    /**
     * List of cidr_blocks of private subnets
     * 
     */
    @Export(name="private_subnets_cidr_blocks", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> private_subnets_cidr_blocks;

    /**
     * @return List of cidr_blocks of private subnets
     * 
     */
    public Output<Optional<List<String>>> private_subnets_cidr_blocks() {
        return Codegen.optional(this.private_subnets_cidr_blocks);
    }
    /**
     * List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC
     * 
     */
    @Export(name="private_subnets_ipv6_cidr_blocks", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> private_subnets_ipv6_cidr_blocks;

    /**
     * @return List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC
     * 
     */
    public Output<Optional<List<String>>> private_subnets_ipv6_cidr_blocks() {
        return Codegen.optional(this.private_subnets_ipv6_cidr_blocks);
    }
    /**
     * ID of the IPv6 internet gateway route
     * 
     */
    @Export(name="public_internet_gateway_ipv6_route_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> public_internet_gateway_ipv6_route_id;

    /**
     * @return ID of the IPv6 internet gateway route
     * 
     */
    public Output<Optional<String>> public_internet_gateway_ipv6_route_id() {
        return Codegen.optional(this.public_internet_gateway_ipv6_route_id);
    }
    /**
     * ID of the internet gateway route
     * 
     */
    @Export(name="public_internet_gateway_route_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> public_internet_gateway_route_id;

    /**
     * @return ID of the internet gateway route
     * 
     */
    public Output<Optional<String>> public_internet_gateway_route_id() {
        return Codegen.optional(this.public_internet_gateway_route_id);
    }
    /**
     * ARN of the public network ACL
     * 
     */
    @Export(name="public_network_acl_arn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> public_network_acl_arn;

    /**
     * @return ARN of the public network ACL
     * 
     */
    public Output<Optional<String>> public_network_acl_arn() {
        return Codegen.optional(this.public_network_acl_arn);
    }
    /**
     * ID of the public network ACL
     * 
     */
    @Export(name="public_network_acl_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> public_network_acl_id;

    /**
     * @return ID of the public network ACL
     * 
     */
    public Output<Optional<String>> public_network_acl_id() {
        return Codegen.optional(this.public_network_acl_id);
    }
    /**
     * List of IDs of the public route table association
     * 
     */
    @Export(name="public_route_table_association_ids", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> public_route_table_association_ids;

    /**
     * @return List of IDs of the public route table association
     * 
     */
    public Output<Optional<List<String>>> public_route_table_association_ids() {
        return Codegen.optional(this.public_route_table_association_ids);
    }
    /**
     * List of IDs of public route tables
     * 
     */
    @Export(name="public_route_table_ids", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> public_route_table_ids;

    /**
     * @return List of IDs of public route tables
     * 
     */
    public Output<Optional<String>> public_route_table_ids() {
        return Codegen.optional(this.public_route_table_ids);
    }
    /**
     * List of ARNs of public subnets
     * 
     */
    @Export(name="public_subnet_arns", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> public_subnet_arns;

    /**
     * @return List of ARNs of public subnets
     * 
     */
    public Output<Optional<List<String>>> public_subnet_arns() {
        return Codegen.optional(this.public_subnet_arns);
    }
    /**
     * A list of all public subnets, containing the full objects.
     * 
     */
    @Export(name="public_subnet_objects", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> public_subnet_objects;

    /**
     * @return A list of all public subnets, containing the full objects.
     * 
     */
    public Output<Optional<String>> public_subnet_objects() {
        return Codegen.optional(this.public_subnet_objects);
    }
    /**
     * List of IDs of public subnets
     * 
     */
    @Export(name="public_subnets", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> public_subnets;

    /**
     * @return List of IDs of public subnets
     * 
     */
    public Output<Optional<List<String>>> public_subnets() {
        return Codegen.optional(this.public_subnets);
    }
    /**
     * List of cidr_blocks of public subnets
     * 
     */
    @Export(name="public_subnets_cidr_blocks", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> public_subnets_cidr_blocks;

    /**
     * @return List of cidr_blocks of public subnets
     * 
     */
    public Output<Optional<List<String>>> public_subnets_cidr_blocks() {
        return Codegen.optional(this.public_subnets_cidr_blocks);
    }
    /**
     * List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC
     * 
     */
    @Export(name="public_subnets_ipv6_cidr_blocks", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> public_subnets_ipv6_cidr_blocks;

    /**
     * @return List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC
     * 
     */
    public Output<Optional<List<String>>> public_subnets_ipv6_cidr_blocks() {
        return Codegen.optional(this.public_subnets_ipv6_cidr_blocks);
    }
    /**
     * ARN of the redshift network ACL
     * 
     */
    @Export(name="redshift_network_acl_arn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> redshift_network_acl_arn;

    /**
     * @return ARN of the redshift network ACL
     * 
     */
    public Output<Optional<String>> redshift_network_acl_arn() {
        return Codegen.optional(this.redshift_network_acl_arn);
    }
    /**
     * ID of the redshift network ACL
     * 
     */
    @Export(name="redshift_network_acl_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> redshift_network_acl_id;

    /**
     * @return ID of the redshift network ACL
     * 
     */
    public Output<Optional<String>> redshift_network_acl_id() {
        return Codegen.optional(this.redshift_network_acl_id);
    }
    /**
     * List of IDs of the public redshift route table association
     * 
     */
    @Export(name="redshift_public_route_table_association_ids", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> redshift_public_route_table_association_ids;

    /**
     * @return List of IDs of the public redshift route table association
     * 
     */
    public Output<Optional<List<String>>> redshift_public_route_table_association_ids() {
        return Codegen.optional(this.redshift_public_route_table_association_ids);
    }
    /**
     * List of IDs of the redshift route table association
     * 
     */
    @Export(name="redshift_route_table_association_ids", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> redshift_route_table_association_ids;

    /**
     * @return List of IDs of the redshift route table association
     * 
     */
    public Output<Optional<List<String>>> redshift_route_table_association_ids() {
        return Codegen.optional(this.redshift_route_table_association_ids);
    }
    /**
     * List of IDs of redshift route tables
     * 
     */
    @Export(name="redshift_route_table_ids", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> redshift_route_table_ids;

    /**
     * @return List of IDs of redshift route tables
     * 
     */
    public Output<Optional<String>> redshift_route_table_ids() {
        return Codegen.optional(this.redshift_route_table_ids);
    }
    /**
     * List of ARNs of redshift subnets
     * 
     */
    @Export(name="redshift_subnet_arns", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> redshift_subnet_arns;

    /**
     * @return List of ARNs of redshift subnets
     * 
     */
    public Output<Optional<List<String>>> redshift_subnet_arns() {
        return Codegen.optional(this.redshift_subnet_arns);
    }
    /**
     * ID of redshift subnet group
     * 
     */
    @Export(name="redshift_subnet_group", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> redshift_subnet_group;

    /**
     * @return ID of redshift subnet group
     * 
     */
    public Output<Optional<String>> redshift_subnet_group() {
        return Codegen.optional(this.redshift_subnet_group);
    }
    /**
     * A list of all redshift subnets, containing the full objects.
     * 
     */
    @Export(name="redshift_subnet_objects", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> redshift_subnet_objects;

    /**
     * @return A list of all redshift subnets, containing the full objects.
     * 
     */
    public Output<Optional<String>> redshift_subnet_objects() {
        return Codegen.optional(this.redshift_subnet_objects);
    }
    /**
     * List of IDs of redshift subnets
     * 
     */
    @Export(name="redshift_subnets", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> redshift_subnets;

    /**
     * @return List of IDs of redshift subnets
     * 
     */
    public Output<Optional<List<String>>> redshift_subnets() {
        return Codegen.optional(this.redshift_subnets);
    }
    /**
     * List of cidr_blocks of redshift subnets
     * 
     */
    @Export(name="redshift_subnets_cidr_blocks", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> redshift_subnets_cidr_blocks;

    /**
     * @return List of cidr_blocks of redshift subnets
     * 
     */
    public Output<Optional<List<String>>> redshift_subnets_cidr_blocks() {
        return Codegen.optional(this.redshift_subnets_cidr_blocks);
    }
    /**
     * List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC
     * 
     */
    @Export(name="redshift_subnets_ipv6_cidr_blocks", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> redshift_subnets_ipv6_cidr_blocks;

    /**
     * @return List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC
     * 
     */
    public Output<Optional<List<String>>> redshift_subnets_ipv6_cidr_blocks() {
        return Codegen.optional(this.redshift_subnets_ipv6_cidr_blocks);
    }
    /**
     * Map of Customer Gateway attributes
     * 
     */
    @Export(name="this_customer_gateway", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> this_customer_gateway;

    /**
     * @return Map of Customer Gateway attributes
     * 
     */
    public Output<Optional<String>> this_customer_gateway() {
        return Codegen.optional(this.this_customer_gateway);
    }
    /**
     * The ARN of the VPN Gateway
     * 
     */
    @Export(name="vgw_arn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vgw_arn;

    /**
     * @return The ARN of the VPN Gateway
     * 
     */
    public Output<Optional<String>> vgw_arn() {
        return Codegen.optional(this.vgw_arn);
    }
    /**
     * The ID of the VPN Gateway
     * 
     */
    @Export(name="vgw_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vgw_id;

    /**
     * @return The ID of the VPN Gateway
     * 
     */
    public Output<Optional<String>> vgw_id() {
        return Codegen.optional(this.vgw_id);
    }
    /**
     * The ARN of the VPC
     * 
     */
    @Export(name="vpc_arn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpc_arn;

    /**
     * @return The ARN of the VPC
     * 
     */
    public Output<Optional<String>> vpc_arn() {
        return Codegen.optional(this.vpc_arn);
    }
    /**
     * The CIDR block of the VPC
     * 
     */
    @Export(name="vpc_cidr_block", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpc_cidr_block;

    /**
     * @return The CIDR block of the VPC
     * 
     */
    public Output<Optional<String>> vpc_cidr_block() {
        return Codegen.optional(this.vpc_cidr_block);
    }
    /**
     * Whether or not the VPC has DNS hostname support
     * 
     */
    @Export(name="vpc_enable_dns_hostnames", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpc_enable_dns_hostnames;

    /**
     * @return Whether or not the VPC has DNS hostname support
     * 
     */
    public Output<Optional<String>> vpc_enable_dns_hostnames() {
        return Codegen.optional(this.vpc_enable_dns_hostnames);
    }
    /**
     * Whether or not the VPC has DNS support
     * 
     */
    @Export(name="vpc_enable_dns_support", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpc_enable_dns_support;

    /**
     * @return Whether or not the VPC has DNS support
     * 
     */
    public Output<Optional<String>> vpc_enable_dns_support() {
        return Codegen.optional(this.vpc_enable_dns_support);
    }
    /**
     * The ARN of the IAM role used when pushing logs to Cloudwatch log group
     * 
     */
    @Export(name="vpc_flow_log_cloudwatch_iam_role_arn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpc_flow_log_cloudwatch_iam_role_arn;

    /**
     * @return The ARN of the IAM role used when pushing logs to Cloudwatch log group
     * 
     */
    public Output<Optional<String>> vpc_flow_log_cloudwatch_iam_role_arn() {
        return Codegen.optional(this.vpc_flow_log_cloudwatch_iam_role_arn);
    }
    /**
     * The ARN of the IAM role used when pushing logs cross account
     * 
     */
    @Export(name="vpc_flow_log_deliver_cross_account_role", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpc_flow_log_deliver_cross_account_role;

    /**
     * @return The ARN of the IAM role used when pushing logs cross account
     * 
     */
    public Output<Optional<String>> vpc_flow_log_deliver_cross_account_role() {
        return Codegen.optional(this.vpc_flow_log_deliver_cross_account_role);
    }
    /**
     * The ARN of the destination for VPC Flow Logs
     * 
     */
    @Export(name="vpc_flow_log_destination_arn", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpc_flow_log_destination_arn;

    /**
     * @return The ARN of the destination for VPC Flow Logs
     * 
     */
    public Output<Optional<String>> vpc_flow_log_destination_arn() {
        return Codegen.optional(this.vpc_flow_log_destination_arn);
    }
    /**
     * The type of the destination for VPC Flow Logs
     * 
     */
    @Export(name="vpc_flow_log_destination_type", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpc_flow_log_destination_type;

    /**
     * @return The type of the destination for VPC Flow Logs
     * 
     */
    public Output<Optional<String>> vpc_flow_log_destination_type() {
        return Codegen.optional(this.vpc_flow_log_destination_type);
    }
    /**
     * The ID of the Flow Log resource
     * 
     */
    @Export(name="vpc_flow_log_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpc_flow_log_id;

    /**
     * @return The ID of the Flow Log resource
     * 
     */
    public Output<Optional<String>> vpc_flow_log_id() {
        return Codegen.optional(this.vpc_flow_log_id);
    }
    /**
     * The ID of the VPC
     * 
     */
    @Export(name="vpc_id", refs={String.class}, tree="[0]")
    private Output<String> vpc_id;

    /**
     * @return The ID of the VPC
     * 
     */
    public Output<String> vpc_id() {
        return this.vpc_id;
    }
    /**
     * Tenancy of instances spin up within VPC
     * 
     */
    @Export(name="vpc_instance_tenancy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpc_instance_tenancy;

    /**
     * @return Tenancy of instances spin up within VPC
     * 
     */
    public Output<Optional<String>> vpc_instance_tenancy() {
        return Codegen.optional(this.vpc_instance_tenancy);
    }
    /**
     * The association ID for the IPv6 CIDR block
     * 
     */
    @Export(name="vpc_ipv6_association_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpc_ipv6_association_id;

    /**
     * @return The association ID for the IPv6 CIDR block
     * 
     */
    public Output<Optional<String>> vpc_ipv6_association_id() {
        return Codegen.optional(this.vpc_ipv6_association_id);
    }
    /**
     * The IPv6 CIDR block
     * 
     */
    @Export(name="vpc_ipv6_cidr_block", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpc_ipv6_cidr_block;

    /**
     * @return The IPv6 CIDR block
     * 
     */
    public Output<Optional<String>> vpc_ipv6_cidr_block() {
        return Codegen.optional(this.vpc_ipv6_cidr_block);
    }
    /**
     * The ID of the main route table associated with this VPC
     * 
     */
    @Export(name="vpc_main_route_table_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpc_main_route_table_id;

    /**
     * @return The ID of the main route table associated with this VPC
     * 
     */
    public Output<Optional<String>> vpc_main_route_table_id() {
        return Codegen.optional(this.vpc_main_route_table_id);
    }
    /**
     * The ID of the AWS account that owns the VPC
     * 
     */
    @Export(name="vpc_owner_id", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpc_owner_id;

    /**
     * @return The ID of the AWS account that owns the VPC
     * 
     */
    public Output<Optional<String>> vpc_owner_id() {
        return Codegen.optional(this.vpc_owner_id);
    }
    /**
     * List of secondary CIDR blocks of the VPC
     * 
     */
    @Export(name="vpc_secondary_cidr_blocks", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> vpc_secondary_cidr_blocks;

    /**
     * @return List of secondary CIDR blocks of the VPC
     * 
     */
    public Output<Optional<List<String>>> vpc_secondary_cidr_blocks() {
        return Codegen.optional(this.vpc_secondary_cidr_blocks);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Module(java.lang.String name) {
        this(name, ModuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Module(java.lang.String name, @Nullable ModuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Module(java.lang.String name, @Nullable ModuleArgs args, @Nullable com.pulumi.resources.ComponentResourceOptions options) {
        super("vpc:index:Module", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), true, Utilities.getPackageRef());
    }

    private static ModuleArgs makeArgs(@Nullable ModuleArgs args, @Nullable com.pulumi.resources.ComponentResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ModuleArgs.Empty : args;
    }

    private static com.pulumi.resources.ComponentResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.ComponentResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.ComponentResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.ComponentResourceOptions.merge(defaultOptions, options, id);
    }

}
