// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vpc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.vpc.inputs.FlowLogCloudwatchIamRoleConditionsArgs;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModuleArgs Empty = new ModuleArgs();

    /**
     * The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN
     * 
     */
    @Import(name="amazon_side_asn")
    private @Nullable Output<String> amazon_side_asn;

    /**
     * @return The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN
     * 
     */
    public Optional<Output<String>> amazon_side_asn() {
        return Optional.ofNullable(this.amazon_side_asn);
    }

    /**
     * A list of availability zones names or ids in the region
     * 
     */
    @Import(name="azs")
    private @Nullable Output<List<String>> azs;

    /**
     * @return A list of availability zones names or ids in the region
     * 
     */
    public Optional<Output<List<String>>> azs() {
        return Optional.ofNullable(this.azs);
    }

    /**
     * (Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` &amp; `ipv4_ipam_pool_id`
     * 
     */
    @Import(name="cidr")
    private @Nullable Output<String> cidr;

    /**
     * @return (Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` &amp; `ipv4_ipam_pool_id`
     * 
     */
    public Optional<Output<String>> cidr() {
        return Optional.ofNullable(this.cidr);
    }

    /**
     * Controls if an internet gateway route for public database access should be created
     * 
     */
    @Import(name="create_database_internet_gateway_route")
    private @Nullable Output<Boolean> create_database_internet_gateway_route;

    /**
     * @return Controls if an internet gateway route for public database access should be created
     * 
     */
    public Optional<Output<Boolean>> create_database_internet_gateway_route() {
        return Optional.ofNullable(this.create_database_internet_gateway_route);
    }

    /**
     * Controls if a nat gateway route should be created to give internet access to the database subnets
     * 
     */
    @Import(name="create_database_nat_gateway_route")
    private @Nullable Output<Boolean> create_database_nat_gateway_route;

    /**
     * @return Controls if a nat gateway route should be created to give internet access to the database subnets
     * 
     */
    public Optional<Output<Boolean>> create_database_nat_gateway_route() {
        return Optional.ofNullable(this.create_database_nat_gateway_route);
    }

    /**
     * Controls if database subnet group should be created (n.b. database_subnets must also be set)
     * 
     */
    @Import(name="create_database_subnet_group")
    private @Nullable Output<Boolean> create_database_subnet_group;

    /**
     * @return Controls if database subnet group should be created (n.b. database_subnets must also be set)
     * 
     */
    public Optional<Output<Boolean>> create_database_subnet_group() {
        return Optional.ofNullable(this.create_database_subnet_group);
    }

    /**
     * Controls if separate route table for database should be created
     * 
     */
    @Import(name="create_database_subnet_route_table")
    private @Nullable Output<Boolean> create_database_subnet_route_table;

    /**
     * @return Controls if separate route table for database should be created
     * 
     */
    public Optional<Output<Boolean>> create_database_subnet_route_table() {
        return Optional.ofNullable(this.create_database_subnet_route_table);
    }

    /**
     * Controls if an Egress Only Internet Gateway is created and its related routes
     * 
     */
    @Import(name="create_egress_only_igw")
    private @Nullable Output<Boolean> create_egress_only_igw;

    /**
     * @return Controls if an Egress Only Internet Gateway is created and its related routes
     * 
     */
    public Optional<Output<Boolean>> create_egress_only_igw() {
        return Optional.ofNullable(this.create_egress_only_igw);
    }

    /**
     * Controls if elasticache subnet group should be created
     * 
     */
    @Import(name="create_elasticache_subnet_group")
    private @Nullable Output<Boolean> create_elasticache_subnet_group;

    /**
     * @return Controls if elasticache subnet group should be created
     * 
     */
    public Optional<Output<Boolean>> create_elasticache_subnet_group() {
        return Optional.ofNullable(this.create_elasticache_subnet_group);
    }

    /**
     * Controls if separate route table for elasticache should be created
     * 
     */
    @Import(name="create_elasticache_subnet_route_table")
    private @Nullable Output<Boolean> create_elasticache_subnet_route_table;

    /**
     * @return Controls if separate route table for elasticache should be created
     * 
     */
    public Optional<Output<Boolean>> create_elasticache_subnet_route_table() {
        return Optional.ofNullable(this.create_elasticache_subnet_route_table);
    }

    /**
     * Whether to create IAM role for VPC Flow Logs
     * 
     */
    @Import(name="create_flow_log_cloudwatch_iam_role")
    private @Nullable Output<Boolean> create_flow_log_cloudwatch_iam_role;

    /**
     * @return Whether to create IAM role for VPC Flow Logs
     * 
     */
    public Optional<Output<Boolean>> create_flow_log_cloudwatch_iam_role() {
        return Optional.ofNullable(this.create_flow_log_cloudwatch_iam_role);
    }

    /**
     * Whether to create CloudWatch log group for VPC Flow Logs
     * 
     */
    @Import(name="create_flow_log_cloudwatch_log_group")
    private @Nullable Output<Boolean> create_flow_log_cloudwatch_log_group;

    /**
     * @return Whether to create CloudWatch log group for VPC Flow Logs
     * 
     */
    public Optional<Output<Boolean>> create_flow_log_cloudwatch_log_group() {
        return Optional.ofNullable(this.create_flow_log_cloudwatch_log_group);
    }

    /**
     * Controls if an Internet Gateway is created for public subnets and the related routes that connect them
     * 
     */
    @Import(name="create_igw")
    private @Nullable Output<Boolean> create_igw;

    /**
     * @return Controls if an Internet Gateway is created for public subnets and the related routes that connect them
     * 
     */
    public Optional<Output<Boolean>> create_igw() {
        return Optional.ofNullable(this.create_igw);
    }

    /**
     * Indicates whether to create a separate route table for each intra subnet. Default: `false`
     * 
     */
    @Import(name="create_multiple_intra_route_tables")
    private @Nullable Output<Boolean> create_multiple_intra_route_tables;

    /**
     * @return Indicates whether to create a separate route table for each intra subnet. Default: `false`
     * 
     */
    public Optional<Output<Boolean>> create_multiple_intra_route_tables() {
        return Optional.ofNullable(this.create_multiple_intra_route_tables);
    }

    /**
     * Indicates whether to create a separate route table for each public subnet. Default: `false`
     * 
     */
    @Import(name="create_multiple_public_route_tables")
    private @Nullable Output<Boolean> create_multiple_public_route_tables;

    /**
     * @return Indicates whether to create a separate route table for each public subnet. Default: `false`
     * 
     */
    public Optional<Output<Boolean>> create_multiple_public_route_tables() {
        return Optional.ofNullable(this.create_multiple_public_route_tables);
    }

    /**
     * Controls if a nat gateway route should be created to give internet access to the private subnets
     * 
     */
    @Import(name="create_private_nat_gateway_route")
    private @Nullable Output<Boolean> create_private_nat_gateway_route;

    /**
     * @return Controls if a nat gateway route should be created to give internet access to the private subnets
     * 
     */
    public Optional<Output<Boolean>> create_private_nat_gateway_route() {
        return Optional.ofNullable(this.create_private_nat_gateway_route);
    }

    /**
     * Controls if redshift subnet group should be created
     * 
     */
    @Import(name="create_redshift_subnet_group")
    private @Nullable Output<Boolean> create_redshift_subnet_group;

    /**
     * @return Controls if redshift subnet group should be created
     * 
     */
    public Optional<Output<Boolean>> create_redshift_subnet_group() {
        return Optional.ofNullable(this.create_redshift_subnet_group);
    }

    /**
     * Controls if separate route table for redshift should be created
     * 
     */
    @Import(name="create_redshift_subnet_route_table")
    private @Nullable Output<Boolean> create_redshift_subnet_route_table;

    /**
     * @return Controls if separate route table for redshift should be created
     * 
     */
    public Optional<Output<Boolean>> create_redshift_subnet_route_table() {
        return Optional.ofNullable(this.create_redshift_subnet_route_table);
    }

    /**
     * Controls if VPC should be created (it affects almost all resources)
     * 
     */
    @Import(name="create_vpc")
    private @Nullable Output<Boolean> create_vpc;

    /**
     * @return Controls if VPC should be created (it affects almost all resources)
     * 
     */
    public Optional<Output<Boolean>> create_vpc() {
        return Optional.ofNullable(this.create_vpc);
    }

    /**
     * Additional tags for the Customer Gateway
     * 
     */
    @Import(name="customer_gateway_tags")
    private @Nullable Output<Map<String,String>> customer_gateway_tags;

    /**
     * @return Additional tags for the Customer Gateway
     * 
     */
    public Optional<Output<Map<String,String>>> customer_gateway_tags() {
        return Optional.ofNullable(this.customer_gateway_tags);
    }

    /**
     * Maps of Customer Gateway&#39;s attributes (BGP ASN and Gateway&#39;s Internet-routable external IP address)
     * 
     */
    @Import(name="customer_gateways")
    private @Nullable Output<Map<String,Map<String,Object>>> customer_gateways;

    /**
     * @return Maps of Customer Gateway&#39;s attributes (BGP ASN and Gateway&#39;s Internet-routable external IP address)
     * 
     */
    public Optional<Output<Map<String,Map<String,Object>>>> customer_gateways() {
        return Optional.ofNullable(this.customer_gateways);
    }

    /**
     * The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured
     * 
     */
    @Import(name="customer_owned_ipv4_pool")
    private @Nullable Output<String> customer_owned_ipv4_pool;

    /**
     * @return The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured
     * 
     */
    public Optional<Output<String>> customer_owned_ipv4_pool() {
        return Optional.ofNullable(this.customer_owned_ipv4_pool);
    }

    /**
     * Additional tags for the database subnets network ACL
     * 
     */
    @Import(name="database_acl_tags")
    private @Nullable Output<Map<String,String>> database_acl_tags;

    /**
     * @return Additional tags for the database subnets network ACL
     * 
     */
    public Optional<Output<Map<String,String>>> database_acl_tags() {
        return Optional.ofNullable(this.database_acl_tags);
    }

    /**
     * Whether to use dedicated network ACL (not default) and custom rules for database subnets
     * 
     */
    @Import(name="database_dedicated_network_acl")
    private @Nullable Output<Boolean> database_dedicated_network_acl;

    /**
     * @return Whether to use dedicated network ACL (not default) and custom rules for database subnets
     * 
     */
    public Optional<Output<Boolean>> database_dedicated_network_acl() {
        return Optional.ofNullable(this.database_dedicated_network_acl);
    }

    /**
     * Database subnets inbound network ACL rules
     * 
     */
    @Import(name="database_inbound_acl_rules")
    private @Nullable Output<List<Map<String,String>>> database_inbound_acl_rules;

    /**
     * @return Database subnets inbound network ACL rules
     * 
     */
    public Optional<Output<List<Map<String,String>>>> database_inbound_acl_rules() {
        return Optional.ofNullable(this.database_inbound_acl_rules);
    }

    /**
     * Database subnets outbound network ACL rules
     * 
     */
    @Import(name="database_outbound_acl_rules")
    private @Nullable Output<List<Map<String,String>>> database_outbound_acl_rules;

    /**
     * @return Database subnets outbound network ACL rules
     * 
     */
    public Optional<Output<List<Map<String,String>>>> database_outbound_acl_rules() {
        return Optional.ofNullable(this.database_outbound_acl_rules);
    }

    /**
     * Additional tags for the database route tables
     * 
     */
    @Import(name="database_route_table_tags")
    private @Nullable Output<Map<String,String>> database_route_table_tags;

    /**
     * @return Additional tags for the database route tables
     * 
     */
    public Optional<Output<Map<String,String>>> database_route_table_tags() {
        return Optional.ofNullable(this.database_route_table_tags);
    }

    /**
     * Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
     * 
     */
    @Import(name="database_subnet_assign_ipv6_address_on_creation")
    private @Nullable Output<Boolean> database_subnet_assign_ipv6_address_on_creation;

    /**
     * @return Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
     * 
     */
    public Optional<Output<Boolean>> database_subnet_assign_ipv6_address_on_creation() {
        return Optional.ofNullable(this.database_subnet_assign_ipv6_address_on_creation);
    }

    /**
     * Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
     * 
     */
    @Import(name="database_subnet_enable_dns64")
    private @Nullable Output<Boolean> database_subnet_enable_dns64;

    /**
     * @return Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
     * 
     */
    public Optional<Output<Boolean>> database_subnet_enable_dns64() {
        return Optional.ofNullable(this.database_subnet_enable_dns64);
    }

    /**
     * Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
     * 
     */
    @Import(name="database_subnet_enable_resource_name_dns_a_record_on_launch")
    private @Nullable Output<Boolean> database_subnet_enable_resource_name_dns_a_record_on_launch;

    /**
     * @return Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
     * 
     */
    public Optional<Output<Boolean>> database_subnet_enable_resource_name_dns_a_record_on_launch() {
        return Optional.ofNullable(this.database_subnet_enable_resource_name_dns_a_record_on_launch);
    }

    /**
     * Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
     * 
     */
    @Import(name="database_subnet_enable_resource_name_dns_aaaa_record_on_launch")
    private @Nullable Output<Boolean> database_subnet_enable_resource_name_dns_aaaa_record_on_launch;

    /**
     * @return Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
     * 
     */
    public Optional<Output<Boolean>> database_subnet_enable_resource_name_dns_aaaa_record_on_launch() {
        return Optional.ofNullable(this.database_subnet_enable_resource_name_dns_aaaa_record_on_launch);
    }

    /**
     * Name of database subnet group
     * 
     */
    @Import(name="database_subnet_group_name")
    private @Nullable Output<String> database_subnet_group_name;

    /**
     * @return Name of database subnet group
     * 
     */
    public Optional<Output<String>> database_subnet_group_name() {
        return Optional.ofNullable(this.database_subnet_group_name);
    }

    /**
     * Additional tags for the database subnet group
     * 
     */
    @Import(name="database_subnet_group_tags")
    private @Nullable Output<Map<String,String>> database_subnet_group_tags;

    /**
     * @return Additional tags for the database subnet group
     * 
     */
    public Optional<Output<Map<String,String>>> database_subnet_group_tags() {
        return Optional.ofNullable(this.database_subnet_group_tags);
    }

    /**
     * Indicates whether to create an IPv6-only subnet. Default: `false`
     * 
     */
    @Import(name="database_subnet_ipv6_native")
    private @Nullable Output<Boolean> database_subnet_ipv6_native;

    /**
     * @return Indicates whether to create an IPv6-only subnet. Default: `false`
     * 
     */
    public Optional<Output<Boolean>> database_subnet_ipv6_native() {
        return Optional.ofNullable(this.database_subnet_ipv6_native);
    }

    /**
     * Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
     * 
     */
    @Import(name="database_subnet_ipv6_prefixes")
    private @Nullable Output<List<String>> database_subnet_ipv6_prefixes;

    /**
     * @return Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
     * 
     */
    public Optional<Output<List<String>>> database_subnet_ipv6_prefixes() {
        return Optional.ofNullable(this.database_subnet_ipv6_prefixes);
    }

    /**
     * Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated
     * 
     */
    @Import(name="database_subnet_names")
    private @Nullable Output<List<String>> database_subnet_names;

    /**
     * @return Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated
     * 
     */
    public Optional<Output<List<String>>> database_subnet_names() {
        return Optional.ofNullable(this.database_subnet_names);
    }

    /**
     * The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
     * 
     */
    @Import(name="database_subnet_private_dns_hostname_type_on_launch")
    private @Nullable Output<String> database_subnet_private_dns_hostname_type_on_launch;

    /**
     * @return The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
     * 
     */
    public Optional<Output<String>> database_subnet_private_dns_hostname_type_on_launch() {
        return Optional.ofNullable(this.database_subnet_private_dns_hostname_type_on_launch);
    }

    /**
     * Suffix to append to database subnets name
     * 
     */
    @Import(name="database_subnet_suffix")
    private @Nullable Output<String> database_subnet_suffix;

    /**
     * @return Suffix to append to database subnets name
     * 
     */
    public Optional<Output<String>> database_subnet_suffix() {
        return Optional.ofNullable(this.database_subnet_suffix);
    }

    /**
     * Additional tags for the database subnets
     * 
     */
    @Import(name="database_subnet_tags")
    private @Nullable Output<Map<String,String>> database_subnet_tags;

    /**
     * @return Additional tags for the database subnets
     * 
     */
    public Optional<Output<Map<String,String>>> database_subnet_tags() {
        return Optional.ofNullable(this.database_subnet_tags);
    }

    /**
     * A list of database subnets inside the VPC
     * 
     */
    @Import(name="database_subnets")
    private @Nullable Output<List<String>> database_subnets;

    /**
     * @return A list of database subnets inside the VPC
     * 
     */
    public Optional<Output<List<String>>> database_subnets() {
        return Optional.ofNullable(this.database_subnets);
    }

    /**
     * List of maps of egress rules to set on the Default Network ACL
     * 
     */
    @Import(name="default_network_acl_egress")
    private @Nullable Output<List<Map<String,String>>> default_network_acl_egress;

    /**
     * @return List of maps of egress rules to set on the Default Network ACL
     * 
     */
    public Optional<Output<List<Map<String,String>>>> default_network_acl_egress() {
        return Optional.ofNullable(this.default_network_acl_egress);
    }

    /**
     * List of maps of ingress rules to set on the Default Network ACL
     * 
     */
    @Import(name="default_network_acl_ingress")
    private @Nullable Output<List<Map<String,String>>> default_network_acl_ingress;

    /**
     * @return List of maps of ingress rules to set on the Default Network ACL
     * 
     */
    public Optional<Output<List<Map<String,String>>>> default_network_acl_ingress() {
        return Optional.ofNullable(this.default_network_acl_ingress);
    }

    /**
     * Name to be used on the Default Network ACL
     * 
     */
    @Import(name="default_network_acl_name")
    private @Nullable Output<String> default_network_acl_name;

    /**
     * @return Name to be used on the Default Network ACL
     * 
     */
    public Optional<Output<String>> default_network_acl_name() {
        return Optional.ofNullable(this.default_network_acl_name);
    }

    /**
     * Additional tags for the Default Network ACL
     * 
     */
    @Import(name="default_network_acl_tags")
    private @Nullable Output<Map<String,String>> default_network_acl_tags;

    /**
     * @return Additional tags for the Default Network ACL
     * 
     */
    public Optional<Output<Map<String,String>>> default_network_acl_tags() {
        return Optional.ofNullable(this.default_network_acl_tags);
    }

    /**
     * Name to be used on the default route table
     * 
     */
    @Import(name="default_route_table_name")
    private @Nullable Output<String> default_route_table_name;

    /**
     * @return Name to be used on the default route table
     * 
     */
    public Optional<Output<String>> default_route_table_name() {
        return Optional.ofNullable(this.default_route_table_name);
    }

    /**
     * List of virtual gateways for propagation
     * 
     */
    @Import(name="default_route_table_propagating_vgws")
    private @Nullable Output<List<String>> default_route_table_propagating_vgws;

    /**
     * @return List of virtual gateways for propagation
     * 
     */
    public Optional<Output<List<String>>> default_route_table_propagating_vgws() {
        return Optional.ofNullable(this.default_route_table_propagating_vgws);
    }

    /**
     * Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route
     * 
     */
    @Import(name="default_route_table_routes")
    private @Nullable Output<List<Map<String,String>>> default_route_table_routes;

    /**
     * @return Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route
     * 
     */
    public Optional<Output<List<Map<String,String>>>> default_route_table_routes() {
        return Optional.ofNullable(this.default_route_table_routes);
    }

    /**
     * Additional tags for the default route table
     * 
     */
    @Import(name="default_route_table_tags")
    private @Nullable Output<Map<String,String>> default_route_table_tags;

    /**
     * @return Additional tags for the default route table
     * 
     */
    public Optional<Output<Map<String,String>>> default_route_table_tags() {
        return Optional.ofNullable(this.default_route_table_tags);
    }

    /**
     * List of maps of egress rules to set on the default security group
     * 
     */
    @Import(name="default_security_group_egress")
    private @Nullable Output<List<Map<String,String>>> default_security_group_egress;

    /**
     * @return List of maps of egress rules to set on the default security group
     * 
     */
    public Optional<Output<List<Map<String,String>>>> default_security_group_egress() {
        return Optional.ofNullable(this.default_security_group_egress);
    }

    /**
     * List of maps of ingress rules to set on the default security group
     * 
     */
    @Import(name="default_security_group_ingress")
    private @Nullable Output<List<Map<String,String>>> default_security_group_ingress;

    /**
     * @return List of maps of ingress rules to set on the default security group
     * 
     */
    public Optional<Output<List<Map<String,String>>>> default_security_group_ingress() {
        return Optional.ofNullable(this.default_security_group_ingress);
    }

    /**
     * Name to be used on the default security group
     * 
     */
    @Import(name="default_security_group_name")
    private @Nullable Output<String> default_security_group_name;

    /**
     * @return Name to be used on the default security group
     * 
     */
    public Optional<Output<String>> default_security_group_name() {
        return Optional.ofNullable(this.default_security_group_name);
    }

    /**
     * Additional tags for the default security group
     * 
     */
    @Import(name="default_security_group_tags")
    private @Nullable Output<Map<String,String>> default_security_group_tags;

    /**
     * @return Additional tags for the default security group
     * 
     */
    public Optional<Output<Map<String,String>>> default_security_group_tags() {
        return Optional.ofNullable(this.default_security_group_tags);
    }

    /**
     * Should be true to enable DNS hostnames in the Default VPC
     * 
     */
    @Import(name="default_vpc_enable_dns_hostnames")
    private @Nullable Output<Boolean> default_vpc_enable_dns_hostnames;

    /**
     * @return Should be true to enable DNS hostnames in the Default VPC
     * 
     */
    public Optional<Output<Boolean>> default_vpc_enable_dns_hostnames() {
        return Optional.ofNullable(this.default_vpc_enable_dns_hostnames);
    }

    /**
     * Should be true to enable DNS support in the Default VPC
     * 
     */
    @Import(name="default_vpc_enable_dns_support")
    private @Nullable Output<Boolean> default_vpc_enable_dns_support;

    /**
     * @return Should be true to enable DNS support in the Default VPC
     * 
     */
    public Optional<Output<Boolean>> default_vpc_enable_dns_support() {
        return Optional.ofNullable(this.default_vpc_enable_dns_support);
    }

    /**
     * Name to be used on the Default VPC
     * 
     */
    @Import(name="default_vpc_name")
    private @Nullable Output<String> default_vpc_name;

    /**
     * @return Name to be used on the Default VPC
     * 
     */
    public Optional<Output<String>> default_vpc_name() {
        return Optional.ofNullable(this.default_vpc_name);
    }

    /**
     * Additional tags for the Default VPC
     * 
     */
    @Import(name="default_vpc_tags")
    private @Nullable Output<Map<String,String>> default_vpc_tags;

    /**
     * @return Additional tags for the Default VPC
     * 
     */
    public Optional<Output<Map<String,String>>> default_vpc_tags() {
        return Optional.ofNullable(this.default_vpc_tags);
    }

    /**
     * Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)
     * 
     */
    @Import(name="dhcp_options_domain_name")
    private @Nullable Output<String> dhcp_options_domain_name;

    /**
     * @return Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)
     * 
     */
    public Optional<Output<String>> dhcp_options_domain_name() {
        return Optional.ofNullable(this.dhcp_options_domain_name);
    }

    /**
     * Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)
     * 
     */
    @Import(name="dhcp_options_domain_name_servers")
    private @Nullable Output<List<String>> dhcp_options_domain_name_servers;

    /**
     * @return Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)
     * 
     */
    public Optional<Output<List<String>>> dhcp_options_domain_name_servers() {
        return Optional.ofNullable(this.dhcp_options_domain_name_servers);
    }

    /**
     * How frequently, in seconds, a running instance with an IPv6 assigned to it goes through DHCPv6 lease renewal (requires enable_dhcp_options set to true)
     * 
     */
    @Import(name="dhcp_options_ipv6_address_preferred_lease_time")
    private @Nullable Output<Double> dhcp_options_ipv6_address_preferred_lease_time;

    /**
     * @return How frequently, in seconds, a running instance with an IPv6 assigned to it goes through DHCPv6 lease renewal (requires enable_dhcp_options set to true)
     * 
     */
    public Optional<Output<Double>> dhcp_options_ipv6_address_preferred_lease_time() {
        return Optional.ofNullable(this.dhcp_options_ipv6_address_preferred_lease_time);
    }

    /**
     * Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)
     * 
     */
    @Import(name="dhcp_options_netbios_name_servers")
    private @Nullable Output<List<String>> dhcp_options_netbios_name_servers;

    /**
     * @return Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)
     * 
     */
    public Optional<Output<List<String>>> dhcp_options_netbios_name_servers() {
        return Optional.ofNullable(this.dhcp_options_netbios_name_servers);
    }

    /**
     * Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)
     * 
     */
    @Import(name="dhcp_options_netbios_node_type")
    private @Nullable Output<String> dhcp_options_netbios_node_type;

    /**
     * @return Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)
     * 
     */
    public Optional<Output<String>> dhcp_options_netbios_node_type() {
        return Optional.ofNullable(this.dhcp_options_netbios_node_type);
    }

    /**
     * Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)
     * 
     */
    @Import(name="dhcp_options_ntp_servers")
    private @Nullable Output<List<String>> dhcp_options_ntp_servers;

    /**
     * @return Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)
     * 
     */
    public Optional<Output<List<String>>> dhcp_options_ntp_servers() {
        return Optional.ofNullable(this.dhcp_options_ntp_servers);
    }

    /**
     * Additional tags for the DHCP option set (requires enable_dhcp_options set to true)
     * 
     */
    @Import(name="dhcp_options_tags")
    private @Nullable Output<Map<String,String>> dhcp_options_tags;

    /**
     * @return Additional tags for the DHCP option set (requires enable_dhcp_options set to true)
     * 
     */
    public Optional<Output<Map<String,String>>> dhcp_options_tags() {
        return Optional.ofNullable(this.dhcp_options_tags);
    }

    /**
     * Additional tags for the elasticache subnets network ACL
     * 
     */
    @Import(name="elasticache_acl_tags")
    private @Nullable Output<Map<String,String>> elasticache_acl_tags;

    /**
     * @return Additional tags for the elasticache subnets network ACL
     * 
     */
    public Optional<Output<Map<String,String>>> elasticache_acl_tags() {
        return Optional.ofNullable(this.elasticache_acl_tags);
    }

    /**
     * Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets
     * 
     */
    @Import(name="elasticache_dedicated_network_acl")
    private @Nullable Output<Boolean> elasticache_dedicated_network_acl;

    /**
     * @return Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets
     * 
     */
    public Optional<Output<Boolean>> elasticache_dedicated_network_acl() {
        return Optional.ofNullable(this.elasticache_dedicated_network_acl);
    }

    /**
     * Elasticache subnets inbound network ACL rules
     * 
     */
    @Import(name="elasticache_inbound_acl_rules")
    private @Nullable Output<List<Map<String,String>>> elasticache_inbound_acl_rules;

    /**
     * @return Elasticache subnets inbound network ACL rules
     * 
     */
    public Optional<Output<List<Map<String,String>>>> elasticache_inbound_acl_rules() {
        return Optional.ofNullable(this.elasticache_inbound_acl_rules);
    }

    /**
     * Elasticache subnets outbound network ACL rules
     * 
     */
    @Import(name="elasticache_outbound_acl_rules")
    private @Nullable Output<List<Map<String,String>>> elasticache_outbound_acl_rules;

    /**
     * @return Elasticache subnets outbound network ACL rules
     * 
     */
    public Optional<Output<List<Map<String,String>>>> elasticache_outbound_acl_rules() {
        return Optional.ofNullable(this.elasticache_outbound_acl_rules);
    }

    /**
     * Additional tags for the elasticache route tables
     * 
     */
    @Import(name="elasticache_route_table_tags")
    private @Nullable Output<Map<String,String>> elasticache_route_table_tags;

    /**
     * @return Additional tags for the elasticache route tables
     * 
     */
    public Optional<Output<Map<String,String>>> elasticache_route_table_tags() {
        return Optional.ofNullable(this.elasticache_route_table_tags);
    }

    /**
     * Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
     * 
     */
    @Import(name="elasticache_subnet_assign_ipv6_address_on_creation")
    private @Nullable Output<Boolean> elasticache_subnet_assign_ipv6_address_on_creation;

    /**
     * @return Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
     * 
     */
    public Optional<Output<Boolean>> elasticache_subnet_assign_ipv6_address_on_creation() {
        return Optional.ofNullable(this.elasticache_subnet_assign_ipv6_address_on_creation);
    }

    /**
     * Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
     * 
     */
    @Import(name="elasticache_subnet_enable_dns64")
    private @Nullable Output<Boolean> elasticache_subnet_enable_dns64;

    /**
     * @return Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
     * 
     */
    public Optional<Output<Boolean>> elasticache_subnet_enable_dns64() {
        return Optional.ofNullable(this.elasticache_subnet_enable_dns64);
    }

    /**
     * Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
     * 
     */
    @Import(name="elasticache_subnet_enable_resource_name_dns_a_record_on_launch")
    private @Nullable Output<Boolean> elasticache_subnet_enable_resource_name_dns_a_record_on_launch;

    /**
     * @return Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
     * 
     */
    public Optional<Output<Boolean>> elasticache_subnet_enable_resource_name_dns_a_record_on_launch() {
        return Optional.ofNullable(this.elasticache_subnet_enable_resource_name_dns_a_record_on_launch);
    }

    /**
     * Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
     * 
     */
    @Import(name="elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch")
    private @Nullable Output<Boolean> elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch;

    /**
     * @return Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
     * 
     */
    public Optional<Output<Boolean>> elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch() {
        return Optional.ofNullable(this.elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch);
    }

    /**
     * Name of elasticache subnet group
     * 
     */
    @Import(name="elasticache_subnet_group_name")
    private @Nullable Output<String> elasticache_subnet_group_name;

    /**
     * @return Name of elasticache subnet group
     * 
     */
    public Optional<Output<String>> elasticache_subnet_group_name() {
        return Optional.ofNullable(this.elasticache_subnet_group_name);
    }

    /**
     * Additional tags for the elasticache subnet group
     * 
     */
    @Import(name="elasticache_subnet_group_tags")
    private @Nullable Output<Map<String,String>> elasticache_subnet_group_tags;

    /**
     * @return Additional tags for the elasticache subnet group
     * 
     */
    public Optional<Output<Map<String,String>>> elasticache_subnet_group_tags() {
        return Optional.ofNullable(this.elasticache_subnet_group_tags);
    }

    /**
     * Indicates whether to create an IPv6-only subnet. Default: `false`
     * 
     */
    @Import(name="elasticache_subnet_ipv6_native")
    private @Nullable Output<Boolean> elasticache_subnet_ipv6_native;

    /**
     * @return Indicates whether to create an IPv6-only subnet. Default: `false`
     * 
     */
    public Optional<Output<Boolean>> elasticache_subnet_ipv6_native() {
        return Optional.ofNullable(this.elasticache_subnet_ipv6_native);
    }

    /**
     * Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
     * 
     */
    @Import(name="elasticache_subnet_ipv6_prefixes")
    private @Nullable Output<List<String>> elasticache_subnet_ipv6_prefixes;

    /**
     * @return Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
     * 
     */
    public Optional<Output<List<String>>> elasticache_subnet_ipv6_prefixes() {
        return Optional.ofNullable(this.elasticache_subnet_ipv6_prefixes);
    }

    /**
     * Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated
     * 
     */
    @Import(name="elasticache_subnet_names")
    private @Nullable Output<List<String>> elasticache_subnet_names;

    /**
     * @return Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated
     * 
     */
    public Optional<Output<List<String>>> elasticache_subnet_names() {
        return Optional.ofNullable(this.elasticache_subnet_names);
    }

    /**
     * The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
     * 
     */
    @Import(name="elasticache_subnet_private_dns_hostname_type_on_launch")
    private @Nullable Output<String> elasticache_subnet_private_dns_hostname_type_on_launch;

    /**
     * @return The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
     * 
     */
    public Optional<Output<String>> elasticache_subnet_private_dns_hostname_type_on_launch() {
        return Optional.ofNullable(this.elasticache_subnet_private_dns_hostname_type_on_launch);
    }

    /**
     * Suffix to append to elasticache subnets name
     * 
     */
    @Import(name="elasticache_subnet_suffix")
    private @Nullable Output<String> elasticache_subnet_suffix;

    /**
     * @return Suffix to append to elasticache subnets name
     * 
     */
    public Optional<Output<String>> elasticache_subnet_suffix() {
        return Optional.ofNullable(this.elasticache_subnet_suffix);
    }

    /**
     * Additional tags for the elasticache subnets
     * 
     */
    @Import(name="elasticache_subnet_tags")
    private @Nullable Output<Map<String,String>> elasticache_subnet_tags;

    /**
     * @return Additional tags for the elasticache subnets
     * 
     */
    public Optional<Output<Map<String,String>>> elasticache_subnet_tags() {
        return Optional.ofNullable(this.elasticache_subnet_tags);
    }

    /**
     * A list of elasticache subnets inside the VPC
     * 
     */
    @Import(name="elasticache_subnets")
    private @Nullable Output<List<String>> elasticache_subnets;

    /**
     * @return A list of elasticache subnets inside the VPC
     * 
     */
    public Optional<Output<List<String>>> elasticache_subnets() {
        return Optional.ofNullable(this.elasticache_subnets);
    }

    /**
     * Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type
     * 
     */
    @Import(name="enable_dhcp_options")
    private @Nullable Output<Boolean> enable_dhcp_options;

    /**
     * @return Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type
     * 
     */
    public Optional<Output<Boolean>> enable_dhcp_options() {
        return Optional.ofNullable(this.enable_dhcp_options);
    }

    /**
     * Should be true to enable DNS hostnames in the VPC
     * 
     */
    @Import(name="enable_dns_hostnames")
    private @Nullable Output<Boolean> enable_dns_hostnames;

    /**
     * @return Should be true to enable DNS hostnames in the VPC
     * 
     */
    public Optional<Output<Boolean>> enable_dns_hostnames() {
        return Optional.ofNullable(this.enable_dns_hostnames);
    }

    /**
     * Should be true to enable DNS support in the VPC
     * 
     */
    @Import(name="enable_dns_support")
    private @Nullable Output<Boolean> enable_dns_support;

    /**
     * @return Should be true to enable DNS support in the VPC
     * 
     */
    public Optional<Output<Boolean>> enable_dns_support() {
        return Optional.ofNullable(this.enable_dns_support);
    }

    /**
     * Whether or not to enable VPC Flow Logs
     * 
     */
    @Import(name="enable_flow_log")
    private @Nullable Output<Boolean> enable_flow_log;

    /**
     * @return Whether or not to enable VPC Flow Logs
     * 
     */
    public Optional<Output<Boolean>> enable_flow_log() {
        return Optional.ofNullable(this.enable_flow_log);
    }

    /**
     * Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block
     * 
     */
    @Import(name="enable_ipv6")
    private @Nullable Output<Boolean> enable_ipv6;

    /**
     * @return Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block
     * 
     */
    public Optional<Output<Boolean>> enable_ipv6() {
        return Optional.ofNullable(this.enable_ipv6);
    }

    /**
     * Should be true if you want to provision NAT Gateways for each of your private networks
     * 
     */
    @Import(name="enable_nat_gateway")
    private @Nullable Output<Boolean> enable_nat_gateway;

    /**
     * @return Should be true if you want to provision NAT Gateways for each of your private networks
     * 
     */
    public Optional<Output<Boolean>> enable_nat_gateway() {
        return Optional.ofNullable(this.enable_nat_gateway);
    }

    /**
     * Determines whether network address usage metrics are enabled for the VPC
     * 
     */
    @Import(name="enable_network_address_usage_metrics")
    private @Nullable Output<Boolean> enable_network_address_usage_metrics;

    /**
     * @return Determines whether network address usage metrics are enabled for the VPC
     * 
     */
    public Optional<Output<Boolean>> enable_network_address_usage_metrics() {
        return Optional.ofNullable(this.enable_network_address_usage_metrics);
    }

    /**
     * Controls if redshift should have public routing table
     * 
     */
    @Import(name="enable_public_redshift")
    private @Nullable Output<Boolean> enable_public_redshift;

    /**
     * @return Controls if redshift should have public routing table
     * 
     */
    public Optional<Output<Boolean>> enable_public_redshift() {
        return Optional.ofNullable(this.enable_public_redshift);
    }

    /**
     * Should be true if you want to create a new VPN Gateway resource and attach it to the VPC
     * 
     */
    @Import(name="enable_vpn_gateway")
    private @Nullable Output<Boolean> enable_vpn_gateway;

    /**
     * @return Should be true if you want to create a new VPN Gateway resource and attach it to the VPC
     * 
     */
    public Optional<Output<Boolean>> enable_vpn_gateway() {
        return Optional.ofNullable(this.enable_vpn_gateway);
    }

    /**
     * List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)
     * 
     */
    @Import(name="external_nat_ip_ids")
    private @Nullable Output<List<String>> external_nat_ip_ids;

    /**
     * @return List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)
     * 
     */
    public Optional<Output<List<String>>> external_nat_ip_ids() {
        return Optional.ofNullable(this.external_nat_ip_ids);
    }

    /**
     * List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)
     * 
     */
    @Import(name="external_nat_ips")
    private @Nullable Output<List<String>> external_nat_ips;

    /**
     * @return List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)
     * 
     */
    public Optional<Output<List<String>>> external_nat_ips() {
        return Optional.ofNullable(this.external_nat_ips);
    }

    /**
     * The ARN for the IAM role that&#39;s used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided
     * 
     */
    @Import(name="flow_log_cloudwatch_iam_role_arn")
    private @Nullable Output<String> flow_log_cloudwatch_iam_role_arn;

    /**
     * @return The ARN for the IAM role that&#39;s used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided
     * 
     */
    public Optional<Output<String>> flow_log_cloudwatch_iam_role_arn() {
        return Optional.ofNullable(this.flow_log_cloudwatch_iam_role_arn);
    }

    /**
     * Additional conditions of the CloudWatch role assumption policy
     * 
     */
    @Import(name="flow_log_cloudwatch_iam_role_conditions")
    private @Nullable Output<List<FlowLogCloudwatchIamRoleConditionsArgs>> flow_log_cloudwatch_iam_role_conditions;

    /**
     * @return Additional conditions of the CloudWatch role assumption policy
     * 
     */
    public Optional<Output<List<FlowLogCloudwatchIamRoleConditionsArgs>>> flow_log_cloudwatch_iam_role_conditions() {
        return Optional.ofNullable(this.flow_log_cloudwatch_iam_role_conditions);
    }

    /**
     * Specified the log class of the log group. Possible values are: STANDARD or INFREQUENT_ACCESS
     * 
     */
    @Import(name="flow_log_cloudwatch_log_group_class")
    private @Nullable Output<String> flow_log_cloudwatch_log_group_class;

    /**
     * @return Specified the log class of the log group. Possible values are: STANDARD or INFREQUENT_ACCESS
     * 
     */
    public Optional<Output<String>> flow_log_cloudwatch_log_group_class() {
        return Optional.ofNullable(this.flow_log_cloudwatch_log_group_class);
    }

    /**
     * The ARN of the KMS Key to use when encrypting log data for VPC flow logs
     * 
     */
    @Import(name="flow_log_cloudwatch_log_group_kms_key_id")
    private @Nullable Output<String> flow_log_cloudwatch_log_group_kms_key_id;

    /**
     * @return The ARN of the KMS Key to use when encrypting log data for VPC flow logs
     * 
     */
    public Optional<Output<String>> flow_log_cloudwatch_log_group_kms_key_id() {
        return Optional.ofNullable(this.flow_log_cloudwatch_log_group_kms_key_id);
    }

    /**
     * Specifies the name prefix of CloudWatch Log Group for VPC flow logs
     * 
     */
    @Import(name="flow_log_cloudwatch_log_group_name_prefix")
    private @Nullable Output<String> flow_log_cloudwatch_log_group_name_prefix;

    /**
     * @return Specifies the name prefix of CloudWatch Log Group for VPC flow logs
     * 
     */
    public Optional<Output<String>> flow_log_cloudwatch_log_group_name_prefix() {
        return Optional.ofNullable(this.flow_log_cloudwatch_log_group_name_prefix);
    }

    /**
     * Specifies the name suffix of CloudWatch Log Group for VPC flow logs
     * 
     */
    @Import(name="flow_log_cloudwatch_log_group_name_suffix")
    private @Nullable Output<String> flow_log_cloudwatch_log_group_name_suffix;

    /**
     * @return Specifies the name suffix of CloudWatch Log Group for VPC flow logs
     * 
     */
    public Optional<Output<String>> flow_log_cloudwatch_log_group_name_suffix() {
        return Optional.ofNullable(this.flow_log_cloudwatch_log_group_name_suffix);
    }

    /**
     * Specifies the number of days you want to retain log events in the specified log group for VPC flow logs
     * 
     */
    @Import(name="flow_log_cloudwatch_log_group_retention_in_days")
    private @Nullable Output<Double> flow_log_cloudwatch_log_group_retention_in_days;

    /**
     * @return Specifies the number of days you want to retain log events in the specified log group for VPC flow logs
     * 
     */
    public Optional<Output<Double>> flow_log_cloudwatch_log_group_retention_in_days() {
        return Optional.ofNullable(this.flow_log_cloudwatch_log_group_retention_in_days);
    }

    /**
     *  Set to true if you do not wish the log group (and any logs it may contain) to be deleted at destroy time, and instead just remove the log group from the Terraform state
     * 
     */
    @Import(name="flow_log_cloudwatch_log_group_skip_destroy")
    private @Nullable Output<Boolean> flow_log_cloudwatch_log_group_skip_destroy;

    /**
     * @return  Set to true if you do not wish the log group (and any logs it may contain) to be deleted at destroy time, and instead just remove the log group from the Terraform state
     * 
     */
    public Optional<Output<Boolean>> flow_log_cloudwatch_log_group_skip_destroy() {
        return Optional.ofNullable(this.flow_log_cloudwatch_log_group_skip_destroy);
    }

    /**
     * (Optional) ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
     * 
     */
    @Import(name="flow_log_deliver_cross_account_role")
    private @Nullable Output<String> flow_log_deliver_cross_account_role;

    /**
     * @return (Optional) ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
     * 
     */
    public Optional<Output<String>> flow_log_deliver_cross_account_role() {
        return Optional.ofNullable(this.flow_log_deliver_cross_account_role);
    }

    /**
     * The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket&#39;s policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided
     * 
     */
    @Import(name="flow_log_destination_arn")
    private @Nullable Output<String> flow_log_destination_arn;

    /**
     * @return The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket&#39;s policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided
     * 
     */
    public Optional<Output<String>> flow_log_destination_arn() {
        return Optional.ofNullable(this.flow_log_destination_arn);
    }

    /**
     * Type of flow log destination. Can be s3, kinesis-data-firehose or cloud-watch-logs
     * 
     */
    @Import(name="flow_log_destination_type")
    private @Nullable Output<String> flow_log_destination_type;

    /**
     * @return Type of flow log destination. Can be s3, kinesis-data-firehose or cloud-watch-logs
     * 
     */
    public Optional<Output<String>> flow_log_destination_type() {
        return Optional.ofNullable(this.flow_log_destination_type);
    }

    /**
     * (Optional) The format for the flow log. Valid values: `plain-text`, `parquet`
     * 
     */
    @Import(name="flow_log_file_format")
    private @Nullable Output<String> flow_log_file_format;

    /**
     * @return (Optional) The format for the flow log. Valid values: `plain-text`, `parquet`
     * 
     */
    public Optional<Output<String>> flow_log_file_format() {
        return Optional.ofNullable(this.flow_log_file_format);
    }

    /**
     * (Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3
     * 
     */
    @Import(name="flow_log_hive_compatible_partitions")
    private @Nullable Output<Boolean> flow_log_hive_compatible_partitions;

    /**
     * @return (Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3
     * 
     */
    public Optional<Output<Boolean>> flow_log_hive_compatible_partitions() {
        return Optional.ofNullable(this.flow_log_hive_compatible_partitions);
    }

    /**
     * The fields to include in the flow log record, in the order in which they should appear
     * 
     */
    @Import(name="flow_log_log_format")
    private @Nullable Output<String> flow_log_log_format;

    /**
     * @return The fields to include in the flow log record, in the order in which they should appear
     * 
     */
    public Optional<Output<String>> flow_log_log_format() {
        return Optional.ofNullable(this.flow_log_log_format);
    }

    /**
     * The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds
     * 
     */
    @Import(name="flow_log_max_aggregation_interval")
    private @Nullable Output<Double> flow_log_max_aggregation_interval;

    /**
     * @return The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds
     * 
     */
    public Optional<Output<Double>> flow_log_max_aggregation_interval() {
        return Optional.ofNullable(this.flow_log_max_aggregation_interval);
    }

    /**
     * (Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries
     * 
     */
    @Import(name="flow_log_per_hour_partition")
    private @Nullable Output<Boolean> flow_log_per_hour_partition;

    /**
     * @return (Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries
     * 
     */
    public Optional<Output<Boolean>> flow_log_per_hour_partition() {
        return Optional.ofNullable(this.flow_log_per_hour_partition);
    }

    /**
     * The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL
     * 
     */
    @Import(name="flow_log_traffic_type")
    private @Nullable Output<String> flow_log_traffic_type;

    /**
     * @return The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL
     * 
     */
    public Optional<Output<String>> flow_log_traffic_type() {
        return Optional.ofNullable(this.flow_log_traffic_type);
    }

    /**
     * Additional tags for the internet gateway
     * 
     */
    @Import(name="igw_tags")
    private @Nullable Output<Map<String,String>> igw_tags;

    /**
     * @return Additional tags for the internet gateway
     * 
     */
    public Optional<Output<Map<String,String>>> igw_tags() {
        return Optional.ofNullable(this.igw_tags);
    }

    /**
     * A tenancy option for instances launched into the VPC
     * 
     */
    @Import(name="instance_tenancy")
    private @Nullable Output<String> instance_tenancy;

    /**
     * @return A tenancy option for instances launched into the VPC
     * 
     */
    public Optional<Output<String>> instance_tenancy() {
        return Optional.ofNullable(this.instance_tenancy);
    }

    /**
     * Additional tags for the intra subnets network ACL
     * 
     */
    @Import(name="intra_acl_tags")
    private @Nullable Output<Map<String,String>> intra_acl_tags;

    /**
     * @return Additional tags for the intra subnets network ACL
     * 
     */
    public Optional<Output<Map<String,String>>> intra_acl_tags() {
        return Optional.ofNullable(this.intra_acl_tags);
    }

    /**
     * Whether to use dedicated network ACL (not default) and custom rules for intra subnets
     * 
     */
    @Import(name="intra_dedicated_network_acl")
    private @Nullable Output<Boolean> intra_dedicated_network_acl;

    /**
     * @return Whether to use dedicated network ACL (not default) and custom rules for intra subnets
     * 
     */
    public Optional<Output<Boolean>> intra_dedicated_network_acl() {
        return Optional.ofNullable(this.intra_dedicated_network_acl);
    }

    /**
     * Intra subnets inbound network ACLs
     * 
     */
    @Import(name="intra_inbound_acl_rules")
    private @Nullable Output<List<Map<String,String>>> intra_inbound_acl_rules;

    /**
     * @return Intra subnets inbound network ACLs
     * 
     */
    public Optional<Output<List<Map<String,String>>>> intra_inbound_acl_rules() {
        return Optional.ofNullable(this.intra_inbound_acl_rules);
    }

    /**
     * Intra subnets outbound network ACLs
     * 
     */
    @Import(name="intra_outbound_acl_rules")
    private @Nullable Output<List<Map<String,String>>> intra_outbound_acl_rules;

    /**
     * @return Intra subnets outbound network ACLs
     * 
     */
    public Optional<Output<List<Map<String,String>>>> intra_outbound_acl_rules() {
        return Optional.ofNullable(this.intra_outbound_acl_rules);
    }

    /**
     * Additional tags for the intra route tables
     * 
     */
    @Import(name="intra_route_table_tags")
    private @Nullable Output<Map<String,String>> intra_route_table_tags;

    /**
     * @return Additional tags for the intra route tables
     * 
     */
    public Optional<Output<Map<String,String>>> intra_route_table_tags() {
        return Optional.ofNullable(this.intra_route_table_tags);
    }

    /**
     * Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
     * 
     */
    @Import(name="intra_subnet_assign_ipv6_address_on_creation")
    private @Nullable Output<Boolean> intra_subnet_assign_ipv6_address_on_creation;

    /**
     * @return Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
     * 
     */
    public Optional<Output<Boolean>> intra_subnet_assign_ipv6_address_on_creation() {
        return Optional.ofNullable(this.intra_subnet_assign_ipv6_address_on_creation);
    }

    /**
     * Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
     * 
     */
    @Import(name="intra_subnet_enable_dns64")
    private @Nullable Output<Boolean> intra_subnet_enable_dns64;

    /**
     * @return Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
     * 
     */
    public Optional<Output<Boolean>> intra_subnet_enable_dns64() {
        return Optional.ofNullable(this.intra_subnet_enable_dns64);
    }

    /**
     * Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
     * 
     */
    @Import(name="intra_subnet_enable_resource_name_dns_a_record_on_launch")
    private @Nullable Output<Boolean> intra_subnet_enable_resource_name_dns_a_record_on_launch;

    /**
     * @return Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
     * 
     */
    public Optional<Output<Boolean>> intra_subnet_enable_resource_name_dns_a_record_on_launch() {
        return Optional.ofNullable(this.intra_subnet_enable_resource_name_dns_a_record_on_launch);
    }

    /**
     * Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
     * 
     */
    @Import(name="intra_subnet_enable_resource_name_dns_aaaa_record_on_launch")
    private @Nullable Output<Boolean> intra_subnet_enable_resource_name_dns_aaaa_record_on_launch;

    /**
     * @return Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
     * 
     */
    public Optional<Output<Boolean>> intra_subnet_enable_resource_name_dns_aaaa_record_on_launch() {
        return Optional.ofNullable(this.intra_subnet_enable_resource_name_dns_aaaa_record_on_launch);
    }

    /**
     * Indicates whether to create an IPv6-only subnet. Default: `false`
     * 
     */
    @Import(name="intra_subnet_ipv6_native")
    private @Nullable Output<Boolean> intra_subnet_ipv6_native;

    /**
     * @return Indicates whether to create an IPv6-only subnet. Default: `false`
     * 
     */
    public Optional<Output<Boolean>> intra_subnet_ipv6_native() {
        return Optional.ofNullable(this.intra_subnet_ipv6_native);
    }

    /**
     * Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
     * 
     */
    @Import(name="intra_subnet_ipv6_prefixes")
    private @Nullable Output<List<String>> intra_subnet_ipv6_prefixes;

    /**
     * @return Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
     * 
     */
    public Optional<Output<List<String>>> intra_subnet_ipv6_prefixes() {
        return Optional.ofNullable(this.intra_subnet_ipv6_prefixes);
    }

    /**
     * Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated
     * 
     */
    @Import(name="intra_subnet_names")
    private @Nullable Output<List<String>> intra_subnet_names;

    /**
     * @return Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated
     * 
     */
    public Optional<Output<List<String>>> intra_subnet_names() {
        return Optional.ofNullable(this.intra_subnet_names);
    }

    /**
     * The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
     * 
     */
    @Import(name="intra_subnet_private_dns_hostname_type_on_launch")
    private @Nullable Output<String> intra_subnet_private_dns_hostname_type_on_launch;

    /**
     * @return The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
     * 
     */
    public Optional<Output<String>> intra_subnet_private_dns_hostname_type_on_launch() {
        return Optional.ofNullable(this.intra_subnet_private_dns_hostname_type_on_launch);
    }

    /**
     * Suffix to append to intra subnets name
     * 
     */
    @Import(name="intra_subnet_suffix")
    private @Nullable Output<String> intra_subnet_suffix;

    /**
     * @return Suffix to append to intra subnets name
     * 
     */
    public Optional<Output<String>> intra_subnet_suffix() {
        return Optional.ofNullable(this.intra_subnet_suffix);
    }

    /**
     * Additional tags for the intra subnets
     * 
     */
    @Import(name="intra_subnet_tags")
    private @Nullable Output<Map<String,String>> intra_subnet_tags;

    /**
     * @return Additional tags for the intra subnets
     * 
     */
    public Optional<Output<Map<String,String>>> intra_subnet_tags() {
        return Optional.ofNullable(this.intra_subnet_tags);
    }

    /**
     * A list of intra subnets inside the VPC
     * 
     */
    @Import(name="intra_subnets")
    private @Nullable Output<List<String>> intra_subnets;

    /**
     * @return A list of intra subnets inside the VPC
     * 
     */
    public Optional<Output<List<String>>> intra_subnets() {
        return Optional.ofNullable(this.intra_subnets);
    }

    /**
     * (Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC&#39;s CIDR
     * 
     */
    @Import(name="ipv4_ipam_pool_id")
    private @Nullable Output<String> ipv4_ipam_pool_id;

    /**
     * @return (Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC&#39;s CIDR
     * 
     */
    public Optional<Output<String>> ipv4_ipam_pool_id() {
        return Optional.ofNullable(this.ipv4_ipam_pool_id);
    }

    /**
     * (Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id
     * 
     */
    @Import(name="ipv4_netmask_length")
    private @Nullable Output<Double> ipv4_netmask_length;

    /**
     * @return (Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id
     * 
     */
    public Optional<Output<Double>> ipv4_netmask_length() {
        return Optional.ofNullable(this.ipv4_netmask_length);
    }

    /**
     * (Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`
     * 
     */
    @Import(name="ipv6_cidr")
    private @Nullable Output<String> ipv6_cidr;

    /**
     * @return (Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`
     * 
     */
    public Optional<Output<String>> ipv6_cidr() {
        return Optional.ofNullable(this.ipv6_cidr);
    }

    /**
     * By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones
     * 
     */
    @Import(name="ipv6_cidr_block_network_border_group")
    private @Nullable Output<String> ipv6_cidr_block_network_border_group;

    /**
     * @return By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones
     * 
     */
    public Optional<Output<String>> ipv6_cidr_block_network_border_group() {
        return Optional.ofNullable(this.ipv6_cidr_block_network_border_group);
    }

    /**
     * (Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`
     * 
     */
    @Import(name="ipv6_ipam_pool_id")
    private @Nullable Output<String> ipv6_ipam_pool_id;

    /**
     * @return (Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`
     * 
     */
    public Optional<Output<String>> ipv6_ipam_pool_id() {
        return Optional.ofNullable(this.ipv6_ipam_pool_id);
    }

    /**
     * (Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`
     * 
     */
    @Import(name="ipv6_netmask_length")
    private @Nullable Output<Double> ipv6_netmask_length;

    /**
     * @return (Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`
     * 
     */
    public Optional<Output<Double>> ipv6_netmask_length() {
        return Optional.ofNullable(this.ipv6_netmask_length);
    }

    /**
     * Should be true to adopt and manage Default Network ACL
     * 
     */
    @Import(name="manage_default_network_acl")
    private @Nullable Output<Boolean> manage_default_network_acl;

    /**
     * @return Should be true to adopt and manage Default Network ACL
     * 
     */
    public Optional<Output<Boolean>> manage_default_network_acl() {
        return Optional.ofNullable(this.manage_default_network_acl);
    }

    /**
     * Should be true to manage default route table
     * 
     */
    @Import(name="manage_default_route_table")
    private @Nullable Output<Boolean> manage_default_route_table;

    /**
     * @return Should be true to manage default route table
     * 
     */
    public Optional<Output<Boolean>> manage_default_route_table() {
        return Optional.ofNullable(this.manage_default_route_table);
    }

    /**
     * Should be true to adopt and manage default security group
     * 
     */
    @Import(name="manage_default_security_group")
    private @Nullable Output<Boolean> manage_default_security_group;

    /**
     * @return Should be true to adopt and manage default security group
     * 
     */
    public Optional<Output<Boolean>> manage_default_security_group() {
        return Optional.ofNullable(this.manage_default_security_group);
    }

    /**
     * Should be true to adopt and manage Default VPC
     * 
     */
    @Import(name="manage_default_vpc")
    private @Nullable Output<Boolean> manage_default_vpc;

    /**
     * @return Should be true to adopt and manage Default VPC
     * 
     */
    public Optional<Output<Boolean>> manage_default_vpc() {
        return Optional.ofNullable(this.manage_default_vpc);
    }

    /**
     * Specify true to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`
     * 
     */
    @Import(name="map_customer_owned_ip_on_launch")
    private @Nullable Output<Boolean> map_customer_owned_ip_on_launch;

    /**
     * @return Specify true to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`
     * 
     */
    public Optional<Output<Boolean>> map_customer_owned_ip_on_launch() {
        return Optional.ofNullable(this.map_customer_owned_ip_on_launch);
    }

    /**
     * Specify true to indicate that instances launched into the subnet should be assigned a public IP address. Default is `false`
     * 
     */
    @Import(name="map_public_ip_on_launch")
    private @Nullable Output<Boolean> map_public_ip_on_launch;

    /**
     * @return Specify true to indicate that instances launched into the subnet should be assigned a public IP address. Default is `false`
     * 
     */
    public Optional<Output<Boolean>> map_public_ip_on_launch() {
        return Optional.ofNullable(this.map_public_ip_on_launch);
    }

    /**
     * Name to be used on all the resources as identifier
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name to be used on all the resources as identifier
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Additional tags for the NAT EIP
     * 
     */
    @Import(name="nat_eip_tags")
    private @Nullable Output<Map<String,String>> nat_eip_tags;

    /**
     * @return Additional tags for the NAT EIP
     * 
     */
    public Optional<Output<Map<String,String>>> nat_eip_tags() {
        return Optional.ofNullable(this.nat_eip_tags);
    }

    /**
     * Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route
     * 
     */
    @Import(name="nat_gateway_destination_cidr_block")
    private @Nullable Output<String> nat_gateway_destination_cidr_block;

    /**
     * @return Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route
     * 
     */
    public Optional<Output<String>> nat_gateway_destination_cidr_block() {
        return Optional.ofNullable(this.nat_gateway_destination_cidr_block);
    }

    /**
     * Additional tags for the NAT gateways
     * 
     */
    @Import(name="nat_gateway_tags")
    private @Nullable Output<Map<String,String>> nat_gateway_tags;

    /**
     * @return Additional tags for the NAT gateways
     * 
     */
    public Optional<Output<Map<String,String>>> nat_gateway_tags() {
        return Optional.ofNullable(this.nat_gateway_tags);
    }

    /**
     * Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`
     * 
     */
    @Import(name="one_nat_gateway_per_az")
    private @Nullable Output<Boolean> one_nat_gateway_per_az;

    /**
     * @return Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`
     * 
     */
    public Optional<Output<Boolean>> one_nat_gateway_per_az() {
        return Optional.ofNullable(this.one_nat_gateway_per_az);
    }

    /**
     * Additional tags for the outpost subnets network ACL
     * 
     */
    @Import(name="outpost_acl_tags")
    private @Nullable Output<Map<String,String>> outpost_acl_tags;

    /**
     * @return Additional tags for the outpost subnets network ACL
     * 
     */
    public Optional<Output<Map<String,String>>> outpost_acl_tags() {
        return Optional.ofNullable(this.outpost_acl_tags);
    }

    /**
     * ARN of Outpost you want to create a subnet in
     * 
     */
    @Import(name="outpost_arn")
    private @Nullable Output<String> outpost_arn;

    /**
     * @return ARN of Outpost you want to create a subnet in
     * 
     */
    public Optional<Output<String>> outpost_arn() {
        return Optional.ofNullable(this.outpost_arn);
    }

    /**
     * AZ where Outpost is anchored
     * 
     */
    @Import(name="outpost_az")
    private @Nullable Output<String> outpost_az;

    /**
     * @return AZ where Outpost is anchored
     * 
     */
    public Optional<Output<String>> outpost_az() {
        return Optional.ofNullable(this.outpost_az);
    }

    /**
     * Whether to use dedicated network ACL (not default) and custom rules for outpost subnets
     * 
     */
    @Import(name="outpost_dedicated_network_acl")
    private @Nullable Output<Boolean> outpost_dedicated_network_acl;

    /**
     * @return Whether to use dedicated network ACL (not default) and custom rules for outpost subnets
     * 
     */
    public Optional<Output<Boolean>> outpost_dedicated_network_acl() {
        return Optional.ofNullable(this.outpost_dedicated_network_acl);
    }

    /**
     * Outpost subnets inbound network ACLs
     * 
     */
    @Import(name="outpost_inbound_acl_rules")
    private @Nullable Output<List<Map<String,String>>> outpost_inbound_acl_rules;

    /**
     * @return Outpost subnets inbound network ACLs
     * 
     */
    public Optional<Output<List<Map<String,String>>>> outpost_inbound_acl_rules() {
        return Optional.ofNullable(this.outpost_inbound_acl_rules);
    }

    /**
     * Outpost subnets outbound network ACLs
     * 
     */
    @Import(name="outpost_outbound_acl_rules")
    private @Nullable Output<List<Map<String,String>>> outpost_outbound_acl_rules;

    /**
     * @return Outpost subnets outbound network ACLs
     * 
     */
    public Optional<Output<List<Map<String,String>>>> outpost_outbound_acl_rules() {
        return Optional.ofNullable(this.outpost_outbound_acl_rules);
    }

    /**
     * Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
     * 
     */
    @Import(name="outpost_subnet_assign_ipv6_address_on_creation")
    private @Nullable Output<Boolean> outpost_subnet_assign_ipv6_address_on_creation;

    /**
     * @return Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
     * 
     */
    public Optional<Output<Boolean>> outpost_subnet_assign_ipv6_address_on_creation() {
        return Optional.ofNullable(this.outpost_subnet_assign_ipv6_address_on_creation);
    }

    /**
     * Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
     * 
     */
    @Import(name="outpost_subnet_enable_dns64")
    private @Nullable Output<Boolean> outpost_subnet_enable_dns64;

    /**
     * @return Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
     * 
     */
    public Optional<Output<Boolean>> outpost_subnet_enable_dns64() {
        return Optional.ofNullable(this.outpost_subnet_enable_dns64);
    }

    /**
     * Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
     * 
     */
    @Import(name="outpost_subnet_enable_resource_name_dns_a_record_on_launch")
    private @Nullable Output<Boolean> outpost_subnet_enable_resource_name_dns_a_record_on_launch;

    /**
     * @return Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
     * 
     */
    public Optional<Output<Boolean>> outpost_subnet_enable_resource_name_dns_a_record_on_launch() {
        return Optional.ofNullable(this.outpost_subnet_enable_resource_name_dns_a_record_on_launch);
    }

    /**
     * Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
     * 
     */
    @Import(name="outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch")
    private @Nullable Output<Boolean> outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch;

    /**
     * @return Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
     * 
     */
    public Optional<Output<Boolean>> outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch() {
        return Optional.ofNullable(this.outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch);
    }

    /**
     * Indicates whether to create an IPv6-only subnet. Default: `false`
     * 
     */
    @Import(name="outpost_subnet_ipv6_native")
    private @Nullable Output<Boolean> outpost_subnet_ipv6_native;

    /**
     * @return Indicates whether to create an IPv6-only subnet. Default: `false`
     * 
     */
    public Optional<Output<Boolean>> outpost_subnet_ipv6_native() {
        return Optional.ofNullable(this.outpost_subnet_ipv6_native);
    }

    /**
     * Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
     * 
     */
    @Import(name="outpost_subnet_ipv6_prefixes")
    private @Nullable Output<List<String>> outpost_subnet_ipv6_prefixes;

    /**
     * @return Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
     * 
     */
    public Optional<Output<List<String>>> outpost_subnet_ipv6_prefixes() {
        return Optional.ofNullable(this.outpost_subnet_ipv6_prefixes);
    }

    /**
     * Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated
     * 
     */
    @Import(name="outpost_subnet_names")
    private @Nullable Output<List<String>> outpost_subnet_names;

    /**
     * @return Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated
     * 
     */
    public Optional<Output<List<String>>> outpost_subnet_names() {
        return Optional.ofNullable(this.outpost_subnet_names);
    }

    /**
     * The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
     * 
     */
    @Import(name="outpost_subnet_private_dns_hostname_type_on_launch")
    private @Nullable Output<String> outpost_subnet_private_dns_hostname_type_on_launch;

    /**
     * @return The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
     * 
     */
    public Optional<Output<String>> outpost_subnet_private_dns_hostname_type_on_launch() {
        return Optional.ofNullable(this.outpost_subnet_private_dns_hostname_type_on_launch);
    }

    /**
     * Suffix to append to outpost subnets name
     * 
     */
    @Import(name="outpost_subnet_suffix")
    private @Nullable Output<String> outpost_subnet_suffix;

    /**
     * @return Suffix to append to outpost subnets name
     * 
     */
    public Optional<Output<String>> outpost_subnet_suffix() {
        return Optional.ofNullable(this.outpost_subnet_suffix);
    }

    /**
     * Additional tags for the outpost subnets
     * 
     */
    @Import(name="outpost_subnet_tags")
    private @Nullable Output<Map<String,String>> outpost_subnet_tags;

    /**
     * @return Additional tags for the outpost subnets
     * 
     */
    public Optional<Output<Map<String,String>>> outpost_subnet_tags() {
        return Optional.ofNullable(this.outpost_subnet_tags);
    }

    /**
     * A list of outpost subnets inside the VPC
     * 
     */
    @Import(name="outpost_subnets")
    private @Nullable Output<List<String>> outpost_subnets;

    /**
     * @return A list of outpost subnets inside the VPC
     * 
     */
    public Optional<Output<List<String>>> outpost_subnets() {
        return Optional.ofNullable(this.outpost_subnets);
    }

    /**
     * Additional tags for the private subnets network ACL
     * 
     */
    @Import(name="private_acl_tags")
    private @Nullable Output<Map<String,String>> private_acl_tags;

    /**
     * @return Additional tags for the private subnets network ACL
     * 
     */
    public Optional<Output<Map<String,String>>> private_acl_tags() {
        return Optional.ofNullable(this.private_acl_tags);
    }

    /**
     * Whether to use dedicated network ACL (not default) and custom rules for private subnets
     * 
     */
    @Import(name="private_dedicated_network_acl")
    private @Nullable Output<Boolean> private_dedicated_network_acl;

    /**
     * @return Whether to use dedicated network ACL (not default) and custom rules for private subnets
     * 
     */
    public Optional<Output<Boolean>> private_dedicated_network_acl() {
        return Optional.ofNullable(this.private_dedicated_network_acl);
    }

    /**
     * Private subnets inbound network ACLs
     * 
     */
    @Import(name="private_inbound_acl_rules")
    private @Nullable Output<List<Map<String,String>>> private_inbound_acl_rules;

    /**
     * @return Private subnets inbound network ACLs
     * 
     */
    public Optional<Output<List<Map<String,String>>>> private_inbound_acl_rules() {
        return Optional.ofNullable(this.private_inbound_acl_rules);
    }

    /**
     * Private subnets outbound network ACLs
     * 
     */
    @Import(name="private_outbound_acl_rules")
    private @Nullable Output<List<Map<String,String>>> private_outbound_acl_rules;

    /**
     * @return Private subnets outbound network ACLs
     * 
     */
    public Optional<Output<List<Map<String,String>>>> private_outbound_acl_rules() {
        return Optional.ofNullable(this.private_outbound_acl_rules);
    }

    /**
     * Additional tags for the private route tables
     * 
     */
    @Import(name="private_route_table_tags")
    private @Nullable Output<Map<String,String>> private_route_table_tags;

    /**
     * @return Additional tags for the private route tables
     * 
     */
    public Optional<Output<Map<String,String>>> private_route_table_tags() {
        return Optional.ofNullable(this.private_route_table_tags);
    }

    /**
     * Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
     * 
     */
    @Import(name="private_subnet_assign_ipv6_address_on_creation")
    private @Nullable Output<Boolean> private_subnet_assign_ipv6_address_on_creation;

    /**
     * @return Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
     * 
     */
    public Optional<Output<Boolean>> private_subnet_assign_ipv6_address_on_creation() {
        return Optional.ofNullable(this.private_subnet_assign_ipv6_address_on_creation);
    }

    /**
     * Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
     * 
     */
    @Import(name="private_subnet_enable_dns64")
    private @Nullable Output<Boolean> private_subnet_enable_dns64;

    /**
     * @return Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
     * 
     */
    public Optional<Output<Boolean>> private_subnet_enable_dns64() {
        return Optional.ofNullable(this.private_subnet_enable_dns64);
    }

    /**
     * Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
     * 
     */
    @Import(name="private_subnet_enable_resource_name_dns_a_record_on_launch")
    private @Nullable Output<Boolean> private_subnet_enable_resource_name_dns_a_record_on_launch;

    /**
     * @return Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
     * 
     */
    public Optional<Output<Boolean>> private_subnet_enable_resource_name_dns_a_record_on_launch() {
        return Optional.ofNullable(this.private_subnet_enable_resource_name_dns_a_record_on_launch);
    }

    /**
     * Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
     * 
     */
    @Import(name="private_subnet_enable_resource_name_dns_aaaa_record_on_launch")
    private @Nullable Output<Boolean> private_subnet_enable_resource_name_dns_aaaa_record_on_launch;

    /**
     * @return Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
     * 
     */
    public Optional<Output<Boolean>> private_subnet_enable_resource_name_dns_aaaa_record_on_launch() {
        return Optional.ofNullable(this.private_subnet_enable_resource_name_dns_aaaa_record_on_launch);
    }

    /**
     * Indicates whether to create an IPv6-only subnet. Default: `false`
     * 
     */
    @Import(name="private_subnet_ipv6_native")
    private @Nullable Output<Boolean> private_subnet_ipv6_native;

    /**
     * @return Indicates whether to create an IPv6-only subnet. Default: `false`
     * 
     */
    public Optional<Output<Boolean>> private_subnet_ipv6_native() {
        return Optional.ofNullable(this.private_subnet_ipv6_native);
    }

    /**
     * Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
     * 
     */
    @Import(name="private_subnet_ipv6_prefixes")
    private @Nullable Output<List<String>> private_subnet_ipv6_prefixes;

    /**
     * @return Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
     * 
     */
    public Optional<Output<List<String>>> private_subnet_ipv6_prefixes() {
        return Optional.ofNullable(this.private_subnet_ipv6_prefixes);
    }

    /**
     * Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated
     * 
     */
    @Import(name="private_subnet_names")
    private @Nullable Output<List<String>> private_subnet_names;

    /**
     * @return Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated
     * 
     */
    public Optional<Output<List<String>>> private_subnet_names() {
        return Optional.ofNullable(this.private_subnet_names);
    }

    /**
     * The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
     * 
     */
    @Import(name="private_subnet_private_dns_hostname_type_on_launch")
    private @Nullable Output<String> private_subnet_private_dns_hostname_type_on_launch;

    /**
     * @return The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
     * 
     */
    public Optional<Output<String>> private_subnet_private_dns_hostname_type_on_launch() {
        return Optional.ofNullable(this.private_subnet_private_dns_hostname_type_on_launch);
    }

    /**
     * Suffix to append to private subnets name
     * 
     */
    @Import(name="private_subnet_suffix")
    private @Nullable Output<String> private_subnet_suffix;

    /**
     * @return Suffix to append to private subnets name
     * 
     */
    public Optional<Output<String>> private_subnet_suffix() {
        return Optional.ofNullable(this.private_subnet_suffix);
    }

    /**
     * Additional tags for the private subnets
     * 
     */
    @Import(name="private_subnet_tags")
    private @Nullable Output<Map<String,String>> private_subnet_tags;

    /**
     * @return Additional tags for the private subnets
     * 
     */
    public Optional<Output<Map<String,String>>> private_subnet_tags() {
        return Optional.ofNullable(this.private_subnet_tags);
    }

    /**
     * Additional tags for the private subnets where the primary key is the AZ
     * 
     */
    @Import(name="private_subnet_tags_per_az")
    private @Nullable Output<Map<String,Map<String,String>>> private_subnet_tags_per_az;

    /**
     * @return Additional tags for the private subnets where the primary key is the AZ
     * 
     */
    public Optional<Output<Map<String,Map<String,String>>>> private_subnet_tags_per_az() {
        return Optional.ofNullable(this.private_subnet_tags_per_az);
    }

    /**
     * A list of private subnets inside the VPC
     * 
     */
    @Import(name="private_subnets")
    private @Nullable Output<List<String>> private_subnets;

    /**
     * @return A list of private subnets inside the VPC
     * 
     */
    public Optional<Output<List<String>>> private_subnets() {
        return Optional.ofNullable(this.private_subnets);
    }

    /**
     * Should be true if you want route table propagation
     * 
     */
    @Import(name="propagate_intra_route_tables_vgw")
    private @Nullable Output<Boolean> propagate_intra_route_tables_vgw;

    /**
     * @return Should be true if you want route table propagation
     * 
     */
    public Optional<Output<Boolean>> propagate_intra_route_tables_vgw() {
        return Optional.ofNullable(this.propagate_intra_route_tables_vgw);
    }

    /**
     * Should be true if you want route table propagation
     * 
     */
    @Import(name="propagate_private_route_tables_vgw")
    private @Nullable Output<Boolean> propagate_private_route_tables_vgw;

    /**
     * @return Should be true if you want route table propagation
     * 
     */
    public Optional<Output<Boolean>> propagate_private_route_tables_vgw() {
        return Optional.ofNullable(this.propagate_private_route_tables_vgw);
    }

    /**
     * Should be true if you want route table propagation
     * 
     */
    @Import(name="propagate_public_route_tables_vgw")
    private @Nullable Output<Boolean> propagate_public_route_tables_vgw;

    /**
     * @return Should be true if you want route table propagation
     * 
     */
    public Optional<Output<Boolean>> propagate_public_route_tables_vgw() {
        return Optional.ofNullable(this.propagate_public_route_tables_vgw);
    }

    /**
     * Additional tags for the public subnets network ACL
     * 
     */
    @Import(name="public_acl_tags")
    private @Nullable Output<Map<String,String>> public_acl_tags;

    /**
     * @return Additional tags for the public subnets network ACL
     * 
     */
    public Optional<Output<Map<String,String>>> public_acl_tags() {
        return Optional.ofNullable(this.public_acl_tags);
    }

    /**
     * Whether to use dedicated network ACL (not default) and custom rules for public subnets
     * 
     */
    @Import(name="public_dedicated_network_acl")
    private @Nullable Output<Boolean> public_dedicated_network_acl;

    /**
     * @return Whether to use dedicated network ACL (not default) and custom rules for public subnets
     * 
     */
    public Optional<Output<Boolean>> public_dedicated_network_acl() {
        return Optional.ofNullable(this.public_dedicated_network_acl);
    }

    /**
     * Public subnets inbound network ACLs
     * 
     */
    @Import(name="public_inbound_acl_rules")
    private @Nullable Output<List<Map<String,String>>> public_inbound_acl_rules;

    /**
     * @return Public subnets inbound network ACLs
     * 
     */
    public Optional<Output<List<Map<String,String>>>> public_inbound_acl_rules() {
        return Optional.ofNullable(this.public_inbound_acl_rules);
    }

    /**
     * Public subnets outbound network ACLs
     * 
     */
    @Import(name="public_outbound_acl_rules")
    private @Nullable Output<List<Map<String,String>>> public_outbound_acl_rules;

    /**
     * @return Public subnets outbound network ACLs
     * 
     */
    public Optional<Output<List<Map<String,String>>>> public_outbound_acl_rules() {
        return Optional.ofNullable(this.public_outbound_acl_rules);
    }

    /**
     * Additional tags for the public route tables
     * 
     */
    @Import(name="public_route_table_tags")
    private @Nullable Output<Map<String,String>> public_route_table_tags;

    /**
     * @return Additional tags for the public route tables
     * 
     */
    public Optional<Output<Map<String,String>>> public_route_table_tags() {
        return Optional.ofNullable(this.public_route_table_tags);
    }

    /**
     * Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
     * 
     */
    @Import(name="public_subnet_assign_ipv6_address_on_creation")
    private @Nullable Output<Boolean> public_subnet_assign_ipv6_address_on_creation;

    /**
     * @return Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
     * 
     */
    public Optional<Output<Boolean>> public_subnet_assign_ipv6_address_on_creation() {
        return Optional.ofNullable(this.public_subnet_assign_ipv6_address_on_creation);
    }

    /**
     * Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
     * 
     */
    @Import(name="public_subnet_enable_dns64")
    private @Nullable Output<Boolean> public_subnet_enable_dns64;

    /**
     * @return Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
     * 
     */
    public Optional<Output<Boolean>> public_subnet_enable_dns64() {
        return Optional.ofNullable(this.public_subnet_enable_dns64);
    }

    /**
     * Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
     * 
     */
    @Import(name="public_subnet_enable_resource_name_dns_a_record_on_launch")
    private @Nullable Output<Boolean> public_subnet_enable_resource_name_dns_a_record_on_launch;

    /**
     * @return Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
     * 
     */
    public Optional<Output<Boolean>> public_subnet_enable_resource_name_dns_a_record_on_launch() {
        return Optional.ofNullable(this.public_subnet_enable_resource_name_dns_a_record_on_launch);
    }

    /**
     * Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
     * 
     */
    @Import(name="public_subnet_enable_resource_name_dns_aaaa_record_on_launch")
    private @Nullable Output<Boolean> public_subnet_enable_resource_name_dns_aaaa_record_on_launch;

    /**
     * @return Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
     * 
     */
    public Optional<Output<Boolean>> public_subnet_enable_resource_name_dns_aaaa_record_on_launch() {
        return Optional.ofNullable(this.public_subnet_enable_resource_name_dns_aaaa_record_on_launch);
    }

    /**
     * Indicates whether to create an IPv6-only subnet. Default: `false`
     * 
     */
    @Import(name="public_subnet_ipv6_native")
    private @Nullable Output<Boolean> public_subnet_ipv6_native;

    /**
     * @return Indicates whether to create an IPv6-only subnet. Default: `false`
     * 
     */
    public Optional<Output<Boolean>> public_subnet_ipv6_native() {
        return Optional.ofNullable(this.public_subnet_ipv6_native);
    }

    /**
     * Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
     * 
     */
    @Import(name="public_subnet_ipv6_prefixes")
    private @Nullable Output<List<String>> public_subnet_ipv6_prefixes;

    /**
     * @return Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
     * 
     */
    public Optional<Output<List<String>>> public_subnet_ipv6_prefixes() {
        return Optional.ofNullable(this.public_subnet_ipv6_prefixes);
    }

    /**
     * Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated
     * 
     */
    @Import(name="public_subnet_names")
    private @Nullable Output<List<String>> public_subnet_names;

    /**
     * @return Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated
     * 
     */
    public Optional<Output<List<String>>> public_subnet_names() {
        return Optional.ofNullable(this.public_subnet_names);
    }

    /**
     * The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
     * 
     */
    @Import(name="public_subnet_private_dns_hostname_type_on_launch")
    private @Nullable Output<String> public_subnet_private_dns_hostname_type_on_launch;

    /**
     * @return The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
     * 
     */
    public Optional<Output<String>> public_subnet_private_dns_hostname_type_on_launch() {
        return Optional.ofNullable(this.public_subnet_private_dns_hostname_type_on_launch);
    }

    /**
     * Suffix to append to public subnets name
     * 
     */
    @Import(name="public_subnet_suffix")
    private @Nullable Output<String> public_subnet_suffix;

    /**
     * @return Suffix to append to public subnets name
     * 
     */
    public Optional<Output<String>> public_subnet_suffix() {
        return Optional.ofNullable(this.public_subnet_suffix);
    }

    /**
     * Additional tags for the public subnets
     * 
     */
    @Import(name="public_subnet_tags")
    private @Nullable Output<Map<String,String>> public_subnet_tags;

    /**
     * @return Additional tags for the public subnets
     * 
     */
    public Optional<Output<Map<String,String>>> public_subnet_tags() {
        return Optional.ofNullable(this.public_subnet_tags);
    }

    /**
     * Additional tags for the public subnets where the primary key is the AZ
     * 
     */
    @Import(name="public_subnet_tags_per_az")
    private @Nullable Output<Map<String,Map<String,String>>> public_subnet_tags_per_az;

    /**
     * @return Additional tags for the public subnets where the primary key is the AZ
     * 
     */
    public Optional<Output<Map<String,Map<String,String>>>> public_subnet_tags_per_az() {
        return Optional.ofNullable(this.public_subnet_tags_per_az);
    }

    /**
     * A list of public subnets inside the VPC
     * 
     */
    @Import(name="public_subnets")
    private @Nullable Output<List<String>> public_subnets;

    /**
     * @return A list of public subnets inside the VPC
     * 
     */
    public Optional<Output<List<String>>> public_subnets() {
        return Optional.ofNullable(this.public_subnets);
    }

    /**
     * Do you agree that Putin doesn&#39;t respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!
     * 
     */
    @Import(name="putin_khuylo")
    private @Nullable Output<Boolean> putin_khuylo;

    /**
     * @return Do you agree that Putin doesn&#39;t respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!
     * 
     */
    public Optional<Output<Boolean>> putin_khuylo() {
        return Optional.ofNullable(this.putin_khuylo);
    }

    /**
     * Additional tags for the redshift subnets network ACL
     * 
     */
    @Import(name="redshift_acl_tags")
    private @Nullable Output<Map<String,String>> redshift_acl_tags;

    /**
     * @return Additional tags for the redshift subnets network ACL
     * 
     */
    public Optional<Output<Map<String,String>>> redshift_acl_tags() {
        return Optional.ofNullable(this.redshift_acl_tags);
    }

    /**
     * Whether to use dedicated network ACL (not default) and custom rules for redshift subnets
     * 
     */
    @Import(name="redshift_dedicated_network_acl")
    private @Nullable Output<Boolean> redshift_dedicated_network_acl;

    /**
     * @return Whether to use dedicated network ACL (not default) and custom rules for redshift subnets
     * 
     */
    public Optional<Output<Boolean>> redshift_dedicated_network_acl() {
        return Optional.ofNullable(this.redshift_dedicated_network_acl);
    }

    /**
     * Redshift subnets inbound network ACL rules
     * 
     */
    @Import(name="redshift_inbound_acl_rules")
    private @Nullable Output<List<Map<String,String>>> redshift_inbound_acl_rules;

    /**
     * @return Redshift subnets inbound network ACL rules
     * 
     */
    public Optional<Output<List<Map<String,String>>>> redshift_inbound_acl_rules() {
        return Optional.ofNullable(this.redshift_inbound_acl_rules);
    }

    /**
     * Redshift subnets outbound network ACL rules
     * 
     */
    @Import(name="redshift_outbound_acl_rules")
    private @Nullable Output<List<Map<String,String>>> redshift_outbound_acl_rules;

    /**
     * @return Redshift subnets outbound network ACL rules
     * 
     */
    public Optional<Output<List<Map<String,String>>>> redshift_outbound_acl_rules() {
        return Optional.ofNullable(this.redshift_outbound_acl_rules);
    }

    /**
     * Additional tags for the redshift route tables
     * 
     */
    @Import(name="redshift_route_table_tags")
    private @Nullable Output<Map<String,String>> redshift_route_table_tags;

    /**
     * @return Additional tags for the redshift route tables
     * 
     */
    public Optional<Output<Map<String,String>>> redshift_route_table_tags() {
        return Optional.ofNullable(this.redshift_route_table_tags);
    }

    /**
     * Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
     * 
     */
    @Import(name="redshift_subnet_assign_ipv6_address_on_creation")
    private @Nullable Output<Boolean> redshift_subnet_assign_ipv6_address_on_creation;

    /**
     * @return Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
     * 
     */
    public Optional<Output<Boolean>> redshift_subnet_assign_ipv6_address_on_creation() {
        return Optional.ofNullable(this.redshift_subnet_assign_ipv6_address_on_creation);
    }

    /**
     * Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
     * 
     */
    @Import(name="redshift_subnet_enable_dns64")
    private @Nullable Output<Boolean> redshift_subnet_enable_dns64;

    /**
     * @return Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
     * 
     */
    public Optional<Output<Boolean>> redshift_subnet_enable_dns64() {
        return Optional.ofNullable(this.redshift_subnet_enable_dns64);
    }

    /**
     * Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
     * 
     */
    @Import(name="redshift_subnet_enable_resource_name_dns_a_record_on_launch")
    private @Nullable Output<Boolean> redshift_subnet_enable_resource_name_dns_a_record_on_launch;

    /**
     * @return Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
     * 
     */
    public Optional<Output<Boolean>> redshift_subnet_enable_resource_name_dns_a_record_on_launch() {
        return Optional.ofNullable(this.redshift_subnet_enable_resource_name_dns_a_record_on_launch);
    }

    /**
     * Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
     * 
     */
    @Import(name="redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch")
    private @Nullable Output<Boolean> redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch;

    /**
     * @return Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
     * 
     */
    public Optional<Output<Boolean>> redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch() {
        return Optional.ofNullable(this.redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch);
    }

    /**
     * Name of redshift subnet group
     * 
     */
    @Import(name="redshift_subnet_group_name")
    private @Nullable Output<String> redshift_subnet_group_name;

    /**
     * @return Name of redshift subnet group
     * 
     */
    public Optional<Output<String>> redshift_subnet_group_name() {
        return Optional.ofNullable(this.redshift_subnet_group_name);
    }

    /**
     * Additional tags for the redshift subnet group
     * 
     */
    @Import(name="redshift_subnet_group_tags")
    private @Nullable Output<Map<String,String>> redshift_subnet_group_tags;

    /**
     * @return Additional tags for the redshift subnet group
     * 
     */
    public Optional<Output<Map<String,String>>> redshift_subnet_group_tags() {
        return Optional.ofNullable(this.redshift_subnet_group_tags);
    }

    /**
     * Indicates whether to create an IPv6-only subnet. Default: `false`
     * 
     */
    @Import(name="redshift_subnet_ipv6_native")
    private @Nullable Output<Boolean> redshift_subnet_ipv6_native;

    /**
     * @return Indicates whether to create an IPv6-only subnet. Default: `false`
     * 
     */
    public Optional<Output<Boolean>> redshift_subnet_ipv6_native() {
        return Optional.ofNullable(this.redshift_subnet_ipv6_native);
    }

    /**
     * Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
     * 
     */
    @Import(name="redshift_subnet_ipv6_prefixes")
    private @Nullable Output<List<String>> redshift_subnet_ipv6_prefixes;

    /**
     * @return Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
     * 
     */
    public Optional<Output<List<String>>> redshift_subnet_ipv6_prefixes() {
        return Optional.ofNullable(this.redshift_subnet_ipv6_prefixes);
    }

    /**
     * Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated
     * 
     */
    @Import(name="redshift_subnet_names")
    private @Nullable Output<List<String>> redshift_subnet_names;

    /**
     * @return Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated
     * 
     */
    public Optional<Output<List<String>>> redshift_subnet_names() {
        return Optional.ofNullable(this.redshift_subnet_names);
    }

    /**
     * The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
     * 
     */
    @Import(name="redshift_subnet_private_dns_hostname_type_on_launch")
    private @Nullable Output<String> redshift_subnet_private_dns_hostname_type_on_launch;

    /**
     * @return The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
     * 
     */
    public Optional<Output<String>> redshift_subnet_private_dns_hostname_type_on_launch() {
        return Optional.ofNullable(this.redshift_subnet_private_dns_hostname_type_on_launch);
    }

    /**
     * Suffix to append to redshift subnets name
     * 
     */
    @Import(name="redshift_subnet_suffix")
    private @Nullable Output<String> redshift_subnet_suffix;

    /**
     * @return Suffix to append to redshift subnets name
     * 
     */
    public Optional<Output<String>> redshift_subnet_suffix() {
        return Optional.ofNullable(this.redshift_subnet_suffix);
    }

    /**
     * Additional tags for the redshift subnets
     * 
     */
    @Import(name="redshift_subnet_tags")
    private @Nullable Output<Map<String,String>> redshift_subnet_tags;

    /**
     * @return Additional tags for the redshift subnets
     * 
     */
    public Optional<Output<Map<String,String>>> redshift_subnet_tags() {
        return Optional.ofNullable(this.redshift_subnet_tags);
    }

    /**
     * A list of redshift subnets inside the VPC
     * 
     */
    @Import(name="redshift_subnets")
    private @Nullable Output<List<String>> redshift_subnets;

    /**
     * @return A list of redshift subnets inside the VPC
     * 
     */
    public Optional<Output<List<String>>> redshift_subnets() {
        return Optional.ofNullable(this.redshift_subnets);
    }

    /**
     * Should be true if you don&#39;t want EIPs to be created for your NAT Gateways and will instead pass them in via the &#39;external_nat_ip_ids&#39; variable
     * 
     */
    @Import(name="reuse_nat_ips")
    private @Nullable Output<Boolean> reuse_nat_ips;

    /**
     * @return Should be true if you don&#39;t want EIPs to be created for your NAT Gateways and will instead pass them in via the &#39;external_nat_ip_ids&#39; variable
     * 
     */
    public Optional<Output<Boolean>> reuse_nat_ips() {
        return Optional.ofNullable(this.reuse_nat_ips);
    }

    /**
     * List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool
     * 
     */
    @Import(name="secondary_cidr_blocks")
    private @Nullable Output<List<String>> secondary_cidr_blocks;

    /**
     * @return List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool
     * 
     */
    public Optional<Output<List<String>>> secondary_cidr_blocks() {
        return Optional.ofNullable(this.secondary_cidr_blocks);
    }

    /**
     * Should be true if you want to provision a single shared NAT Gateway across all of your private networks
     * 
     */
    @Import(name="single_nat_gateway")
    private @Nullable Output<Boolean> single_nat_gateway;

    /**
     * @return Should be true if you want to provision a single shared NAT Gateway across all of your private networks
     * 
     */
    public Optional<Output<Boolean>> single_nat_gateway() {
        return Optional.ofNullable(this.single_nat_gateway);
    }

    /**
     * A map of tags to add to all resources
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of tags to add to all resources
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Determines whether IPAM pool is used for CIDR allocation
     * 
     */
    @Import(name="use_ipam_pool")
    private @Nullable Output<Boolean> use_ipam_pool;

    /**
     * @return Determines whether IPAM pool is used for CIDR allocation
     * 
     */
    public Optional<Output<Boolean>> use_ipam_pool() {
        return Optional.ofNullable(this.use_ipam_pool);
    }

    /**
     * Name of the IAM policy
     * 
     */
    @Import(name="vpc_flow_log_iam_policy_name")
    private @Nullable Output<String> vpc_flow_log_iam_policy_name;

    /**
     * @return Name of the IAM policy
     * 
     */
    public Optional<Output<String>> vpc_flow_log_iam_policy_name() {
        return Optional.ofNullable(this.vpc_flow_log_iam_policy_name);
    }

    /**
     * Determines whether the name of the IAM policy (`vpc_flow_log_iam_policy_name`) is used as a prefix
     * 
     */
    @Import(name="vpc_flow_log_iam_policy_use_name_prefix")
    private @Nullable Output<Boolean> vpc_flow_log_iam_policy_use_name_prefix;

    /**
     * @return Determines whether the name of the IAM policy (`vpc_flow_log_iam_policy_name`) is used as a prefix
     * 
     */
    public Optional<Output<Boolean>> vpc_flow_log_iam_policy_use_name_prefix() {
        return Optional.ofNullable(this.vpc_flow_log_iam_policy_use_name_prefix);
    }

    /**
     * Name to use on the VPC Flow Log IAM role created
     * 
     */
    @Import(name="vpc_flow_log_iam_role_name")
    private @Nullable Output<String> vpc_flow_log_iam_role_name;

    /**
     * @return Name to use on the VPC Flow Log IAM role created
     * 
     */
    public Optional<Output<String>> vpc_flow_log_iam_role_name() {
        return Optional.ofNullable(this.vpc_flow_log_iam_role_name);
    }

    /**
     * Determines whether the IAM role name (`vpc_flow_log_iam_role_name_name`) is used as a prefix
     * 
     */
    @Import(name="vpc_flow_log_iam_role_use_name_prefix")
    private @Nullable Output<Boolean> vpc_flow_log_iam_role_use_name_prefix;

    /**
     * @return Determines whether the IAM role name (`vpc_flow_log_iam_role_name_name`) is used as a prefix
     * 
     */
    public Optional<Output<Boolean>> vpc_flow_log_iam_role_use_name_prefix() {
        return Optional.ofNullable(this.vpc_flow_log_iam_role_use_name_prefix);
    }

    /**
     * The ARN of the Permissions Boundary for the VPC Flow Log IAM Role
     * 
     */
    @Import(name="vpc_flow_log_permissions_boundary")
    private @Nullable Output<String> vpc_flow_log_permissions_boundary;

    /**
     * @return The ARN of the Permissions Boundary for the VPC Flow Log IAM Role
     * 
     */
    public Optional<Output<String>> vpc_flow_log_permissions_boundary() {
        return Optional.ofNullable(this.vpc_flow_log_permissions_boundary);
    }

    /**
     * Additional tags for the VPC Flow Logs
     * 
     */
    @Import(name="vpc_flow_log_tags")
    private @Nullable Output<Map<String,String>> vpc_flow_log_tags;

    /**
     * @return Additional tags for the VPC Flow Logs
     * 
     */
    public Optional<Output<Map<String,String>>> vpc_flow_log_tags() {
        return Optional.ofNullable(this.vpc_flow_log_tags);
    }

    /**
     * Additional tags for the VPC
     * 
     */
    @Import(name="vpc_tags")
    private @Nullable Output<Map<String,String>> vpc_tags;

    /**
     * @return Additional tags for the VPC
     * 
     */
    public Optional<Output<Map<String,String>>> vpc_tags() {
        return Optional.ofNullable(this.vpc_tags);
    }

    /**
     * The Availability Zone for the VPN Gateway
     * 
     */
    @Import(name="vpn_gateway_az")
    private @Nullable Output<String> vpn_gateway_az;

    /**
     * @return The Availability Zone for the VPN Gateway
     * 
     */
    public Optional<Output<String>> vpn_gateway_az() {
        return Optional.ofNullable(this.vpn_gateway_az);
    }

    /**
     * ID of VPN Gateway to attach to the VPC
     * 
     */
    @Import(name="vpn_gateway_id")
    private @Nullable Output<String> vpn_gateway_id;

    /**
     * @return ID of VPN Gateway to attach to the VPC
     * 
     */
    public Optional<Output<String>> vpn_gateway_id() {
        return Optional.ofNullable(this.vpn_gateway_id);
    }

    /**
     * Additional tags for the VPN gateway
     * 
     */
    @Import(name="vpn_gateway_tags")
    private @Nullable Output<Map<String,String>> vpn_gateway_tags;

    /**
     * @return Additional tags for the VPN gateway
     * 
     */
    public Optional<Output<Map<String,String>>> vpn_gateway_tags() {
        return Optional.ofNullable(this.vpn_gateway_tags);
    }

    private ModuleArgs() {}

    private ModuleArgs(ModuleArgs $) {
        this.amazon_side_asn = $.amazon_side_asn;
        this.azs = $.azs;
        this.cidr = $.cidr;
        this.create_database_internet_gateway_route = $.create_database_internet_gateway_route;
        this.create_database_nat_gateway_route = $.create_database_nat_gateway_route;
        this.create_database_subnet_group = $.create_database_subnet_group;
        this.create_database_subnet_route_table = $.create_database_subnet_route_table;
        this.create_egress_only_igw = $.create_egress_only_igw;
        this.create_elasticache_subnet_group = $.create_elasticache_subnet_group;
        this.create_elasticache_subnet_route_table = $.create_elasticache_subnet_route_table;
        this.create_flow_log_cloudwatch_iam_role = $.create_flow_log_cloudwatch_iam_role;
        this.create_flow_log_cloudwatch_log_group = $.create_flow_log_cloudwatch_log_group;
        this.create_igw = $.create_igw;
        this.create_multiple_intra_route_tables = $.create_multiple_intra_route_tables;
        this.create_multiple_public_route_tables = $.create_multiple_public_route_tables;
        this.create_private_nat_gateway_route = $.create_private_nat_gateway_route;
        this.create_redshift_subnet_group = $.create_redshift_subnet_group;
        this.create_redshift_subnet_route_table = $.create_redshift_subnet_route_table;
        this.create_vpc = $.create_vpc;
        this.customer_gateway_tags = $.customer_gateway_tags;
        this.customer_gateways = $.customer_gateways;
        this.customer_owned_ipv4_pool = $.customer_owned_ipv4_pool;
        this.database_acl_tags = $.database_acl_tags;
        this.database_dedicated_network_acl = $.database_dedicated_network_acl;
        this.database_inbound_acl_rules = $.database_inbound_acl_rules;
        this.database_outbound_acl_rules = $.database_outbound_acl_rules;
        this.database_route_table_tags = $.database_route_table_tags;
        this.database_subnet_assign_ipv6_address_on_creation = $.database_subnet_assign_ipv6_address_on_creation;
        this.database_subnet_enable_dns64 = $.database_subnet_enable_dns64;
        this.database_subnet_enable_resource_name_dns_a_record_on_launch = $.database_subnet_enable_resource_name_dns_a_record_on_launch;
        this.database_subnet_enable_resource_name_dns_aaaa_record_on_launch = $.database_subnet_enable_resource_name_dns_aaaa_record_on_launch;
        this.database_subnet_group_name = $.database_subnet_group_name;
        this.database_subnet_group_tags = $.database_subnet_group_tags;
        this.database_subnet_ipv6_native = $.database_subnet_ipv6_native;
        this.database_subnet_ipv6_prefixes = $.database_subnet_ipv6_prefixes;
        this.database_subnet_names = $.database_subnet_names;
        this.database_subnet_private_dns_hostname_type_on_launch = $.database_subnet_private_dns_hostname_type_on_launch;
        this.database_subnet_suffix = $.database_subnet_suffix;
        this.database_subnet_tags = $.database_subnet_tags;
        this.database_subnets = $.database_subnets;
        this.default_network_acl_egress = $.default_network_acl_egress;
        this.default_network_acl_ingress = $.default_network_acl_ingress;
        this.default_network_acl_name = $.default_network_acl_name;
        this.default_network_acl_tags = $.default_network_acl_tags;
        this.default_route_table_name = $.default_route_table_name;
        this.default_route_table_propagating_vgws = $.default_route_table_propagating_vgws;
        this.default_route_table_routes = $.default_route_table_routes;
        this.default_route_table_tags = $.default_route_table_tags;
        this.default_security_group_egress = $.default_security_group_egress;
        this.default_security_group_ingress = $.default_security_group_ingress;
        this.default_security_group_name = $.default_security_group_name;
        this.default_security_group_tags = $.default_security_group_tags;
        this.default_vpc_enable_dns_hostnames = $.default_vpc_enable_dns_hostnames;
        this.default_vpc_enable_dns_support = $.default_vpc_enable_dns_support;
        this.default_vpc_name = $.default_vpc_name;
        this.default_vpc_tags = $.default_vpc_tags;
        this.dhcp_options_domain_name = $.dhcp_options_domain_name;
        this.dhcp_options_domain_name_servers = $.dhcp_options_domain_name_servers;
        this.dhcp_options_ipv6_address_preferred_lease_time = $.dhcp_options_ipv6_address_preferred_lease_time;
        this.dhcp_options_netbios_name_servers = $.dhcp_options_netbios_name_servers;
        this.dhcp_options_netbios_node_type = $.dhcp_options_netbios_node_type;
        this.dhcp_options_ntp_servers = $.dhcp_options_ntp_servers;
        this.dhcp_options_tags = $.dhcp_options_tags;
        this.elasticache_acl_tags = $.elasticache_acl_tags;
        this.elasticache_dedicated_network_acl = $.elasticache_dedicated_network_acl;
        this.elasticache_inbound_acl_rules = $.elasticache_inbound_acl_rules;
        this.elasticache_outbound_acl_rules = $.elasticache_outbound_acl_rules;
        this.elasticache_route_table_tags = $.elasticache_route_table_tags;
        this.elasticache_subnet_assign_ipv6_address_on_creation = $.elasticache_subnet_assign_ipv6_address_on_creation;
        this.elasticache_subnet_enable_dns64 = $.elasticache_subnet_enable_dns64;
        this.elasticache_subnet_enable_resource_name_dns_a_record_on_launch = $.elasticache_subnet_enable_resource_name_dns_a_record_on_launch;
        this.elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch = $.elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch;
        this.elasticache_subnet_group_name = $.elasticache_subnet_group_name;
        this.elasticache_subnet_group_tags = $.elasticache_subnet_group_tags;
        this.elasticache_subnet_ipv6_native = $.elasticache_subnet_ipv6_native;
        this.elasticache_subnet_ipv6_prefixes = $.elasticache_subnet_ipv6_prefixes;
        this.elasticache_subnet_names = $.elasticache_subnet_names;
        this.elasticache_subnet_private_dns_hostname_type_on_launch = $.elasticache_subnet_private_dns_hostname_type_on_launch;
        this.elasticache_subnet_suffix = $.elasticache_subnet_suffix;
        this.elasticache_subnet_tags = $.elasticache_subnet_tags;
        this.elasticache_subnets = $.elasticache_subnets;
        this.enable_dhcp_options = $.enable_dhcp_options;
        this.enable_dns_hostnames = $.enable_dns_hostnames;
        this.enable_dns_support = $.enable_dns_support;
        this.enable_flow_log = $.enable_flow_log;
        this.enable_ipv6 = $.enable_ipv6;
        this.enable_nat_gateway = $.enable_nat_gateway;
        this.enable_network_address_usage_metrics = $.enable_network_address_usage_metrics;
        this.enable_public_redshift = $.enable_public_redshift;
        this.enable_vpn_gateway = $.enable_vpn_gateway;
        this.external_nat_ip_ids = $.external_nat_ip_ids;
        this.external_nat_ips = $.external_nat_ips;
        this.flow_log_cloudwatch_iam_role_arn = $.flow_log_cloudwatch_iam_role_arn;
        this.flow_log_cloudwatch_iam_role_conditions = $.flow_log_cloudwatch_iam_role_conditions;
        this.flow_log_cloudwatch_log_group_class = $.flow_log_cloudwatch_log_group_class;
        this.flow_log_cloudwatch_log_group_kms_key_id = $.flow_log_cloudwatch_log_group_kms_key_id;
        this.flow_log_cloudwatch_log_group_name_prefix = $.flow_log_cloudwatch_log_group_name_prefix;
        this.flow_log_cloudwatch_log_group_name_suffix = $.flow_log_cloudwatch_log_group_name_suffix;
        this.flow_log_cloudwatch_log_group_retention_in_days = $.flow_log_cloudwatch_log_group_retention_in_days;
        this.flow_log_cloudwatch_log_group_skip_destroy = $.flow_log_cloudwatch_log_group_skip_destroy;
        this.flow_log_deliver_cross_account_role = $.flow_log_deliver_cross_account_role;
        this.flow_log_destination_arn = $.flow_log_destination_arn;
        this.flow_log_destination_type = $.flow_log_destination_type;
        this.flow_log_file_format = $.flow_log_file_format;
        this.flow_log_hive_compatible_partitions = $.flow_log_hive_compatible_partitions;
        this.flow_log_log_format = $.flow_log_log_format;
        this.flow_log_max_aggregation_interval = $.flow_log_max_aggregation_interval;
        this.flow_log_per_hour_partition = $.flow_log_per_hour_partition;
        this.flow_log_traffic_type = $.flow_log_traffic_type;
        this.igw_tags = $.igw_tags;
        this.instance_tenancy = $.instance_tenancy;
        this.intra_acl_tags = $.intra_acl_tags;
        this.intra_dedicated_network_acl = $.intra_dedicated_network_acl;
        this.intra_inbound_acl_rules = $.intra_inbound_acl_rules;
        this.intra_outbound_acl_rules = $.intra_outbound_acl_rules;
        this.intra_route_table_tags = $.intra_route_table_tags;
        this.intra_subnet_assign_ipv6_address_on_creation = $.intra_subnet_assign_ipv6_address_on_creation;
        this.intra_subnet_enable_dns64 = $.intra_subnet_enable_dns64;
        this.intra_subnet_enable_resource_name_dns_a_record_on_launch = $.intra_subnet_enable_resource_name_dns_a_record_on_launch;
        this.intra_subnet_enable_resource_name_dns_aaaa_record_on_launch = $.intra_subnet_enable_resource_name_dns_aaaa_record_on_launch;
        this.intra_subnet_ipv6_native = $.intra_subnet_ipv6_native;
        this.intra_subnet_ipv6_prefixes = $.intra_subnet_ipv6_prefixes;
        this.intra_subnet_names = $.intra_subnet_names;
        this.intra_subnet_private_dns_hostname_type_on_launch = $.intra_subnet_private_dns_hostname_type_on_launch;
        this.intra_subnet_suffix = $.intra_subnet_suffix;
        this.intra_subnet_tags = $.intra_subnet_tags;
        this.intra_subnets = $.intra_subnets;
        this.ipv4_ipam_pool_id = $.ipv4_ipam_pool_id;
        this.ipv4_netmask_length = $.ipv4_netmask_length;
        this.ipv6_cidr = $.ipv6_cidr;
        this.ipv6_cidr_block_network_border_group = $.ipv6_cidr_block_network_border_group;
        this.ipv6_ipam_pool_id = $.ipv6_ipam_pool_id;
        this.ipv6_netmask_length = $.ipv6_netmask_length;
        this.manage_default_network_acl = $.manage_default_network_acl;
        this.manage_default_route_table = $.manage_default_route_table;
        this.manage_default_security_group = $.manage_default_security_group;
        this.manage_default_vpc = $.manage_default_vpc;
        this.map_customer_owned_ip_on_launch = $.map_customer_owned_ip_on_launch;
        this.map_public_ip_on_launch = $.map_public_ip_on_launch;
        this.name = $.name;
        this.nat_eip_tags = $.nat_eip_tags;
        this.nat_gateway_destination_cidr_block = $.nat_gateway_destination_cidr_block;
        this.nat_gateway_tags = $.nat_gateway_tags;
        this.one_nat_gateway_per_az = $.one_nat_gateway_per_az;
        this.outpost_acl_tags = $.outpost_acl_tags;
        this.outpost_arn = $.outpost_arn;
        this.outpost_az = $.outpost_az;
        this.outpost_dedicated_network_acl = $.outpost_dedicated_network_acl;
        this.outpost_inbound_acl_rules = $.outpost_inbound_acl_rules;
        this.outpost_outbound_acl_rules = $.outpost_outbound_acl_rules;
        this.outpost_subnet_assign_ipv6_address_on_creation = $.outpost_subnet_assign_ipv6_address_on_creation;
        this.outpost_subnet_enable_dns64 = $.outpost_subnet_enable_dns64;
        this.outpost_subnet_enable_resource_name_dns_a_record_on_launch = $.outpost_subnet_enable_resource_name_dns_a_record_on_launch;
        this.outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch = $.outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch;
        this.outpost_subnet_ipv6_native = $.outpost_subnet_ipv6_native;
        this.outpost_subnet_ipv6_prefixes = $.outpost_subnet_ipv6_prefixes;
        this.outpost_subnet_names = $.outpost_subnet_names;
        this.outpost_subnet_private_dns_hostname_type_on_launch = $.outpost_subnet_private_dns_hostname_type_on_launch;
        this.outpost_subnet_suffix = $.outpost_subnet_suffix;
        this.outpost_subnet_tags = $.outpost_subnet_tags;
        this.outpost_subnets = $.outpost_subnets;
        this.private_acl_tags = $.private_acl_tags;
        this.private_dedicated_network_acl = $.private_dedicated_network_acl;
        this.private_inbound_acl_rules = $.private_inbound_acl_rules;
        this.private_outbound_acl_rules = $.private_outbound_acl_rules;
        this.private_route_table_tags = $.private_route_table_tags;
        this.private_subnet_assign_ipv6_address_on_creation = $.private_subnet_assign_ipv6_address_on_creation;
        this.private_subnet_enable_dns64 = $.private_subnet_enable_dns64;
        this.private_subnet_enable_resource_name_dns_a_record_on_launch = $.private_subnet_enable_resource_name_dns_a_record_on_launch;
        this.private_subnet_enable_resource_name_dns_aaaa_record_on_launch = $.private_subnet_enable_resource_name_dns_aaaa_record_on_launch;
        this.private_subnet_ipv6_native = $.private_subnet_ipv6_native;
        this.private_subnet_ipv6_prefixes = $.private_subnet_ipv6_prefixes;
        this.private_subnet_names = $.private_subnet_names;
        this.private_subnet_private_dns_hostname_type_on_launch = $.private_subnet_private_dns_hostname_type_on_launch;
        this.private_subnet_suffix = $.private_subnet_suffix;
        this.private_subnet_tags = $.private_subnet_tags;
        this.private_subnet_tags_per_az = $.private_subnet_tags_per_az;
        this.private_subnets = $.private_subnets;
        this.propagate_intra_route_tables_vgw = $.propagate_intra_route_tables_vgw;
        this.propagate_private_route_tables_vgw = $.propagate_private_route_tables_vgw;
        this.propagate_public_route_tables_vgw = $.propagate_public_route_tables_vgw;
        this.public_acl_tags = $.public_acl_tags;
        this.public_dedicated_network_acl = $.public_dedicated_network_acl;
        this.public_inbound_acl_rules = $.public_inbound_acl_rules;
        this.public_outbound_acl_rules = $.public_outbound_acl_rules;
        this.public_route_table_tags = $.public_route_table_tags;
        this.public_subnet_assign_ipv6_address_on_creation = $.public_subnet_assign_ipv6_address_on_creation;
        this.public_subnet_enable_dns64 = $.public_subnet_enable_dns64;
        this.public_subnet_enable_resource_name_dns_a_record_on_launch = $.public_subnet_enable_resource_name_dns_a_record_on_launch;
        this.public_subnet_enable_resource_name_dns_aaaa_record_on_launch = $.public_subnet_enable_resource_name_dns_aaaa_record_on_launch;
        this.public_subnet_ipv6_native = $.public_subnet_ipv6_native;
        this.public_subnet_ipv6_prefixes = $.public_subnet_ipv6_prefixes;
        this.public_subnet_names = $.public_subnet_names;
        this.public_subnet_private_dns_hostname_type_on_launch = $.public_subnet_private_dns_hostname_type_on_launch;
        this.public_subnet_suffix = $.public_subnet_suffix;
        this.public_subnet_tags = $.public_subnet_tags;
        this.public_subnet_tags_per_az = $.public_subnet_tags_per_az;
        this.public_subnets = $.public_subnets;
        this.putin_khuylo = $.putin_khuylo;
        this.redshift_acl_tags = $.redshift_acl_tags;
        this.redshift_dedicated_network_acl = $.redshift_dedicated_network_acl;
        this.redshift_inbound_acl_rules = $.redshift_inbound_acl_rules;
        this.redshift_outbound_acl_rules = $.redshift_outbound_acl_rules;
        this.redshift_route_table_tags = $.redshift_route_table_tags;
        this.redshift_subnet_assign_ipv6_address_on_creation = $.redshift_subnet_assign_ipv6_address_on_creation;
        this.redshift_subnet_enable_dns64 = $.redshift_subnet_enable_dns64;
        this.redshift_subnet_enable_resource_name_dns_a_record_on_launch = $.redshift_subnet_enable_resource_name_dns_a_record_on_launch;
        this.redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch = $.redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch;
        this.redshift_subnet_group_name = $.redshift_subnet_group_name;
        this.redshift_subnet_group_tags = $.redshift_subnet_group_tags;
        this.redshift_subnet_ipv6_native = $.redshift_subnet_ipv6_native;
        this.redshift_subnet_ipv6_prefixes = $.redshift_subnet_ipv6_prefixes;
        this.redshift_subnet_names = $.redshift_subnet_names;
        this.redshift_subnet_private_dns_hostname_type_on_launch = $.redshift_subnet_private_dns_hostname_type_on_launch;
        this.redshift_subnet_suffix = $.redshift_subnet_suffix;
        this.redshift_subnet_tags = $.redshift_subnet_tags;
        this.redshift_subnets = $.redshift_subnets;
        this.reuse_nat_ips = $.reuse_nat_ips;
        this.secondary_cidr_blocks = $.secondary_cidr_blocks;
        this.single_nat_gateway = $.single_nat_gateway;
        this.tags = $.tags;
        this.use_ipam_pool = $.use_ipam_pool;
        this.vpc_flow_log_iam_policy_name = $.vpc_flow_log_iam_policy_name;
        this.vpc_flow_log_iam_policy_use_name_prefix = $.vpc_flow_log_iam_policy_use_name_prefix;
        this.vpc_flow_log_iam_role_name = $.vpc_flow_log_iam_role_name;
        this.vpc_flow_log_iam_role_use_name_prefix = $.vpc_flow_log_iam_role_use_name_prefix;
        this.vpc_flow_log_permissions_boundary = $.vpc_flow_log_permissions_boundary;
        this.vpc_flow_log_tags = $.vpc_flow_log_tags;
        this.vpc_tags = $.vpc_tags;
        this.vpn_gateway_az = $.vpn_gateway_az;
        this.vpn_gateway_id = $.vpn_gateway_id;
        this.vpn_gateway_tags = $.vpn_gateway_tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModuleArgs $;

        public Builder() {
            $ = new ModuleArgs();
        }

        public Builder(ModuleArgs defaults) {
            $ = new ModuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param amazon_side_asn The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN
         * 
         * @return builder
         * 
         */
        public Builder amazon_side_asn(@Nullable Output<String> amazon_side_asn) {
            $.amazon_side_asn = amazon_side_asn;
            return this;
        }

        /**
         * @param amazon_side_asn The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN
         * 
         * @return builder
         * 
         */
        public Builder amazon_side_asn(String amazon_side_asn) {
            return amazon_side_asn(Output.of(amazon_side_asn));
        }

        /**
         * @param azs A list of availability zones names or ids in the region
         * 
         * @return builder
         * 
         */
        public Builder azs(@Nullable Output<List<String>> azs) {
            $.azs = azs;
            return this;
        }

        /**
         * @param azs A list of availability zones names or ids in the region
         * 
         * @return builder
         * 
         */
        public Builder azs(List<String> azs) {
            return azs(Output.of(azs));
        }

        /**
         * @param azs A list of availability zones names or ids in the region
         * 
         * @return builder
         * 
         */
        public Builder azs(String... azs) {
            return azs(List.of(azs));
        }

        /**
         * @param cidr (Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` &amp; `ipv4_ipam_pool_id`
         * 
         * @return builder
         * 
         */
        public Builder cidr(@Nullable Output<String> cidr) {
            $.cidr = cidr;
            return this;
        }

        /**
         * @param cidr (Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` &amp; `ipv4_ipam_pool_id`
         * 
         * @return builder
         * 
         */
        public Builder cidr(String cidr) {
            return cidr(Output.of(cidr));
        }

        /**
         * @param create_database_internet_gateway_route Controls if an internet gateway route for public database access should be created
         * 
         * @return builder
         * 
         */
        public Builder create_database_internet_gateway_route(@Nullable Output<Boolean> create_database_internet_gateway_route) {
            $.create_database_internet_gateway_route = create_database_internet_gateway_route;
            return this;
        }

        /**
         * @param create_database_internet_gateway_route Controls if an internet gateway route for public database access should be created
         * 
         * @return builder
         * 
         */
        public Builder create_database_internet_gateway_route(Boolean create_database_internet_gateway_route) {
            return create_database_internet_gateway_route(Output.of(create_database_internet_gateway_route));
        }

        /**
         * @param create_database_nat_gateway_route Controls if a nat gateway route should be created to give internet access to the database subnets
         * 
         * @return builder
         * 
         */
        public Builder create_database_nat_gateway_route(@Nullable Output<Boolean> create_database_nat_gateway_route) {
            $.create_database_nat_gateway_route = create_database_nat_gateway_route;
            return this;
        }

        /**
         * @param create_database_nat_gateway_route Controls if a nat gateway route should be created to give internet access to the database subnets
         * 
         * @return builder
         * 
         */
        public Builder create_database_nat_gateway_route(Boolean create_database_nat_gateway_route) {
            return create_database_nat_gateway_route(Output.of(create_database_nat_gateway_route));
        }

        /**
         * @param create_database_subnet_group Controls if database subnet group should be created (n.b. database_subnets must also be set)
         * 
         * @return builder
         * 
         */
        public Builder create_database_subnet_group(@Nullable Output<Boolean> create_database_subnet_group) {
            $.create_database_subnet_group = create_database_subnet_group;
            return this;
        }

        /**
         * @param create_database_subnet_group Controls if database subnet group should be created (n.b. database_subnets must also be set)
         * 
         * @return builder
         * 
         */
        public Builder create_database_subnet_group(Boolean create_database_subnet_group) {
            return create_database_subnet_group(Output.of(create_database_subnet_group));
        }

        /**
         * @param create_database_subnet_route_table Controls if separate route table for database should be created
         * 
         * @return builder
         * 
         */
        public Builder create_database_subnet_route_table(@Nullable Output<Boolean> create_database_subnet_route_table) {
            $.create_database_subnet_route_table = create_database_subnet_route_table;
            return this;
        }

        /**
         * @param create_database_subnet_route_table Controls if separate route table for database should be created
         * 
         * @return builder
         * 
         */
        public Builder create_database_subnet_route_table(Boolean create_database_subnet_route_table) {
            return create_database_subnet_route_table(Output.of(create_database_subnet_route_table));
        }

        /**
         * @param create_egress_only_igw Controls if an Egress Only Internet Gateway is created and its related routes
         * 
         * @return builder
         * 
         */
        public Builder create_egress_only_igw(@Nullable Output<Boolean> create_egress_only_igw) {
            $.create_egress_only_igw = create_egress_only_igw;
            return this;
        }

        /**
         * @param create_egress_only_igw Controls if an Egress Only Internet Gateway is created and its related routes
         * 
         * @return builder
         * 
         */
        public Builder create_egress_only_igw(Boolean create_egress_only_igw) {
            return create_egress_only_igw(Output.of(create_egress_only_igw));
        }

        /**
         * @param create_elasticache_subnet_group Controls if elasticache subnet group should be created
         * 
         * @return builder
         * 
         */
        public Builder create_elasticache_subnet_group(@Nullable Output<Boolean> create_elasticache_subnet_group) {
            $.create_elasticache_subnet_group = create_elasticache_subnet_group;
            return this;
        }

        /**
         * @param create_elasticache_subnet_group Controls if elasticache subnet group should be created
         * 
         * @return builder
         * 
         */
        public Builder create_elasticache_subnet_group(Boolean create_elasticache_subnet_group) {
            return create_elasticache_subnet_group(Output.of(create_elasticache_subnet_group));
        }

        /**
         * @param create_elasticache_subnet_route_table Controls if separate route table for elasticache should be created
         * 
         * @return builder
         * 
         */
        public Builder create_elasticache_subnet_route_table(@Nullable Output<Boolean> create_elasticache_subnet_route_table) {
            $.create_elasticache_subnet_route_table = create_elasticache_subnet_route_table;
            return this;
        }

        /**
         * @param create_elasticache_subnet_route_table Controls if separate route table for elasticache should be created
         * 
         * @return builder
         * 
         */
        public Builder create_elasticache_subnet_route_table(Boolean create_elasticache_subnet_route_table) {
            return create_elasticache_subnet_route_table(Output.of(create_elasticache_subnet_route_table));
        }

        /**
         * @param create_flow_log_cloudwatch_iam_role Whether to create IAM role for VPC Flow Logs
         * 
         * @return builder
         * 
         */
        public Builder create_flow_log_cloudwatch_iam_role(@Nullable Output<Boolean> create_flow_log_cloudwatch_iam_role) {
            $.create_flow_log_cloudwatch_iam_role = create_flow_log_cloudwatch_iam_role;
            return this;
        }

        /**
         * @param create_flow_log_cloudwatch_iam_role Whether to create IAM role for VPC Flow Logs
         * 
         * @return builder
         * 
         */
        public Builder create_flow_log_cloudwatch_iam_role(Boolean create_flow_log_cloudwatch_iam_role) {
            return create_flow_log_cloudwatch_iam_role(Output.of(create_flow_log_cloudwatch_iam_role));
        }

        /**
         * @param create_flow_log_cloudwatch_log_group Whether to create CloudWatch log group for VPC Flow Logs
         * 
         * @return builder
         * 
         */
        public Builder create_flow_log_cloudwatch_log_group(@Nullable Output<Boolean> create_flow_log_cloudwatch_log_group) {
            $.create_flow_log_cloudwatch_log_group = create_flow_log_cloudwatch_log_group;
            return this;
        }

        /**
         * @param create_flow_log_cloudwatch_log_group Whether to create CloudWatch log group for VPC Flow Logs
         * 
         * @return builder
         * 
         */
        public Builder create_flow_log_cloudwatch_log_group(Boolean create_flow_log_cloudwatch_log_group) {
            return create_flow_log_cloudwatch_log_group(Output.of(create_flow_log_cloudwatch_log_group));
        }

        /**
         * @param create_igw Controls if an Internet Gateway is created for public subnets and the related routes that connect them
         * 
         * @return builder
         * 
         */
        public Builder create_igw(@Nullable Output<Boolean> create_igw) {
            $.create_igw = create_igw;
            return this;
        }

        /**
         * @param create_igw Controls if an Internet Gateway is created for public subnets and the related routes that connect them
         * 
         * @return builder
         * 
         */
        public Builder create_igw(Boolean create_igw) {
            return create_igw(Output.of(create_igw));
        }

        /**
         * @param create_multiple_intra_route_tables Indicates whether to create a separate route table for each intra subnet. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder create_multiple_intra_route_tables(@Nullable Output<Boolean> create_multiple_intra_route_tables) {
            $.create_multiple_intra_route_tables = create_multiple_intra_route_tables;
            return this;
        }

        /**
         * @param create_multiple_intra_route_tables Indicates whether to create a separate route table for each intra subnet. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder create_multiple_intra_route_tables(Boolean create_multiple_intra_route_tables) {
            return create_multiple_intra_route_tables(Output.of(create_multiple_intra_route_tables));
        }

        /**
         * @param create_multiple_public_route_tables Indicates whether to create a separate route table for each public subnet. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder create_multiple_public_route_tables(@Nullable Output<Boolean> create_multiple_public_route_tables) {
            $.create_multiple_public_route_tables = create_multiple_public_route_tables;
            return this;
        }

        /**
         * @param create_multiple_public_route_tables Indicates whether to create a separate route table for each public subnet. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder create_multiple_public_route_tables(Boolean create_multiple_public_route_tables) {
            return create_multiple_public_route_tables(Output.of(create_multiple_public_route_tables));
        }

        /**
         * @param create_private_nat_gateway_route Controls if a nat gateway route should be created to give internet access to the private subnets
         * 
         * @return builder
         * 
         */
        public Builder create_private_nat_gateway_route(@Nullable Output<Boolean> create_private_nat_gateway_route) {
            $.create_private_nat_gateway_route = create_private_nat_gateway_route;
            return this;
        }

        /**
         * @param create_private_nat_gateway_route Controls if a nat gateway route should be created to give internet access to the private subnets
         * 
         * @return builder
         * 
         */
        public Builder create_private_nat_gateway_route(Boolean create_private_nat_gateway_route) {
            return create_private_nat_gateway_route(Output.of(create_private_nat_gateway_route));
        }

        /**
         * @param create_redshift_subnet_group Controls if redshift subnet group should be created
         * 
         * @return builder
         * 
         */
        public Builder create_redshift_subnet_group(@Nullable Output<Boolean> create_redshift_subnet_group) {
            $.create_redshift_subnet_group = create_redshift_subnet_group;
            return this;
        }

        /**
         * @param create_redshift_subnet_group Controls if redshift subnet group should be created
         * 
         * @return builder
         * 
         */
        public Builder create_redshift_subnet_group(Boolean create_redshift_subnet_group) {
            return create_redshift_subnet_group(Output.of(create_redshift_subnet_group));
        }

        /**
         * @param create_redshift_subnet_route_table Controls if separate route table for redshift should be created
         * 
         * @return builder
         * 
         */
        public Builder create_redshift_subnet_route_table(@Nullable Output<Boolean> create_redshift_subnet_route_table) {
            $.create_redshift_subnet_route_table = create_redshift_subnet_route_table;
            return this;
        }

        /**
         * @param create_redshift_subnet_route_table Controls if separate route table for redshift should be created
         * 
         * @return builder
         * 
         */
        public Builder create_redshift_subnet_route_table(Boolean create_redshift_subnet_route_table) {
            return create_redshift_subnet_route_table(Output.of(create_redshift_subnet_route_table));
        }

        /**
         * @param create_vpc Controls if VPC should be created (it affects almost all resources)
         * 
         * @return builder
         * 
         */
        public Builder create_vpc(@Nullable Output<Boolean> create_vpc) {
            $.create_vpc = create_vpc;
            return this;
        }

        /**
         * @param create_vpc Controls if VPC should be created (it affects almost all resources)
         * 
         * @return builder
         * 
         */
        public Builder create_vpc(Boolean create_vpc) {
            return create_vpc(Output.of(create_vpc));
        }

        /**
         * @param customer_gateway_tags Additional tags for the Customer Gateway
         * 
         * @return builder
         * 
         */
        public Builder customer_gateway_tags(@Nullable Output<Map<String,String>> customer_gateway_tags) {
            $.customer_gateway_tags = customer_gateway_tags;
            return this;
        }

        /**
         * @param customer_gateway_tags Additional tags for the Customer Gateway
         * 
         * @return builder
         * 
         */
        public Builder customer_gateway_tags(Map<String,String> customer_gateway_tags) {
            return customer_gateway_tags(Output.of(customer_gateway_tags));
        }

        /**
         * @param customer_gateways Maps of Customer Gateway&#39;s attributes (BGP ASN and Gateway&#39;s Internet-routable external IP address)
         * 
         * @return builder
         * 
         */
        public Builder customer_gateways(@Nullable Output<Map<String,Map<String,Object>>> customer_gateways) {
            $.customer_gateways = customer_gateways;
            return this;
        }

        /**
         * @param customer_gateways Maps of Customer Gateway&#39;s attributes (BGP ASN and Gateway&#39;s Internet-routable external IP address)
         * 
         * @return builder
         * 
         */
        public Builder customer_gateways(Map<String,Map<String,Object>> customer_gateways) {
            return customer_gateways(Output.of(customer_gateways));
        }

        /**
         * @param customer_owned_ipv4_pool The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured
         * 
         * @return builder
         * 
         */
        public Builder customer_owned_ipv4_pool(@Nullable Output<String> customer_owned_ipv4_pool) {
            $.customer_owned_ipv4_pool = customer_owned_ipv4_pool;
            return this;
        }

        /**
         * @param customer_owned_ipv4_pool The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured
         * 
         * @return builder
         * 
         */
        public Builder customer_owned_ipv4_pool(String customer_owned_ipv4_pool) {
            return customer_owned_ipv4_pool(Output.of(customer_owned_ipv4_pool));
        }

        /**
         * @param database_acl_tags Additional tags for the database subnets network ACL
         * 
         * @return builder
         * 
         */
        public Builder database_acl_tags(@Nullable Output<Map<String,String>> database_acl_tags) {
            $.database_acl_tags = database_acl_tags;
            return this;
        }

        /**
         * @param database_acl_tags Additional tags for the database subnets network ACL
         * 
         * @return builder
         * 
         */
        public Builder database_acl_tags(Map<String,String> database_acl_tags) {
            return database_acl_tags(Output.of(database_acl_tags));
        }

        /**
         * @param database_dedicated_network_acl Whether to use dedicated network ACL (not default) and custom rules for database subnets
         * 
         * @return builder
         * 
         */
        public Builder database_dedicated_network_acl(@Nullable Output<Boolean> database_dedicated_network_acl) {
            $.database_dedicated_network_acl = database_dedicated_network_acl;
            return this;
        }

        /**
         * @param database_dedicated_network_acl Whether to use dedicated network ACL (not default) and custom rules for database subnets
         * 
         * @return builder
         * 
         */
        public Builder database_dedicated_network_acl(Boolean database_dedicated_network_acl) {
            return database_dedicated_network_acl(Output.of(database_dedicated_network_acl));
        }

        /**
         * @param database_inbound_acl_rules Database subnets inbound network ACL rules
         * 
         * @return builder
         * 
         */
        public Builder database_inbound_acl_rules(@Nullable Output<List<Map<String,String>>> database_inbound_acl_rules) {
            $.database_inbound_acl_rules = database_inbound_acl_rules;
            return this;
        }

        /**
         * @param database_inbound_acl_rules Database subnets inbound network ACL rules
         * 
         * @return builder
         * 
         */
        public Builder database_inbound_acl_rules(List<Map<String,String>> database_inbound_acl_rules) {
            return database_inbound_acl_rules(Output.of(database_inbound_acl_rules));
        }

        /**
         * @param database_inbound_acl_rules Database subnets inbound network ACL rules
         * 
         * @return builder
         * 
         */
        public Builder database_inbound_acl_rules(Map<String,String>... database_inbound_acl_rules) {
            return database_inbound_acl_rules(List.of(database_inbound_acl_rules));
        }

        /**
         * @param database_outbound_acl_rules Database subnets outbound network ACL rules
         * 
         * @return builder
         * 
         */
        public Builder database_outbound_acl_rules(@Nullable Output<List<Map<String,String>>> database_outbound_acl_rules) {
            $.database_outbound_acl_rules = database_outbound_acl_rules;
            return this;
        }

        /**
         * @param database_outbound_acl_rules Database subnets outbound network ACL rules
         * 
         * @return builder
         * 
         */
        public Builder database_outbound_acl_rules(List<Map<String,String>> database_outbound_acl_rules) {
            return database_outbound_acl_rules(Output.of(database_outbound_acl_rules));
        }

        /**
         * @param database_outbound_acl_rules Database subnets outbound network ACL rules
         * 
         * @return builder
         * 
         */
        public Builder database_outbound_acl_rules(Map<String,String>... database_outbound_acl_rules) {
            return database_outbound_acl_rules(List.of(database_outbound_acl_rules));
        }

        /**
         * @param database_route_table_tags Additional tags for the database route tables
         * 
         * @return builder
         * 
         */
        public Builder database_route_table_tags(@Nullable Output<Map<String,String>> database_route_table_tags) {
            $.database_route_table_tags = database_route_table_tags;
            return this;
        }

        /**
         * @param database_route_table_tags Additional tags for the database route tables
         * 
         * @return builder
         * 
         */
        public Builder database_route_table_tags(Map<String,String> database_route_table_tags) {
            return database_route_table_tags(Output.of(database_route_table_tags));
        }

        /**
         * @param database_subnet_assign_ipv6_address_on_creation Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_assign_ipv6_address_on_creation(@Nullable Output<Boolean> database_subnet_assign_ipv6_address_on_creation) {
            $.database_subnet_assign_ipv6_address_on_creation = database_subnet_assign_ipv6_address_on_creation;
            return this;
        }

        /**
         * @param database_subnet_assign_ipv6_address_on_creation Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_assign_ipv6_address_on_creation(Boolean database_subnet_assign_ipv6_address_on_creation) {
            return database_subnet_assign_ipv6_address_on_creation(Output.of(database_subnet_assign_ipv6_address_on_creation));
        }

        /**
         * @param database_subnet_enable_dns64 Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_enable_dns64(@Nullable Output<Boolean> database_subnet_enable_dns64) {
            $.database_subnet_enable_dns64 = database_subnet_enable_dns64;
            return this;
        }

        /**
         * @param database_subnet_enable_dns64 Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_enable_dns64(Boolean database_subnet_enable_dns64) {
            return database_subnet_enable_dns64(Output.of(database_subnet_enable_dns64));
        }

        /**
         * @param database_subnet_enable_resource_name_dns_a_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_enable_resource_name_dns_a_record_on_launch(@Nullable Output<Boolean> database_subnet_enable_resource_name_dns_a_record_on_launch) {
            $.database_subnet_enable_resource_name_dns_a_record_on_launch = database_subnet_enable_resource_name_dns_a_record_on_launch;
            return this;
        }

        /**
         * @param database_subnet_enable_resource_name_dns_a_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_enable_resource_name_dns_a_record_on_launch(Boolean database_subnet_enable_resource_name_dns_a_record_on_launch) {
            return database_subnet_enable_resource_name_dns_a_record_on_launch(Output.of(database_subnet_enable_resource_name_dns_a_record_on_launch));
        }

        /**
         * @param database_subnet_enable_resource_name_dns_aaaa_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_enable_resource_name_dns_aaaa_record_on_launch(@Nullable Output<Boolean> database_subnet_enable_resource_name_dns_aaaa_record_on_launch) {
            $.database_subnet_enable_resource_name_dns_aaaa_record_on_launch = database_subnet_enable_resource_name_dns_aaaa_record_on_launch;
            return this;
        }

        /**
         * @param database_subnet_enable_resource_name_dns_aaaa_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_enable_resource_name_dns_aaaa_record_on_launch(Boolean database_subnet_enable_resource_name_dns_aaaa_record_on_launch) {
            return database_subnet_enable_resource_name_dns_aaaa_record_on_launch(Output.of(database_subnet_enable_resource_name_dns_aaaa_record_on_launch));
        }

        /**
         * @param database_subnet_group_name Name of database subnet group
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_group_name(@Nullable Output<String> database_subnet_group_name) {
            $.database_subnet_group_name = database_subnet_group_name;
            return this;
        }

        /**
         * @param database_subnet_group_name Name of database subnet group
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_group_name(String database_subnet_group_name) {
            return database_subnet_group_name(Output.of(database_subnet_group_name));
        }

        /**
         * @param database_subnet_group_tags Additional tags for the database subnet group
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_group_tags(@Nullable Output<Map<String,String>> database_subnet_group_tags) {
            $.database_subnet_group_tags = database_subnet_group_tags;
            return this;
        }

        /**
         * @param database_subnet_group_tags Additional tags for the database subnet group
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_group_tags(Map<String,String> database_subnet_group_tags) {
            return database_subnet_group_tags(Output.of(database_subnet_group_tags));
        }

        /**
         * @param database_subnet_ipv6_native Indicates whether to create an IPv6-only subnet. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_ipv6_native(@Nullable Output<Boolean> database_subnet_ipv6_native) {
            $.database_subnet_ipv6_native = database_subnet_ipv6_native;
            return this;
        }

        /**
         * @param database_subnet_ipv6_native Indicates whether to create an IPv6-only subnet. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_ipv6_native(Boolean database_subnet_ipv6_native) {
            return database_subnet_ipv6_native(Output.of(database_subnet_ipv6_native));
        }

        /**
         * @param database_subnet_ipv6_prefixes Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_ipv6_prefixes(@Nullable Output<List<String>> database_subnet_ipv6_prefixes) {
            $.database_subnet_ipv6_prefixes = database_subnet_ipv6_prefixes;
            return this;
        }

        /**
         * @param database_subnet_ipv6_prefixes Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_ipv6_prefixes(List<String> database_subnet_ipv6_prefixes) {
            return database_subnet_ipv6_prefixes(Output.of(database_subnet_ipv6_prefixes));
        }

        /**
         * @param database_subnet_ipv6_prefixes Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_ipv6_prefixes(String... database_subnet_ipv6_prefixes) {
            return database_subnet_ipv6_prefixes(List.of(database_subnet_ipv6_prefixes));
        }

        /**
         * @param database_subnet_names Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_names(@Nullable Output<List<String>> database_subnet_names) {
            $.database_subnet_names = database_subnet_names;
            return this;
        }

        /**
         * @param database_subnet_names Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_names(List<String> database_subnet_names) {
            return database_subnet_names(Output.of(database_subnet_names));
        }

        /**
         * @param database_subnet_names Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_names(String... database_subnet_names) {
            return database_subnet_names(List.of(database_subnet_names));
        }

        /**
         * @param database_subnet_private_dns_hostname_type_on_launch The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_private_dns_hostname_type_on_launch(@Nullable Output<String> database_subnet_private_dns_hostname_type_on_launch) {
            $.database_subnet_private_dns_hostname_type_on_launch = database_subnet_private_dns_hostname_type_on_launch;
            return this;
        }

        /**
         * @param database_subnet_private_dns_hostname_type_on_launch The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_private_dns_hostname_type_on_launch(String database_subnet_private_dns_hostname_type_on_launch) {
            return database_subnet_private_dns_hostname_type_on_launch(Output.of(database_subnet_private_dns_hostname_type_on_launch));
        }

        /**
         * @param database_subnet_suffix Suffix to append to database subnets name
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_suffix(@Nullable Output<String> database_subnet_suffix) {
            $.database_subnet_suffix = database_subnet_suffix;
            return this;
        }

        /**
         * @param database_subnet_suffix Suffix to append to database subnets name
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_suffix(String database_subnet_suffix) {
            return database_subnet_suffix(Output.of(database_subnet_suffix));
        }

        /**
         * @param database_subnet_tags Additional tags for the database subnets
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_tags(@Nullable Output<Map<String,String>> database_subnet_tags) {
            $.database_subnet_tags = database_subnet_tags;
            return this;
        }

        /**
         * @param database_subnet_tags Additional tags for the database subnets
         * 
         * @return builder
         * 
         */
        public Builder database_subnet_tags(Map<String,String> database_subnet_tags) {
            return database_subnet_tags(Output.of(database_subnet_tags));
        }

        /**
         * @param database_subnets A list of database subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder database_subnets(@Nullable Output<List<String>> database_subnets) {
            $.database_subnets = database_subnets;
            return this;
        }

        /**
         * @param database_subnets A list of database subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder database_subnets(List<String> database_subnets) {
            return database_subnets(Output.of(database_subnets));
        }

        /**
         * @param database_subnets A list of database subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder database_subnets(String... database_subnets) {
            return database_subnets(List.of(database_subnets));
        }

        /**
         * @param default_network_acl_egress List of maps of egress rules to set on the Default Network ACL
         * 
         * @return builder
         * 
         */
        public Builder default_network_acl_egress(@Nullable Output<List<Map<String,String>>> default_network_acl_egress) {
            $.default_network_acl_egress = default_network_acl_egress;
            return this;
        }

        /**
         * @param default_network_acl_egress List of maps of egress rules to set on the Default Network ACL
         * 
         * @return builder
         * 
         */
        public Builder default_network_acl_egress(List<Map<String,String>> default_network_acl_egress) {
            return default_network_acl_egress(Output.of(default_network_acl_egress));
        }

        /**
         * @param default_network_acl_egress List of maps of egress rules to set on the Default Network ACL
         * 
         * @return builder
         * 
         */
        public Builder default_network_acl_egress(Map<String,String>... default_network_acl_egress) {
            return default_network_acl_egress(List.of(default_network_acl_egress));
        }

        /**
         * @param default_network_acl_ingress List of maps of ingress rules to set on the Default Network ACL
         * 
         * @return builder
         * 
         */
        public Builder default_network_acl_ingress(@Nullable Output<List<Map<String,String>>> default_network_acl_ingress) {
            $.default_network_acl_ingress = default_network_acl_ingress;
            return this;
        }

        /**
         * @param default_network_acl_ingress List of maps of ingress rules to set on the Default Network ACL
         * 
         * @return builder
         * 
         */
        public Builder default_network_acl_ingress(List<Map<String,String>> default_network_acl_ingress) {
            return default_network_acl_ingress(Output.of(default_network_acl_ingress));
        }

        /**
         * @param default_network_acl_ingress List of maps of ingress rules to set on the Default Network ACL
         * 
         * @return builder
         * 
         */
        public Builder default_network_acl_ingress(Map<String,String>... default_network_acl_ingress) {
            return default_network_acl_ingress(List.of(default_network_acl_ingress));
        }

        /**
         * @param default_network_acl_name Name to be used on the Default Network ACL
         * 
         * @return builder
         * 
         */
        public Builder default_network_acl_name(@Nullable Output<String> default_network_acl_name) {
            $.default_network_acl_name = default_network_acl_name;
            return this;
        }

        /**
         * @param default_network_acl_name Name to be used on the Default Network ACL
         * 
         * @return builder
         * 
         */
        public Builder default_network_acl_name(String default_network_acl_name) {
            return default_network_acl_name(Output.of(default_network_acl_name));
        }

        /**
         * @param default_network_acl_tags Additional tags for the Default Network ACL
         * 
         * @return builder
         * 
         */
        public Builder default_network_acl_tags(@Nullable Output<Map<String,String>> default_network_acl_tags) {
            $.default_network_acl_tags = default_network_acl_tags;
            return this;
        }

        /**
         * @param default_network_acl_tags Additional tags for the Default Network ACL
         * 
         * @return builder
         * 
         */
        public Builder default_network_acl_tags(Map<String,String> default_network_acl_tags) {
            return default_network_acl_tags(Output.of(default_network_acl_tags));
        }

        /**
         * @param default_route_table_name Name to be used on the default route table
         * 
         * @return builder
         * 
         */
        public Builder default_route_table_name(@Nullable Output<String> default_route_table_name) {
            $.default_route_table_name = default_route_table_name;
            return this;
        }

        /**
         * @param default_route_table_name Name to be used on the default route table
         * 
         * @return builder
         * 
         */
        public Builder default_route_table_name(String default_route_table_name) {
            return default_route_table_name(Output.of(default_route_table_name));
        }

        /**
         * @param default_route_table_propagating_vgws List of virtual gateways for propagation
         * 
         * @return builder
         * 
         */
        public Builder default_route_table_propagating_vgws(@Nullable Output<List<String>> default_route_table_propagating_vgws) {
            $.default_route_table_propagating_vgws = default_route_table_propagating_vgws;
            return this;
        }

        /**
         * @param default_route_table_propagating_vgws List of virtual gateways for propagation
         * 
         * @return builder
         * 
         */
        public Builder default_route_table_propagating_vgws(List<String> default_route_table_propagating_vgws) {
            return default_route_table_propagating_vgws(Output.of(default_route_table_propagating_vgws));
        }

        /**
         * @param default_route_table_propagating_vgws List of virtual gateways for propagation
         * 
         * @return builder
         * 
         */
        public Builder default_route_table_propagating_vgws(String... default_route_table_propagating_vgws) {
            return default_route_table_propagating_vgws(List.of(default_route_table_propagating_vgws));
        }

        /**
         * @param default_route_table_routes Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route
         * 
         * @return builder
         * 
         */
        public Builder default_route_table_routes(@Nullable Output<List<Map<String,String>>> default_route_table_routes) {
            $.default_route_table_routes = default_route_table_routes;
            return this;
        }

        /**
         * @param default_route_table_routes Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route
         * 
         * @return builder
         * 
         */
        public Builder default_route_table_routes(List<Map<String,String>> default_route_table_routes) {
            return default_route_table_routes(Output.of(default_route_table_routes));
        }

        /**
         * @param default_route_table_routes Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route
         * 
         * @return builder
         * 
         */
        public Builder default_route_table_routes(Map<String,String>... default_route_table_routes) {
            return default_route_table_routes(List.of(default_route_table_routes));
        }

        /**
         * @param default_route_table_tags Additional tags for the default route table
         * 
         * @return builder
         * 
         */
        public Builder default_route_table_tags(@Nullable Output<Map<String,String>> default_route_table_tags) {
            $.default_route_table_tags = default_route_table_tags;
            return this;
        }

        /**
         * @param default_route_table_tags Additional tags for the default route table
         * 
         * @return builder
         * 
         */
        public Builder default_route_table_tags(Map<String,String> default_route_table_tags) {
            return default_route_table_tags(Output.of(default_route_table_tags));
        }

        /**
         * @param default_security_group_egress List of maps of egress rules to set on the default security group
         * 
         * @return builder
         * 
         */
        public Builder default_security_group_egress(@Nullable Output<List<Map<String,String>>> default_security_group_egress) {
            $.default_security_group_egress = default_security_group_egress;
            return this;
        }

        /**
         * @param default_security_group_egress List of maps of egress rules to set on the default security group
         * 
         * @return builder
         * 
         */
        public Builder default_security_group_egress(List<Map<String,String>> default_security_group_egress) {
            return default_security_group_egress(Output.of(default_security_group_egress));
        }

        /**
         * @param default_security_group_egress List of maps of egress rules to set on the default security group
         * 
         * @return builder
         * 
         */
        public Builder default_security_group_egress(Map<String,String>... default_security_group_egress) {
            return default_security_group_egress(List.of(default_security_group_egress));
        }

        /**
         * @param default_security_group_ingress List of maps of ingress rules to set on the default security group
         * 
         * @return builder
         * 
         */
        public Builder default_security_group_ingress(@Nullable Output<List<Map<String,String>>> default_security_group_ingress) {
            $.default_security_group_ingress = default_security_group_ingress;
            return this;
        }

        /**
         * @param default_security_group_ingress List of maps of ingress rules to set on the default security group
         * 
         * @return builder
         * 
         */
        public Builder default_security_group_ingress(List<Map<String,String>> default_security_group_ingress) {
            return default_security_group_ingress(Output.of(default_security_group_ingress));
        }

        /**
         * @param default_security_group_ingress List of maps of ingress rules to set on the default security group
         * 
         * @return builder
         * 
         */
        public Builder default_security_group_ingress(Map<String,String>... default_security_group_ingress) {
            return default_security_group_ingress(List.of(default_security_group_ingress));
        }

        /**
         * @param default_security_group_name Name to be used on the default security group
         * 
         * @return builder
         * 
         */
        public Builder default_security_group_name(@Nullable Output<String> default_security_group_name) {
            $.default_security_group_name = default_security_group_name;
            return this;
        }

        /**
         * @param default_security_group_name Name to be used on the default security group
         * 
         * @return builder
         * 
         */
        public Builder default_security_group_name(String default_security_group_name) {
            return default_security_group_name(Output.of(default_security_group_name));
        }

        /**
         * @param default_security_group_tags Additional tags for the default security group
         * 
         * @return builder
         * 
         */
        public Builder default_security_group_tags(@Nullable Output<Map<String,String>> default_security_group_tags) {
            $.default_security_group_tags = default_security_group_tags;
            return this;
        }

        /**
         * @param default_security_group_tags Additional tags for the default security group
         * 
         * @return builder
         * 
         */
        public Builder default_security_group_tags(Map<String,String> default_security_group_tags) {
            return default_security_group_tags(Output.of(default_security_group_tags));
        }

        /**
         * @param default_vpc_enable_dns_hostnames Should be true to enable DNS hostnames in the Default VPC
         * 
         * @return builder
         * 
         */
        public Builder default_vpc_enable_dns_hostnames(@Nullable Output<Boolean> default_vpc_enable_dns_hostnames) {
            $.default_vpc_enable_dns_hostnames = default_vpc_enable_dns_hostnames;
            return this;
        }

        /**
         * @param default_vpc_enable_dns_hostnames Should be true to enable DNS hostnames in the Default VPC
         * 
         * @return builder
         * 
         */
        public Builder default_vpc_enable_dns_hostnames(Boolean default_vpc_enable_dns_hostnames) {
            return default_vpc_enable_dns_hostnames(Output.of(default_vpc_enable_dns_hostnames));
        }

        /**
         * @param default_vpc_enable_dns_support Should be true to enable DNS support in the Default VPC
         * 
         * @return builder
         * 
         */
        public Builder default_vpc_enable_dns_support(@Nullable Output<Boolean> default_vpc_enable_dns_support) {
            $.default_vpc_enable_dns_support = default_vpc_enable_dns_support;
            return this;
        }

        /**
         * @param default_vpc_enable_dns_support Should be true to enable DNS support in the Default VPC
         * 
         * @return builder
         * 
         */
        public Builder default_vpc_enable_dns_support(Boolean default_vpc_enable_dns_support) {
            return default_vpc_enable_dns_support(Output.of(default_vpc_enable_dns_support));
        }

        /**
         * @param default_vpc_name Name to be used on the Default VPC
         * 
         * @return builder
         * 
         */
        public Builder default_vpc_name(@Nullable Output<String> default_vpc_name) {
            $.default_vpc_name = default_vpc_name;
            return this;
        }

        /**
         * @param default_vpc_name Name to be used on the Default VPC
         * 
         * @return builder
         * 
         */
        public Builder default_vpc_name(String default_vpc_name) {
            return default_vpc_name(Output.of(default_vpc_name));
        }

        /**
         * @param default_vpc_tags Additional tags for the Default VPC
         * 
         * @return builder
         * 
         */
        public Builder default_vpc_tags(@Nullable Output<Map<String,String>> default_vpc_tags) {
            $.default_vpc_tags = default_vpc_tags;
            return this;
        }

        /**
         * @param default_vpc_tags Additional tags for the Default VPC
         * 
         * @return builder
         * 
         */
        public Builder default_vpc_tags(Map<String,String> default_vpc_tags) {
            return default_vpc_tags(Output.of(default_vpc_tags));
        }

        /**
         * @param dhcp_options_domain_name Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)
         * 
         * @return builder
         * 
         */
        public Builder dhcp_options_domain_name(@Nullable Output<String> dhcp_options_domain_name) {
            $.dhcp_options_domain_name = dhcp_options_domain_name;
            return this;
        }

        /**
         * @param dhcp_options_domain_name Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)
         * 
         * @return builder
         * 
         */
        public Builder dhcp_options_domain_name(String dhcp_options_domain_name) {
            return dhcp_options_domain_name(Output.of(dhcp_options_domain_name));
        }

        /**
         * @param dhcp_options_domain_name_servers Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)
         * 
         * @return builder
         * 
         */
        public Builder dhcp_options_domain_name_servers(@Nullable Output<List<String>> dhcp_options_domain_name_servers) {
            $.dhcp_options_domain_name_servers = dhcp_options_domain_name_servers;
            return this;
        }

        /**
         * @param dhcp_options_domain_name_servers Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)
         * 
         * @return builder
         * 
         */
        public Builder dhcp_options_domain_name_servers(List<String> dhcp_options_domain_name_servers) {
            return dhcp_options_domain_name_servers(Output.of(dhcp_options_domain_name_servers));
        }

        /**
         * @param dhcp_options_domain_name_servers Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)
         * 
         * @return builder
         * 
         */
        public Builder dhcp_options_domain_name_servers(String... dhcp_options_domain_name_servers) {
            return dhcp_options_domain_name_servers(List.of(dhcp_options_domain_name_servers));
        }

        /**
         * @param dhcp_options_ipv6_address_preferred_lease_time How frequently, in seconds, a running instance with an IPv6 assigned to it goes through DHCPv6 lease renewal (requires enable_dhcp_options set to true)
         * 
         * @return builder
         * 
         */
        public Builder dhcp_options_ipv6_address_preferred_lease_time(@Nullable Output<Double> dhcp_options_ipv6_address_preferred_lease_time) {
            $.dhcp_options_ipv6_address_preferred_lease_time = dhcp_options_ipv6_address_preferred_lease_time;
            return this;
        }

        /**
         * @param dhcp_options_ipv6_address_preferred_lease_time How frequently, in seconds, a running instance with an IPv6 assigned to it goes through DHCPv6 lease renewal (requires enable_dhcp_options set to true)
         * 
         * @return builder
         * 
         */
        public Builder dhcp_options_ipv6_address_preferred_lease_time(Double dhcp_options_ipv6_address_preferred_lease_time) {
            return dhcp_options_ipv6_address_preferred_lease_time(Output.of(dhcp_options_ipv6_address_preferred_lease_time));
        }

        /**
         * @param dhcp_options_netbios_name_servers Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)
         * 
         * @return builder
         * 
         */
        public Builder dhcp_options_netbios_name_servers(@Nullable Output<List<String>> dhcp_options_netbios_name_servers) {
            $.dhcp_options_netbios_name_servers = dhcp_options_netbios_name_servers;
            return this;
        }

        /**
         * @param dhcp_options_netbios_name_servers Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)
         * 
         * @return builder
         * 
         */
        public Builder dhcp_options_netbios_name_servers(List<String> dhcp_options_netbios_name_servers) {
            return dhcp_options_netbios_name_servers(Output.of(dhcp_options_netbios_name_servers));
        }

        /**
         * @param dhcp_options_netbios_name_servers Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)
         * 
         * @return builder
         * 
         */
        public Builder dhcp_options_netbios_name_servers(String... dhcp_options_netbios_name_servers) {
            return dhcp_options_netbios_name_servers(List.of(dhcp_options_netbios_name_servers));
        }

        /**
         * @param dhcp_options_netbios_node_type Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)
         * 
         * @return builder
         * 
         */
        public Builder dhcp_options_netbios_node_type(@Nullable Output<String> dhcp_options_netbios_node_type) {
            $.dhcp_options_netbios_node_type = dhcp_options_netbios_node_type;
            return this;
        }

        /**
         * @param dhcp_options_netbios_node_type Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)
         * 
         * @return builder
         * 
         */
        public Builder dhcp_options_netbios_node_type(String dhcp_options_netbios_node_type) {
            return dhcp_options_netbios_node_type(Output.of(dhcp_options_netbios_node_type));
        }

        /**
         * @param dhcp_options_ntp_servers Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)
         * 
         * @return builder
         * 
         */
        public Builder dhcp_options_ntp_servers(@Nullable Output<List<String>> dhcp_options_ntp_servers) {
            $.dhcp_options_ntp_servers = dhcp_options_ntp_servers;
            return this;
        }

        /**
         * @param dhcp_options_ntp_servers Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)
         * 
         * @return builder
         * 
         */
        public Builder dhcp_options_ntp_servers(List<String> dhcp_options_ntp_servers) {
            return dhcp_options_ntp_servers(Output.of(dhcp_options_ntp_servers));
        }

        /**
         * @param dhcp_options_ntp_servers Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)
         * 
         * @return builder
         * 
         */
        public Builder dhcp_options_ntp_servers(String... dhcp_options_ntp_servers) {
            return dhcp_options_ntp_servers(List.of(dhcp_options_ntp_servers));
        }

        /**
         * @param dhcp_options_tags Additional tags for the DHCP option set (requires enable_dhcp_options set to true)
         * 
         * @return builder
         * 
         */
        public Builder dhcp_options_tags(@Nullable Output<Map<String,String>> dhcp_options_tags) {
            $.dhcp_options_tags = dhcp_options_tags;
            return this;
        }

        /**
         * @param dhcp_options_tags Additional tags for the DHCP option set (requires enable_dhcp_options set to true)
         * 
         * @return builder
         * 
         */
        public Builder dhcp_options_tags(Map<String,String> dhcp_options_tags) {
            return dhcp_options_tags(Output.of(dhcp_options_tags));
        }

        /**
         * @param elasticache_acl_tags Additional tags for the elasticache subnets network ACL
         * 
         * @return builder
         * 
         */
        public Builder elasticache_acl_tags(@Nullable Output<Map<String,String>> elasticache_acl_tags) {
            $.elasticache_acl_tags = elasticache_acl_tags;
            return this;
        }

        /**
         * @param elasticache_acl_tags Additional tags for the elasticache subnets network ACL
         * 
         * @return builder
         * 
         */
        public Builder elasticache_acl_tags(Map<String,String> elasticache_acl_tags) {
            return elasticache_acl_tags(Output.of(elasticache_acl_tags));
        }

        /**
         * @param elasticache_dedicated_network_acl Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets
         * 
         * @return builder
         * 
         */
        public Builder elasticache_dedicated_network_acl(@Nullable Output<Boolean> elasticache_dedicated_network_acl) {
            $.elasticache_dedicated_network_acl = elasticache_dedicated_network_acl;
            return this;
        }

        /**
         * @param elasticache_dedicated_network_acl Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets
         * 
         * @return builder
         * 
         */
        public Builder elasticache_dedicated_network_acl(Boolean elasticache_dedicated_network_acl) {
            return elasticache_dedicated_network_acl(Output.of(elasticache_dedicated_network_acl));
        }

        /**
         * @param elasticache_inbound_acl_rules Elasticache subnets inbound network ACL rules
         * 
         * @return builder
         * 
         */
        public Builder elasticache_inbound_acl_rules(@Nullable Output<List<Map<String,String>>> elasticache_inbound_acl_rules) {
            $.elasticache_inbound_acl_rules = elasticache_inbound_acl_rules;
            return this;
        }

        /**
         * @param elasticache_inbound_acl_rules Elasticache subnets inbound network ACL rules
         * 
         * @return builder
         * 
         */
        public Builder elasticache_inbound_acl_rules(List<Map<String,String>> elasticache_inbound_acl_rules) {
            return elasticache_inbound_acl_rules(Output.of(elasticache_inbound_acl_rules));
        }

        /**
         * @param elasticache_inbound_acl_rules Elasticache subnets inbound network ACL rules
         * 
         * @return builder
         * 
         */
        public Builder elasticache_inbound_acl_rules(Map<String,String>... elasticache_inbound_acl_rules) {
            return elasticache_inbound_acl_rules(List.of(elasticache_inbound_acl_rules));
        }

        /**
         * @param elasticache_outbound_acl_rules Elasticache subnets outbound network ACL rules
         * 
         * @return builder
         * 
         */
        public Builder elasticache_outbound_acl_rules(@Nullable Output<List<Map<String,String>>> elasticache_outbound_acl_rules) {
            $.elasticache_outbound_acl_rules = elasticache_outbound_acl_rules;
            return this;
        }

        /**
         * @param elasticache_outbound_acl_rules Elasticache subnets outbound network ACL rules
         * 
         * @return builder
         * 
         */
        public Builder elasticache_outbound_acl_rules(List<Map<String,String>> elasticache_outbound_acl_rules) {
            return elasticache_outbound_acl_rules(Output.of(elasticache_outbound_acl_rules));
        }

        /**
         * @param elasticache_outbound_acl_rules Elasticache subnets outbound network ACL rules
         * 
         * @return builder
         * 
         */
        public Builder elasticache_outbound_acl_rules(Map<String,String>... elasticache_outbound_acl_rules) {
            return elasticache_outbound_acl_rules(List.of(elasticache_outbound_acl_rules));
        }

        /**
         * @param elasticache_route_table_tags Additional tags for the elasticache route tables
         * 
         * @return builder
         * 
         */
        public Builder elasticache_route_table_tags(@Nullable Output<Map<String,String>> elasticache_route_table_tags) {
            $.elasticache_route_table_tags = elasticache_route_table_tags;
            return this;
        }

        /**
         * @param elasticache_route_table_tags Additional tags for the elasticache route tables
         * 
         * @return builder
         * 
         */
        public Builder elasticache_route_table_tags(Map<String,String> elasticache_route_table_tags) {
            return elasticache_route_table_tags(Output.of(elasticache_route_table_tags));
        }

        /**
         * @param elasticache_subnet_assign_ipv6_address_on_creation Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_assign_ipv6_address_on_creation(@Nullable Output<Boolean> elasticache_subnet_assign_ipv6_address_on_creation) {
            $.elasticache_subnet_assign_ipv6_address_on_creation = elasticache_subnet_assign_ipv6_address_on_creation;
            return this;
        }

        /**
         * @param elasticache_subnet_assign_ipv6_address_on_creation Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_assign_ipv6_address_on_creation(Boolean elasticache_subnet_assign_ipv6_address_on_creation) {
            return elasticache_subnet_assign_ipv6_address_on_creation(Output.of(elasticache_subnet_assign_ipv6_address_on_creation));
        }

        /**
         * @param elasticache_subnet_enable_dns64 Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_enable_dns64(@Nullable Output<Boolean> elasticache_subnet_enable_dns64) {
            $.elasticache_subnet_enable_dns64 = elasticache_subnet_enable_dns64;
            return this;
        }

        /**
         * @param elasticache_subnet_enable_dns64 Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_enable_dns64(Boolean elasticache_subnet_enable_dns64) {
            return elasticache_subnet_enable_dns64(Output.of(elasticache_subnet_enable_dns64));
        }

        /**
         * @param elasticache_subnet_enable_resource_name_dns_a_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_enable_resource_name_dns_a_record_on_launch(@Nullable Output<Boolean> elasticache_subnet_enable_resource_name_dns_a_record_on_launch) {
            $.elasticache_subnet_enable_resource_name_dns_a_record_on_launch = elasticache_subnet_enable_resource_name_dns_a_record_on_launch;
            return this;
        }

        /**
         * @param elasticache_subnet_enable_resource_name_dns_a_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_enable_resource_name_dns_a_record_on_launch(Boolean elasticache_subnet_enable_resource_name_dns_a_record_on_launch) {
            return elasticache_subnet_enable_resource_name_dns_a_record_on_launch(Output.of(elasticache_subnet_enable_resource_name_dns_a_record_on_launch));
        }

        /**
         * @param elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch(@Nullable Output<Boolean> elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch) {
            $.elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch = elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch;
            return this;
        }

        /**
         * @param elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch(Boolean elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch) {
            return elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch(Output.of(elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch));
        }

        /**
         * @param elasticache_subnet_group_name Name of elasticache subnet group
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_group_name(@Nullable Output<String> elasticache_subnet_group_name) {
            $.elasticache_subnet_group_name = elasticache_subnet_group_name;
            return this;
        }

        /**
         * @param elasticache_subnet_group_name Name of elasticache subnet group
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_group_name(String elasticache_subnet_group_name) {
            return elasticache_subnet_group_name(Output.of(elasticache_subnet_group_name));
        }

        /**
         * @param elasticache_subnet_group_tags Additional tags for the elasticache subnet group
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_group_tags(@Nullable Output<Map<String,String>> elasticache_subnet_group_tags) {
            $.elasticache_subnet_group_tags = elasticache_subnet_group_tags;
            return this;
        }

        /**
         * @param elasticache_subnet_group_tags Additional tags for the elasticache subnet group
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_group_tags(Map<String,String> elasticache_subnet_group_tags) {
            return elasticache_subnet_group_tags(Output.of(elasticache_subnet_group_tags));
        }

        /**
         * @param elasticache_subnet_ipv6_native Indicates whether to create an IPv6-only subnet. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_ipv6_native(@Nullable Output<Boolean> elasticache_subnet_ipv6_native) {
            $.elasticache_subnet_ipv6_native = elasticache_subnet_ipv6_native;
            return this;
        }

        /**
         * @param elasticache_subnet_ipv6_native Indicates whether to create an IPv6-only subnet. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_ipv6_native(Boolean elasticache_subnet_ipv6_native) {
            return elasticache_subnet_ipv6_native(Output.of(elasticache_subnet_ipv6_native));
        }

        /**
         * @param elasticache_subnet_ipv6_prefixes Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_ipv6_prefixes(@Nullable Output<List<String>> elasticache_subnet_ipv6_prefixes) {
            $.elasticache_subnet_ipv6_prefixes = elasticache_subnet_ipv6_prefixes;
            return this;
        }

        /**
         * @param elasticache_subnet_ipv6_prefixes Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_ipv6_prefixes(List<String> elasticache_subnet_ipv6_prefixes) {
            return elasticache_subnet_ipv6_prefixes(Output.of(elasticache_subnet_ipv6_prefixes));
        }

        /**
         * @param elasticache_subnet_ipv6_prefixes Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_ipv6_prefixes(String... elasticache_subnet_ipv6_prefixes) {
            return elasticache_subnet_ipv6_prefixes(List.of(elasticache_subnet_ipv6_prefixes));
        }

        /**
         * @param elasticache_subnet_names Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_names(@Nullable Output<List<String>> elasticache_subnet_names) {
            $.elasticache_subnet_names = elasticache_subnet_names;
            return this;
        }

        /**
         * @param elasticache_subnet_names Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_names(List<String> elasticache_subnet_names) {
            return elasticache_subnet_names(Output.of(elasticache_subnet_names));
        }

        /**
         * @param elasticache_subnet_names Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_names(String... elasticache_subnet_names) {
            return elasticache_subnet_names(List.of(elasticache_subnet_names));
        }

        /**
         * @param elasticache_subnet_private_dns_hostname_type_on_launch The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_private_dns_hostname_type_on_launch(@Nullable Output<String> elasticache_subnet_private_dns_hostname_type_on_launch) {
            $.elasticache_subnet_private_dns_hostname_type_on_launch = elasticache_subnet_private_dns_hostname_type_on_launch;
            return this;
        }

        /**
         * @param elasticache_subnet_private_dns_hostname_type_on_launch The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_private_dns_hostname_type_on_launch(String elasticache_subnet_private_dns_hostname_type_on_launch) {
            return elasticache_subnet_private_dns_hostname_type_on_launch(Output.of(elasticache_subnet_private_dns_hostname_type_on_launch));
        }

        /**
         * @param elasticache_subnet_suffix Suffix to append to elasticache subnets name
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_suffix(@Nullable Output<String> elasticache_subnet_suffix) {
            $.elasticache_subnet_suffix = elasticache_subnet_suffix;
            return this;
        }

        /**
         * @param elasticache_subnet_suffix Suffix to append to elasticache subnets name
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_suffix(String elasticache_subnet_suffix) {
            return elasticache_subnet_suffix(Output.of(elasticache_subnet_suffix));
        }

        /**
         * @param elasticache_subnet_tags Additional tags for the elasticache subnets
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_tags(@Nullable Output<Map<String,String>> elasticache_subnet_tags) {
            $.elasticache_subnet_tags = elasticache_subnet_tags;
            return this;
        }

        /**
         * @param elasticache_subnet_tags Additional tags for the elasticache subnets
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnet_tags(Map<String,String> elasticache_subnet_tags) {
            return elasticache_subnet_tags(Output.of(elasticache_subnet_tags));
        }

        /**
         * @param elasticache_subnets A list of elasticache subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnets(@Nullable Output<List<String>> elasticache_subnets) {
            $.elasticache_subnets = elasticache_subnets;
            return this;
        }

        /**
         * @param elasticache_subnets A list of elasticache subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnets(List<String> elasticache_subnets) {
            return elasticache_subnets(Output.of(elasticache_subnets));
        }

        /**
         * @param elasticache_subnets A list of elasticache subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder elasticache_subnets(String... elasticache_subnets) {
            return elasticache_subnets(List.of(elasticache_subnets));
        }

        /**
         * @param enable_dhcp_options Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type
         * 
         * @return builder
         * 
         */
        public Builder enable_dhcp_options(@Nullable Output<Boolean> enable_dhcp_options) {
            $.enable_dhcp_options = enable_dhcp_options;
            return this;
        }

        /**
         * @param enable_dhcp_options Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type
         * 
         * @return builder
         * 
         */
        public Builder enable_dhcp_options(Boolean enable_dhcp_options) {
            return enable_dhcp_options(Output.of(enable_dhcp_options));
        }

        /**
         * @param enable_dns_hostnames Should be true to enable DNS hostnames in the VPC
         * 
         * @return builder
         * 
         */
        public Builder enable_dns_hostnames(@Nullable Output<Boolean> enable_dns_hostnames) {
            $.enable_dns_hostnames = enable_dns_hostnames;
            return this;
        }

        /**
         * @param enable_dns_hostnames Should be true to enable DNS hostnames in the VPC
         * 
         * @return builder
         * 
         */
        public Builder enable_dns_hostnames(Boolean enable_dns_hostnames) {
            return enable_dns_hostnames(Output.of(enable_dns_hostnames));
        }

        /**
         * @param enable_dns_support Should be true to enable DNS support in the VPC
         * 
         * @return builder
         * 
         */
        public Builder enable_dns_support(@Nullable Output<Boolean> enable_dns_support) {
            $.enable_dns_support = enable_dns_support;
            return this;
        }

        /**
         * @param enable_dns_support Should be true to enable DNS support in the VPC
         * 
         * @return builder
         * 
         */
        public Builder enable_dns_support(Boolean enable_dns_support) {
            return enable_dns_support(Output.of(enable_dns_support));
        }

        /**
         * @param enable_flow_log Whether or not to enable VPC Flow Logs
         * 
         * @return builder
         * 
         */
        public Builder enable_flow_log(@Nullable Output<Boolean> enable_flow_log) {
            $.enable_flow_log = enable_flow_log;
            return this;
        }

        /**
         * @param enable_flow_log Whether or not to enable VPC Flow Logs
         * 
         * @return builder
         * 
         */
        public Builder enable_flow_log(Boolean enable_flow_log) {
            return enable_flow_log(Output.of(enable_flow_log));
        }

        /**
         * @param enable_ipv6 Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block
         * 
         * @return builder
         * 
         */
        public Builder enable_ipv6(@Nullable Output<Boolean> enable_ipv6) {
            $.enable_ipv6 = enable_ipv6;
            return this;
        }

        /**
         * @param enable_ipv6 Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block
         * 
         * @return builder
         * 
         */
        public Builder enable_ipv6(Boolean enable_ipv6) {
            return enable_ipv6(Output.of(enable_ipv6));
        }

        /**
         * @param enable_nat_gateway Should be true if you want to provision NAT Gateways for each of your private networks
         * 
         * @return builder
         * 
         */
        public Builder enable_nat_gateway(@Nullable Output<Boolean> enable_nat_gateway) {
            $.enable_nat_gateway = enable_nat_gateway;
            return this;
        }

        /**
         * @param enable_nat_gateway Should be true if you want to provision NAT Gateways for each of your private networks
         * 
         * @return builder
         * 
         */
        public Builder enable_nat_gateway(Boolean enable_nat_gateway) {
            return enable_nat_gateway(Output.of(enable_nat_gateway));
        }

        /**
         * @param enable_network_address_usage_metrics Determines whether network address usage metrics are enabled for the VPC
         * 
         * @return builder
         * 
         */
        public Builder enable_network_address_usage_metrics(@Nullable Output<Boolean> enable_network_address_usage_metrics) {
            $.enable_network_address_usage_metrics = enable_network_address_usage_metrics;
            return this;
        }

        /**
         * @param enable_network_address_usage_metrics Determines whether network address usage metrics are enabled for the VPC
         * 
         * @return builder
         * 
         */
        public Builder enable_network_address_usage_metrics(Boolean enable_network_address_usage_metrics) {
            return enable_network_address_usage_metrics(Output.of(enable_network_address_usage_metrics));
        }

        /**
         * @param enable_public_redshift Controls if redshift should have public routing table
         * 
         * @return builder
         * 
         */
        public Builder enable_public_redshift(@Nullable Output<Boolean> enable_public_redshift) {
            $.enable_public_redshift = enable_public_redshift;
            return this;
        }

        /**
         * @param enable_public_redshift Controls if redshift should have public routing table
         * 
         * @return builder
         * 
         */
        public Builder enable_public_redshift(Boolean enable_public_redshift) {
            return enable_public_redshift(Output.of(enable_public_redshift));
        }

        /**
         * @param enable_vpn_gateway Should be true if you want to create a new VPN Gateway resource and attach it to the VPC
         * 
         * @return builder
         * 
         */
        public Builder enable_vpn_gateway(@Nullable Output<Boolean> enable_vpn_gateway) {
            $.enable_vpn_gateway = enable_vpn_gateway;
            return this;
        }

        /**
         * @param enable_vpn_gateway Should be true if you want to create a new VPN Gateway resource and attach it to the VPC
         * 
         * @return builder
         * 
         */
        public Builder enable_vpn_gateway(Boolean enable_vpn_gateway) {
            return enable_vpn_gateway(Output.of(enable_vpn_gateway));
        }

        /**
         * @param external_nat_ip_ids List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)
         * 
         * @return builder
         * 
         */
        public Builder external_nat_ip_ids(@Nullable Output<List<String>> external_nat_ip_ids) {
            $.external_nat_ip_ids = external_nat_ip_ids;
            return this;
        }

        /**
         * @param external_nat_ip_ids List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)
         * 
         * @return builder
         * 
         */
        public Builder external_nat_ip_ids(List<String> external_nat_ip_ids) {
            return external_nat_ip_ids(Output.of(external_nat_ip_ids));
        }

        /**
         * @param external_nat_ip_ids List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)
         * 
         * @return builder
         * 
         */
        public Builder external_nat_ip_ids(String... external_nat_ip_ids) {
            return external_nat_ip_ids(List.of(external_nat_ip_ids));
        }

        /**
         * @param external_nat_ips List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)
         * 
         * @return builder
         * 
         */
        public Builder external_nat_ips(@Nullable Output<List<String>> external_nat_ips) {
            $.external_nat_ips = external_nat_ips;
            return this;
        }

        /**
         * @param external_nat_ips List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)
         * 
         * @return builder
         * 
         */
        public Builder external_nat_ips(List<String> external_nat_ips) {
            return external_nat_ips(Output.of(external_nat_ips));
        }

        /**
         * @param external_nat_ips List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)
         * 
         * @return builder
         * 
         */
        public Builder external_nat_ips(String... external_nat_ips) {
            return external_nat_ips(List.of(external_nat_ips));
        }

        /**
         * @param flow_log_cloudwatch_iam_role_arn The ARN for the IAM role that&#39;s used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided
         * 
         * @return builder
         * 
         */
        public Builder flow_log_cloudwatch_iam_role_arn(@Nullable Output<String> flow_log_cloudwatch_iam_role_arn) {
            $.flow_log_cloudwatch_iam_role_arn = flow_log_cloudwatch_iam_role_arn;
            return this;
        }

        /**
         * @param flow_log_cloudwatch_iam_role_arn The ARN for the IAM role that&#39;s used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided
         * 
         * @return builder
         * 
         */
        public Builder flow_log_cloudwatch_iam_role_arn(String flow_log_cloudwatch_iam_role_arn) {
            return flow_log_cloudwatch_iam_role_arn(Output.of(flow_log_cloudwatch_iam_role_arn));
        }

        /**
         * @param flow_log_cloudwatch_iam_role_conditions Additional conditions of the CloudWatch role assumption policy
         * 
         * @return builder
         * 
         */
        public Builder flow_log_cloudwatch_iam_role_conditions(@Nullable Output<List<FlowLogCloudwatchIamRoleConditionsArgs>> flow_log_cloudwatch_iam_role_conditions) {
            $.flow_log_cloudwatch_iam_role_conditions = flow_log_cloudwatch_iam_role_conditions;
            return this;
        }

        /**
         * @param flow_log_cloudwatch_iam_role_conditions Additional conditions of the CloudWatch role assumption policy
         * 
         * @return builder
         * 
         */
        public Builder flow_log_cloudwatch_iam_role_conditions(List<FlowLogCloudwatchIamRoleConditionsArgs> flow_log_cloudwatch_iam_role_conditions) {
            return flow_log_cloudwatch_iam_role_conditions(Output.of(flow_log_cloudwatch_iam_role_conditions));
        }

        /**
         * @param flow_log_cloudwatch_iam_role_conditions Additional conditions of the CloudWatch role assumption policy
         * 
         * @return builder
         * 
         */
        public Builder flow_log_cloudwatch_iam_role_conditions(FlowLogCloudwatchIamRoleConditionsArgs... flow_log_cloudwatch_iam_role_conditions) {
            return flow_log_cloudwatch_iam_role_conditions(List.of(flow_log_cloudwatch_iam_role_conditions));
        }

        /**
         * @param flow_log_cloudwatch_log_group_class Specified the log class of the log group. Possible values are: STANDARD or INFREQUENT_ACCESS
         * 
         * @return builder
         * 
         */
        public Builder flow_log_cloudwatch_log_group_class(@Nullable Output<String> flow_log_cloudwatch_log_group_class) {
            $.flow_log_cloudwatch_log_group_class = flow_log_cloudwatch_log_group_class;
            return this;
        }

        /**
         * @param flow_log_cloudwatch_log_group_class Specified the log class of the log group. Possible values are: STANDARD or INFREQUENT_ACCESS
         * 
         * @return builder
         * 
         */
        public Builder flow_log_cloudwatch_log_group_class(String flow_log_cloudwatch_log_group_class) {
            return flow_log_cloudwatch_log_group_class(Output.of(flow_log_cloudwatch_log_group_class));
        }

        /**
         * @param flow_log_cloudwatch_log_group_kms_key_id The ARN of the KMS Key to use when encrypting log data for VPC flow logs
         * 
         * @return builder
         * 
         */
        public Builder flow_log_cloudwatch_log_group_kms_key_id(@Nullable Output<String> flow_log_cloudwatch_log_group_kms_key_id) {
            $.flow_log_cloudwatch_log_group_kms_key_id = flow_log_cloudwatch_log_group_kms_key_id;
            return this;
        }

        /**
         * @param flow_log_cloudwatch_log_group_kms_key_id The ARN of the KMS Key to use when encrypting log data for VPC flow logs
         * 
         * @return builder
         * 
         */
        public Builder flow_log_cloudwatch_log_group_kms_key_id(String flow_log_cloudwatch_log_group_kms_key_id) {
            return flow_log_cloudwatch_log_group_kms_key_id(Output.of(flow_log_cloudwatch_log_group_kms_key_id));
        }

        /**
         * @param flow_log_cloudwatch_log_group_name_prefix Specifies the name prefix of CloudWatch Log Group for VPC flow logs
         * 
         * @return builder
         * 
         */
        public Builder flow_log_cloudwatch_log_group_name_prefix(@Nullable Output<String> flow_log_cloudwatch_log_group_name_prefix) {
            $.flow_log_cloudwatch_log_group_name_prefix = flow_log_cloudwatch_log_group_name_prefix;
            return this;
        }

        /**
         * @param flow_log_cloudwatch_log_group_name_prefix Specifies the name prefix of CloudWatch Log Group for VPC flow logs
         * 
         * @return builder
         * 
         */
        public Builder flow_log_cloudwatch_log_group_name_prefix(String flow_log_cloudwatch_log_group_name_prefix) {
            return flow_log_cloudwatch_log_group_name_prefix(Output.of(flow_log_cloudwatch_log_group_name_prefix));
        }

        /**
         * @param flow_log_cloudwatch_log_group_name_suffix Specifies the name suffix of CloudWatch Log Group for VPC flow logs
         * 
         * @return builder
         * 
         */
        public Builder flow_log_cloudwatch_log_group_name_suffix(@Nullable Output<String> flow_log_cloudwatch_log_group_name_suffix) {
            $.flow_log_cloudwatch_log_group_name_suffix = flow_log_cloudwatch_log_group_name_suffix;
            return this;
        }

        /**
         * @param flow_log_cloudwatch_log_group_name_suffix Specifies the name suffix of CloudWatch Log Group for VPC flow logs
         * 
         * @return builder
         * 
         */
        public Builder flow_log_cloudwatch_log_group_name_suffix(String flow_log_cloudwatch_log_group_name_suffix) {
            return flow_log_cloudwatch_log_group_name_suffix(Output.of(flow_log_cloudwatch_log_group_name_suffix));
        }

        /**
         * @param flow_log_cloudwatch_log_group_retention_in_days Specifies the number of days you want to retain log events in the specified log group for VPC flow logs
         * 
         * @return builder
         * 
         */
        public Builder flow_log_cloudwatch_log_group_retention_in_days(@Nullable Output<Double> flow_log_cloudwatch_log_group_retention_in_days) {
            $.flow_log_cloudwatch_log_group_retention_in_days = flow_log_cloudwatch_log_group_retention_in_days;
            return this;
        }

        /**
         * @param flow_log_cloudwatch_log_group_retention_in_days Specifies the number of days you want to retain log events in the specified log group for VPC flow logs
         * 
         * @return builder
         * 
         */
        public Builder flow_log_cloudwatch_log_group_retention_in_days(Double flow_log_cloudwatch_log_group_retention_in_days) {
            return flow_log_cloudwatch_log_group_retention_in_days(Output.of(flow_log_cloudwatch_log_group_retention_in_days));
        }

        /**
         * @param flow_log_cloudwatch_log_group_skip_destroy  Set to true if you do not wish the log group (and any logs it may contain) to be deleted at destroy time, and instead just remove the log group from the Terraform state
         * 
         * @return builder
         * 
         */
        public Builder flow_log_cloudwatch_log_group_skip_destroy(@Nullable Output<Boolean> flow_log_cloudwatch_log_group_skip_destroy) {
            $.flow_log_cloudwatch_log_group_skip_destroy = flow_log_cloudwatch_log_group_skip_destroy;
            return this;
        }

        /**
         * @param flow_log_cloudwatch_log_group_skip_destroy  Set to true if you do not wish the log group (and any logs it may contain) to be deleted at destroy time, and instead just remove the log group from the Terraform state
         * 
         * @return builder
         * 
         */
        public Builder flow_log_cloudwatch_log_group_skip_destroy(Boolean flow_log_cloudwatch_log_group_skip_destroy) {
            return flow_log_cloudwatch_log_group_skip_destroy(Output.of(flow_log_cloudwatch_log_group_skip_destroy));
        }

        /**
         * @param flow_log_deliver_cross_account_role (Optional) ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
         * 
         * @return builder
         * 
         */
        public Builder flow_log_deliver_cross_account_role(@Nullable Output<String> flow_log_deliver_cross_account_role) {
            $.flow_log_deliver_cross_account_role = flow_log_deliver_cross_account_role;
            return this;
        }

        /**
         * @param flow_log_deliver_cross_account_role (Optional) ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
         * 
         * @return builder
         * 
         */
        public Builder flow_log_deliver_cross_account_role(String flow_log_deliver_cross_account_role) {
            return flow_log_deliver_cross_account_role(Output.of(flow_log_deliver_cross_account_role));
        }

        /**
         * @param flow_log_destination_arn The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket&#39;s policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided
         * 
         * @return builder
         * 
         */
        public Builder flow_log_destination_arn(@Nullable Output<String> flow_log_destination_arn) {
            $.flow_log_destination_arn = flow_log_destination_arn;
            return this;
        }

        /**
         * @param flow_log_destination_arn The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket&#39;s policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided
         * 
         * @return builder
         * 
         */
        public Builder flow_log_destination_arn(String flow_log_destination_arn) {
            return flow_log_destination_arn(Output.of(flow_log_destination_arn));
        }

        /**
         * @param flow_log_destination_type Type of flow log destination. Can be s3, kinesis-data-firehose or cloud-watch-logs
         * 
         * @return builder
         * 
         */
        public Builder flow_log_destination_type(@Nullable Output<String> flow_log_destination_type) {
            $.flow_log_destination_type = flow_log_destination_type;
            return this;
        }

        /**
         * @param flow_log_destination_type Type of flow log destination. Can be s3, kinesis-data-firehose or cloud-watch-logs
         * 
         * @return builder
         * 
         */
        public Builder flow_log_destination_type(String flow_log_destination_type) {
            return flow_log_destination_type(Output.of(flow_log_destination_type));
        }

        /**
         * @param flow_log_file_format (Optional) The format for the flow log. Valid values: `plain-text`, `parquet`
         * 
         * @return builder
         * 
         */
        public Builder flow_log_file_format(@Nullable Output<String> flow_log_file_format) {
            $.flow_log_file_format = flow_log_file_format;
            return this;
        }

        /**
         * @param flow_log_file_format (Optional) The format for the flow log. Valid values: `plain-text`, `parquet`
         * 
         * @return builder
         * 
         */
        public Builder flow_log_file_format(String flow_log_file_format) {
            return flow_log_file_format(Output.of(flow_log_file_format));
        }

        /**
         * @param flow_log_hive_compatible_partitions (Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3
         * 
         * @return builder
         * 
         */
        public Builder flow_log_hive_compatible_partitions(@Nullable Output<Boolean> flow_log_hive_compatible_partitions) {
            $.flow_log_hive_compatible_partitions = flow_log_hive_compatible_partitions;
            return this;
        }

        /**
         * @param flow_log_hive_compatible_partitions (Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3
         * 
         * @return builder
         * 
         */
        public Builder flow_log_hive_compatible_partitions(Boolean flow_log_hive_compatible_partitions) {
            return flow_log_hive_compatible_partitions(Output.of(flow_log_hive_compatible_partitions));
        }

        /**
         * @param flow_log_log_format The fields to include in the flow log record, in the order in which they should appear
         * 
         * @return builder
         * 
         */
        public Builder flow_log_log_format(@Nullable Output<String> flow_log_log_format) {
            $.flow_log_log_format = flow_log_log_format;
            return this;
        }

        /**
         * @param flow_log_log_format The fields to include in the flow log record, in the order in which they should appear
         * 
         * @return builder
         * 
         */
        public Builder flow_log_log_format(String flow_log_log_format) {
            return flow_log_log_format(Output.of(flow_log_log_format));
        }

        /**
         * @param flow_log_max_aggregation_interval The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds
         * 
         * @return builder
         * 
         */
        public Builder flow_log_max_aggregation_interval(@Nullable Output<Double> flow_log_max_aggregation_interval) {
            $.flow_log_max_aggregation_interval = flow_log_max_aggregation_interval;
            return this;
        }

        /**
         * @param flow_log_max_aggregation_interval The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds
         * 
         * @return builder
         * 
         */
        public Builder flow_log_max_aggregation_interval(Double flow_log_max_aggregation_interval) {
            return flow_log_max_aggregation_interval(Output.of(flow_log_max_aggregation_interval));
        }

        /**
         * @param flow_log_per_hour_partition (Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries
         * 
         * @return builder
         * 
         */
        public Builder flow_log_per_hour_partition(@Nullable Output<Boolean> flow_log_per_hour_partition) {
            $.flow_log_per_hour_partition = flow_log_per_hour_partition;
            return this;
        }

        /**
         * @param flow_log_per_hour_partition (Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries
         * 
         * @return builder
         * 
         */
        public Builder flow_log_per_hour_partition(Boolean flow_log_per_hour_partition) {
            return flow_log_per_hour_partition(Output.of(flow_log_per_hour_partition));
        }

        /**
         * @param flow_log_traffic_type The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL
         * 
         * @return builder
         * 
         */
        public Builder flow_log_traffic_type(@Nullable Output<String> flow_log_traffic_type) {
            $.flow_log_traffic_type = flow_log_traffic_type;
            return this;
        }

        /**
         * @param flow_log_traffic_type The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL
         * 
         * @return builder
         * 
         */
        public Builder flow_log_traffic_type(String flow_log_traffic_type) {
            return flow_log_traffic_type(Output.of(flow_log_traffic_type));
        }

        /**
         * @param igw_tags Additional tags for the internet gateway
         * 
         * @return builder
         * 
         */
        public Builder igw_tags(@Nullable Output<Map<String,String>> igw_tags) {
            $.igw_tags = igw_tags;
            return this;
        }

        /**
         * @param igw_tags Additional tags for the internet gateway
         * 
         * @return builder
         * 
         */
        public Builder igw_tags(Map<String,String> igw_tags) {
            return igw_tags(Output.of(igw_tags));
        }

        /**
         * @param instance_tenancy A tenancy option for instances launched into the VPC
         * 
         * @return builder
         * 
         */
        public Builder instance_tenancy(@Nullable Output<String> instance_tenancy) {
            $.instance_tenancy = instance_tenancy;
            return this;
        }

        /**
         * @param instance_tenancy A tenancy option for instances launched into the VPC
         * 
         * @return builder
         * 
         */
        public Builder instance_tenancy(String instance_tenancy) {
            return instance_tenancy(Output.of(instance_tenancy));
        }

        /**
         * @param intra_acl_tags Additional tags for the intra subnets network ACL
         * 
         * @return builder
         * 
         */
        public Builder intra_acl_tags(@Nullable Output<Map<String,String>> intra_acl_tags) {
            $.intra_acl_tags = intra_acl_tags;
            return this;
        }

        /**
         * @param intra_acl_tags Additional tags for the intra subnets network ACL
         * 
         * @return builder
         * 
         */
        public Builder intra_acl_tags(Map<String,String> intra_acl_tags) {
            return intra_acl_tags(Output.of(intra_acl_tags));
        }

        /**
         * @param intra_dedicated_network_acl Whether to use dedicated network ACL (not default) and custom rules for intra subnets
         * 
         * @return builder
         * 
         */
        public Builder intra_dedicated_network_acl(@Nullable Output<Boolean> intra_dedicated_network_acl) {
            $.intra_dedicated_network_acl = intra_dedicated_network_acl;
            return this;
        }

        /**
         * @param intra_dedicated_network_acl Whether to use dedicated network ACL (not default) and custom rules for intra subnets
         * 
         * @return builder
         * 
         */
        public Builder intra_dedicated_network_acl(Boolean intra_dedicated_network_acl) {
            return intra_dedicated_network_acl(Output.of(intra_dedicated_network_acl));
        }

        /**
         * @param intra_inbound_acl_rules Intra subnets inbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder intra_inbound_acl_rules(@Nullable Output<List<Map<String,String>>> intra_inbound_acl_rules) {
            $.intra_inbound_acl_rules = intra_inbound_acl_rules;
            return this;
        }

        /**
         * @param intra_inbound_acl_rules Intra subnets inbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder intra_inbound_acl_rules(List<Map<String,String>> intra_inbound_acl_rules) {
            return intra_inbound_acl_rules(Output.of(intra_inbound_acl_rules));
        }

        /**
         * @param intra_inbound_acl_rules Intra subnets inbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder intra_inbound_acl_rules(Map<String,String>... intra_inbound_acl_rules) {
            return intra_inbound_acl_rules(List.of(intra_inbound_acl_rules));
        }

        /**
         * @param intra_outbound_acl_rules Intra subnets outbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder intra_outbound_acl_rules(@Nullable Output<List<Map<String,String>>> intra_outbound_acl_rules) {
            $.intra_outbound_acl_rules = intra_outbound_acl_rules;
            return this;
        }

        /**
         * @param intra_outbound_acl_rules Intra subnets outbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder intra_outbound_acl_rules(List<Map<String,String>> intra_outbound_acl_rules) {
            return intra_outbound_acl_rules(Output.of(intra_outbound_acl_rules));
        }

        /**
         * @param intra_outbound_acl_rules Intra subnets outbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder intra_outbound_acl_rules(Map<String,String>... intra_outbound_acl_rules) {
            return intra_outbound_acl_rules(List.of(intra_outbound_acl_rules));
        }

        /**
         * @param intra_route_table_tags Additional tags for the intra route tables
         * 
         * @return builder
         * 
         */
        public Builder intra_route_table_tags(@Nullable Output<Map<String,String>> intra_route_table_tags) {
            $.intra_route_table_tags = intra_route_table_tags;
            return this;
        }

        /**
         * @param intra_route_table_tags Additional tags for the intra route tables
         * 
         * @return builder
         * 
         */
        public Builder intra_route_table_tags(Map<String,String> intra_route_table_tags) {
            return intra_route_table_tags(Output.of(intra_route_table_tags));
        }

        /**
         * @param intra_subnet_assign_ipv6_address_on_creation Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_assign_ipv6_address_on_creation(@Nullable Output<Boolean> intra_subnet_assign_ipv6_address_on_creation) {
            $.intra_subnet_assign_ipv6_address_on_creation = intra_subnet_assign_ipv6_address_on_creation;
            return this;
        }

        /**
         * @param intra_subnet_assign_ipv6_address_on_creation Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_assign_ipv6_address_on_creation(Boolean intra_subnet_assign_ipv6_address_on_creation) {
            return intra_subnet_assign_ipv6_address_on_creation(Output.of(intra_subnet_assign_ipv6_address_on_creation));
        }

        /**
         * @param intra_subnet_enable_dns64 Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_enable_dns64(@Nullable Output<Boolean> intra_subnet_enable_dns64) {
            $.intra_subnet_enable_dns64 = intra_subnet_enable_dns64;
            return this;
        }

        /**
         * @param intra_subnet_enable_dns64 Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_enable_dns64(Boolean intra_subnet_enable_dns64) {
            return intra_subnet_enable_dns64(Output.of(intra_subnet_enable_dns64));
        }

        /**
         * @param intra_subnet_enable_resource_name_dns_a_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_enable_resource_name_dns_a_record_on_launch(@Nullable Output<Boolean> intra_subnet_enable_resource_name_dns_a_record_on_launch) {
            $.intra_subnet_enable_resource_name_dns_a_record_on_launch = intra_subnet_enable_resource_name_dns_a_record_on_launch;
            return this;
        }

        /**
         * @param intra_subnet_enable_resource_name_dns_a_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_enable_resource_name_dns_a_record_on_launch(Boolean intra_subnet_enable_resource_name_dns_a_record_on_launch) {
            return intra_subnet_enable_resource_name_dns_a_record_on_launch(Output.of(intra_subnet_enable_resource_name_dns_a_record_on_launch));
        }

        /**
         * @param intra_subnet_enable_resource_name_dns_aaaa_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_enable_resource_name_dns_aaaa_record_on_launch(@Nullable Output<Boolean> intra_subnet_enable_resource_name_dns_aaaa_record_on_launch) {
            $.intra_subnet_enable_resource_name_dns_aaaa_record_on_launch = intra_subnet_enable_resource_name_dns_aaaa_record_on_launch;
            return this;
        }

        /**
         * @param intra_subnet_enable_resource_name_dns_aaaa_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_enable_resource_name_dns_aaaa_record_on_launch(Boolean intra_subnet_enable_resource_name_dns_aaaa_record_on_launch) {
            return intra_subnet_enable_resource_name_dns_aaaa_record_on_launch(Output.of(intra_subnet_enable_resource_name_dns_aaaa_record_on_launch));
        }

        /**
         * @param intra_subnet_ipv6_native Indicates whether to create an IPv6-only subnet. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_ipv6_native(@Nullable Output<Boolean> intra_subnet_ipv6_native) {
            $.intra_subnet_ipv6_native = intra_subnet_ipv6_native;
            return this;
        }

        /**
         * @param intra_subnet_ipv6_native Indicates whether to create an IPv6-only subnet. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_ipv6_native(Boolean intra_subnet_ipv6_native) {
            return intra_subnet_ipv6_native(Output.of(intra_subnet_ipv6_native));
        }

        /**
         * @param intra_subnet_ipv6_prefixes Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_ipv6_prefixes(@Nullable Output<List<String>> intra_subnet_ipv6_prefixes) {
            $.intra_subnet_ipv6_prefixes = intra_subnet_ipv6_prefixes;
            return this;
        }

        /**
         * @param intra_subnet_ipv6_prefixes Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_ipv6_prefixes(List<String> intra_subnet_ipv6_prefixes) {
            return intra_subnet_ipv6_prefixes(Output.of(intra_subnet_ipv6_prefixes));
        }

        /**
         * @param intra_subnet_ipv6_prefixes Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_ipv6_prefixes(String... intra_subnet_ipv6_prefixes) {
            return intra_subnet_ipv6_prefixes(List.of(intra_subnet_ipv6_prefixes));
        }

        /**
         * @param intra_subnet_names Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_names(@Nullable Output<List<String>> intra_subnet_names) {
            $.intra_subnet_names = intra_subnet_names;
            return this;
        }

        /**
         * @param intra_subnet_names Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_names(List<String> intra_subnet_names) {
            return intra_subnet_names(Output.of(intra_subnet_names));
        }

        /**
         * @param intra_subnet_names Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_names(String... intra_subnet_names) {
            return intra_subnet_names(List.of(intra_subnet_names));
        }

        /**
         * @param intra_subnet_private_dns_hostname_type_on_launch The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_private_dns_hostname_type_on_launch(@Nullable Output<String> intra_subnet_private_dns_hostname_type_on_launch) {
            $.intra_subnet_private_dns_hostname_type_on_launch = intra_subnet_private_dns_hostname_type_on_launch;
            return this;
        }

        /**
         * @param intra_subnet_private_dns_hostname_type_on_launch The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_private_dns_hostname_type_on_launch(String intra_subnet_private_dns_hostname_type_on_launch) {
            return intra_subnet_private_dns_hostname_type_on_launch(Output.of(intra_subnet_private_dns_hostname_type_on_launch));
        }

        /**
         * @param intra_subnet_suffix Suffix to append to intra subnets name
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_suffix(@Nullable Output<String> intra_subnet_suffix) {
            $.intra_subnet_suffix = intra_subnet_suffix;
            return this;
        }

        /**
         * @param intra_subnet_suffix Suffix to append to intra subnets name
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_suffix(String intra_subnet_suffix) {
            return intra_subnet_suffix(Output.of(intra_subnet_suffix));
        }

        /**
         * @param intra_subnet_tags Additional tags for the intra subnets
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_tags(@Nullable Output<Map<String,String>> intra_subnet_tags) {
            $.intra_subnet_tags = intra_subnet_tags;
            return this;
        }

        /**
         * @param intra_subnet_tags Additional tags for the intra subnets
         * 
         * @return builder
         * 
         */
        public Builder intra_subnet_tags(Map<String,String> intra_subnet_tags) {
            return intra_subnet_tags(Output.of(intra_subnet_tags));
        }

        /**
         * @param intra_subnets A list of intra subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder intra_subnets(@Nullable Output<List<String>> intra_subnets) {
            $.intra_subnets = intra_subnets;
            return this;
        }

        /**
         * @param intra_subnets A list of intra subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder intra_subnets(List<String> intra_subnets) {
            return intra_subnets(Output.of(intra_subnets));
        }

        /**
         * @param intra_subnets A list of intra subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder intra_subnets(String... intra_subnets) {
            return intra_subnets(List.of(intra_subnets));
        }

        /**
         * @param ipv4_ipam_pool_id (Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC&#39;s CIDR
         * 
         * @return builder
         * 
         */
        public Builder ipv4_ipam_pool_id(@Nullable Output<String> ipv4_ipam_pool_id) {
            $.ipv4_ipam_pool_id = ipv4_ipam_pool_id;
            return this;
        }

        /**
         * @param ipv4_ipam_pool_id (Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC&#39;s CIDR
         * 
         * @return builder
         * 
         */
        public Builder ipv4_ipam_pool_id(String ipv4_ipam_pool_id) {
            return ipv4_ipam_pool_id(Output.of(ipv4_ipam_pool_id));
        }

        /**
         * @param ipv4_netmask_length (Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id
         * 
         * @return builder
         * 
         */
        public Builder ipv4_netmask_length(@Nullable Output<Double> ipv4_netmask_length) {
            $.ipv4_netmask_length = ipv4_netmask_length;
            return this;
        }

        /**
         * @param ipv4_netmask_length (Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id
         * 
         * @return builder
         * 
         */
        public Builder ipv4_netmask_length(Double ipv4_netmask_length) {
            return ipv4_netmask_length(Output.of(ipv4_netmask_length));
        }

        /**
         * @param ipv6_cidr (Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`
         * 
         * @return builder
         * 
         */
        public Builder ipv6_cidr(@Nullable Output<String> ipv6_cidr) {
            $.ipv6_cidr = ipv6_cidr;
            return this;
        }

        /**
         * @param ipv6_cidr (Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`
         * 
         * @return builder
         * 
         */
        public Builder ipv6_cidr(String ipv6_cidr) {
            return ipv6_cidr(Output.of(ipv6_cidr));
        }

        /**
         * @param ipv6_cidr_block_network_border_group By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones
         * 
         * @return builder
         * 
         */
        public Builder ipv6_cidr_block_network_border_group(@Nullable Output<String> ipv6_cidr_block_network_border_group) {
            $.ipv6_cidr_block_network_border_group = ipv6_cidr_block_network_border_group;
            return this;
        }

        /**
         * @param ipv6_cidr_block_network_border_group By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones
         * 
         * @return builder
         * 
         */
        public Builder ipv6_cidr_block_network_border_group(String ipv6_cidr_block_network_border_group) {
            return ipv6_cidr_block_network_border_group(Output.of(ipv6_cidr_block_network_border_group));
        }

        /**
         * @param ipv6_ipam_pool_id (Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`
         * 
         * @return builder
         * 
         */
        public Builder ipv6_ipam_pool_id(@Nullable Output<String> ipv6_ipam_pool_id) {
            $.ipv6_ipam_pool_id = ipv6_ipam_pool_id;
            return this;
        }

        /**
         * @param ipv6_ipam_pool_id (Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`
         * 
         * @return builder
         * 
         */
        public Builder ipv6_ipam_pool_id(String ipv6_ipam_pool_id) {
            return ipv6_ipam_pool_id(Output.of(ipv6_ipam_pool_id));
        }

        /**
         * @param ipv6_netmask_length (Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`
         * 
         * @return builder
         * 
         */
        public Builder ipv6_netmask_length(@Nullable Output<Double> ipv6_netmask_length) {
            $.ipv6_netmask_length = ipv6_netmask_length;
            return this;
        }

        /**
         * @param ipv6_netmask_length (Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`
         * 
         * @return builder
         * 
         */
        public Builder ipv6_netmask_length(Double ipv6_netmask_length) {
            return ipv6_netmask_length(Output.of(ipv6_netmask_length));
        }

        /**
         * @param manage_default_network_acl Should be true to adopt and manage Default Network ACL
         * 
         * @return builder
         * 
         */
        public Builder manage_default_network_acl(@Nullable Output<Boolean> manage_default_network_acl) {
            $.manage_default_network_acl = manage_default_network_acl;
            return this;
        }

        /**
         * @param manage_default_network_acl Should be true to adopt and manage Default Network ACL
         * 
         * @return builder
         * 
         */
        public Builder manage_default_network_acl(Boolean manage_default_network_acl) {
            return manage_default_network_acl(Output.of(manage_default_network_acl));
        }

        /**
         * @param manage_default_route_table Should be true to manage default route table
         * 
         * @return builder
         * 
         */
        public Builder manage_default_route_table(@Nullable Output<Boolean> manage_default_route_table) {
            $.manage_default_route_table = manage_default_route_table;
            return this;
        }

        /**
         * @param manage_default_route_table Should be true to manage default route table
         * 
         * @return builder
         * 
         */
        public Builder manage_default_route_table(Boolean manage_default_route_table) {
            return manage_default_route_table(Output.of(manage_default_route_table));
        }

        /**
         * @param manage_default_security_group Should be true to adopt and manage default security group
         * 
         * @return builder
         * 
         */
        public Builder manage_default_security_group(@Nullable Output<Boolean> manage_default_security_group) {
            $.manage_default_security_group = manage_default_security_group;
            return this;
        }

        /**
         * @param manage_default_security_group Should be true to adopt and manage default security group
         * 
         * @return builder
         * 
         */
        public Builder manage_default_security_group(Boolean manage_default_security_group) {
            return manage_default_security_group(Output.of(manage_default_security_group));
        }

        /**
         * @param manage_default_vpc Should be true to adopt and manage Default VPC
         * 
         * @return builder
         * 
         */
        public Builder manage_default_vpc(@Nullable Output<Boolean> manage_default_vpc) {
            $.manage_default_vpc = manage_default_vpc;
            return this;
        }

        /**
         * @param manage_default_vpc Should be true to adopt and manage Default VPC
         * 
         * @return builder
         * 
         */
        public Builder manage_default_vpc(Boolean manage_default_vpc) {
            return manage_default_vpc(Output.of(manage_default_vpc));
        }

        /**
         * @param map_customer_owned_ip_on_launch Specify true to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`
         * 
         * @return builder
         * 
         */
        public Builder map_customer_owned_ip_on_launch(@Nullable Output<Boolean> map_customer_owned_ip_on_launch) {
            $.map_customer_owned_ip_on_launch = map_customer_owned_ip_on_launch;
            return this;
        }

        /**
         * @param map_customer_owned_ip_on_launch Specify true to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`
         * 
         * @return builder
         * 
         */
        public Builder map_customer_owned_ip_on_launch(Boolean map_customer_owned_ip_on_launch) {
            return map_customer_owned_ip_on_launch(Output.of(map_customer_owned_ip_on_launch));
        }

        /**
         * @param map_public_ip_on_launch Specify true to indicate that instances launched into the subnet should be assigned a public IP address. Default is `false`
         * 
         * @return builder
         * 
         */
        public Builder map_public_ip_on_launch(@Nullable Output<Boolean> map_public_ip_on_launch) {
            $.map_public_ip_on_launch = map_public_ip_on_launch;
            return this;
        }

        /**
         * @param map_public_ip_on_launch Specify true to indicate that instances launched into the subnet should be assigned a public IP address. Default is `false`
         * 
         * @return builder
         * 
         */
        public Builder map_public_ip_on_launch(Boolean map_public_ip_on_launch) {
            return map_public_ip_on_launch(Output.of(map_public_ip_on_launch));
        }

        /**
         * @param name Name to be used on all the resources as identifier
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name to be used on all the resources as identifier
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nat_eip_tags Additional tags for the NAT EIP
         * 
         * @return builder
         * 
         */
        public Builder nat_eip_tags(@Nullable Output<Map<String,String>> nat_eip_tags) {
            $.nat_eip_tags = nat_eip_tags;
            return this;
        }

        /**
         * @param nat_eip_tags Additional tags for the NAT EIP
         * 
         * @return builder
         * 
         */
        public Builder nat_eip_tags(Map<String,String> nat_eip_tags) {
            return nat_eip_tags(Output.of(nat_eip_tags));
        }

        /**
         * @param nat_gateway_destination_cidr_block Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route
         * 
         * @return builder
         * 
         */
        public Builder nat_gateway_destination_cidr_block(@Nullable Output<String> nat_gateway_destination_cidr_block) {
            $.nat_gateway_destination_cidr_block = nat_gateway_destination_cidr_block;
            return this;
        }

        /**
         * @param nat_gateway_destination_cidr_block Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route
         * 
         * @return builder
         * 
         */
        public Builder nat_gateway_destination_cidr_block(String nat_gateway_destination_cidr_block) {
            return nat_gateway_destination_cidr_block(Output.of(nat_gateway_destination_cidr_block));
        }

        /**
         * @param nat_gateway_tags Additional tags for the NAT gateways
         * 
         * @return builder
         * 
         */
        public Builder nat_gateway_tags(@Nullable Output<Map<String,String>> nat_gateway_tags) {
            $.nat_gateway_tags = nat_gateway_tags;
            return this;
        }

        /**
         * @param nat_gateway_tags Additional tags for the NAT gateways
         * 
         * @return builder
         * 
         */
        public Builder nat_gateway_tags(Map<String,String> nat_gateway_tags) {
            return nat_gateway_tags(Output.of(nat_gateway_tags));
        }

        /**
         * @param one_nat_gateway_per_az Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`
         * 
         * @return builder
         * 
         */
        public Builder one_nat_gateway_per_az(@Nullable Output<Boolean> one_nat_gateway_per_az) {
            $.one_nat_gateway_per_az = one_nat_gateway_per_az;
            return this;
        }

        /**
         * @param one_nat_gateway_per_az Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`
         * 
         * @return builder
         * 
         */
        public Builder one_nat_gateway_per_az(Boolean one_nat_gateway_per_az) {
            return one_nat_gateway_per_az(Output.of(one_nat_gateway_per_az));
        }

        /**
         * @param outpost_acl_tags Additional tags for the outpost subnets network ACL
         * 
         * @return builder
         * 
         */
        public Builder outpost_acl_tags(@Nullable Output<Map<String,String>> outpost_acl_tags) {
            $.outpost_acl_tags = outpost_acl_tags;
            return this;
        }

        /**
         * @param outpost_acl_tags Additional tags for the outpost subnets network ACL
         * 
         * @return builder
         * 
         */
        public Builder outpost_acl_tags(Map<String,String> outpost_acl_tags) {
            return outpost_acl_tags(Output.of(outpost_acl_tags));
        }

        /**
         * @param outpost_arn ARN of Outpost you want to create a subnet in
         * 
         * @return builder
         * 
         */
        public Builder outpost_arn(@Nullable Output<String> outpost_arn) {
            $.outpost_arn = outpost_arn;
            return this;
        }

        /**
         * @param outpost_arn ARN of Outpost you want to create a subnet in
         * 
         * @return builder
         * 
         */
        public Builder outpost_arn(String outpost_arn) {
            return outpost_arn(Output.of(outpost_arn));
        }

        /**
         * @param outpost_az AZ where Outpost is anchored
         * 
         * @return builder
         * 
         */
        public Builder outpost_az(@Nullable Output<String> outpost_az) {
            $.outpost_az = outpost_az;
            return this;
        }

        /**
         * @param outpost_az AZ where Outpost is anchored
         * 
         * @return builder
         * 
         */
        public Builder outpost_az(String outpost_az) {
            return outpost_az(Output.of(outpost_az));
        }

        /**
         * @param outpost_dedicated_network_acl Whether to use dedicated network ACL (not default) and custom rules for outpost subnets
         * 
         * @return builder
         * 
         */
        public Builder outpost_dedicated_network_acl(@Nullable Output<Boolean> outpost_dedicated_network_acl) {
            $.outpost_dedicated_network_acl = outpost_dedicated_network_acl;
            return this;
        }

        /**
         * @param outpost_dedicated_network_acl Whether to use dedicated network ACL (not default) and custom rules for outpost subnets
         * 
         * @return builder
         * 
         */
        public Builder outpost_dedicated_network_acl(Boolean outpost_dedicated_network_acl) {
            return outpost_dedicated_network_acl(Output.of(outpost_dedicated_network_acl));
        }

        /**
         * @param outpost_inbound_acl_rules Outpost subnets inbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder outpost_inbound_acl_rules(@Nullable Output<List<Map<String,String>>> outpost_inbound_acl_rules) {
            $.outpost_inbound_acl_rules = outpost_inbound_acl_rules;
            return this;
        }

        /**
         * @param outpost_inbound_acl_rules Outpost subnets inbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder outpost_inbound_acl_rules(List<Map<String,String>> outpost_inbound_acl_rules) {
            return outpost_inbound_acl_rules(Output.of(outpost_inbound_acl_rules));
        }

        /**
         * @param outpost_inbound_acl_rules Outpost subnets inbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder outpost_inbound_acl_rules(Map<String,String>... outpost_inbound_acl_rules) {
            return outpost_inbound_acl_rules(List.of(outpost_inbound_acl_rules));
        }

        /**
         * @param outpost_outbound_acl_rules Outpost subnets outbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder outpost_outbound_acl_rules(@Nullable Output<List<Map<String,String>>> outpost_outbound_acl_rules) {
            $.outpost_outbound_acl_rules = outpost_outbound_acl_rules;
            return this;
        }

        /**
         * @param outpost_outbound_acl_rules Outpost subnets outbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder outpost_outbound_acl_rules(List<Map<String,String>> outpost_outbound_acl_rules) {
            return outpost_outbound_acl_rules(Output.of(outpost_outbound_acl_rules));
        }

        /**
         * @param outpost_outbound_acl_rules Outpost subnets outbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder outpost_outbound_acl_rules(Map<String,String>... outpost_outbound_acl_rules) {
            return outpost_outbound_acl_rules(List.of(outpost_outbound_acl_rules));
        }

        /**
         * @param outpost_subnet_assign_ipv6_address_on_creation Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_assign_ipv6_address_on_creation(@Nullable Output<Boolean> outpost_subnet_assign_ipv6_address_on_creation) {
            $.outpost_subnet_assign_ipv6_address_on_creation = outpost_subnet_assign_ipv6_address_on_creation;
            return this;
        }

        /**
         * @param outpost_subnet_assign_ipv6_address_on_creation Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_assign_ipv6_address_on_creation(Boolean outpost_subnet_assign_ipv6_address_on_creation) {
            return outpost_subnet_assign_ipv6_address_on_creation(Output.of(outpost_subnet_assign_ipv6_address_on_creation));
        }

        /**
         * @param outpost_subnet_enable_dns64 Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_enable_dns64(@Nullable Output<Boolean> outpost_subnet_enable_dns64) {
            $.outpost_subnet_enable_dns64 = outpost_subnet_enable_dns64;
            return this;
        }

        /**
         * @param outpost_subnet_enable_dns64 Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_enable_dns64(Boolean outpost_subnet_enable_dns64) {
            return outpost_subnet_enable_dns64(Output.of(outpost_subnet_enable_dns64));
        }

        /**
         * @param outpost_subnet_enable_resource_name_dns_a_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_enable_resource_name_dns_a_record_on_launch(@Nullable Output<Boolean> outpost_subnet_enable_resource_name_dns_a_record_on_launch) {
            $.outpost_subnet_enable_resource_name_dns_a_record_on_launch = outpost_subnet_enable_resource_name_dns_a_record_on_launch;
            return this;
        }

        /**
         * @param outpost_subnet_enable_resource_name_dns_a_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_enable_resource_name_dns_a_record_on_launch(Boolean outpost_subnet_enable_resource_name_dns_a_record_on_launch) {
            return outpost_subnet_enable_resource_name_dns_a_record_on_launch(Output.of(outpost_subnet_enable_resource_name_dns_a_record_on_launch));
        }

        /**
         * @param outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch(@Nullable Output<Boolean> outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch) {
            $.outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch = outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch;
            return this;
        }

        /**
         * @param outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch(Boolean outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch) {
            return outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch(Output.of(outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch));
        }

        /**
         * @param outpost_subnet_ipv6_native Indicates whether to create an IPv6-only subnet. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_ipv6_native(@Nullable Output<Boolean> outpost_subnet_ipv6_native) {
            $.outpost_subnet_ipv6_native = outpost_subnet_ipv6_native;
            return this;
        }

        /**
         * @param outpost_subnet_ipv6_native Indicates whether to create an IPv6-only subnet. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_ipv6_native(Boolean outpost_subnet_ipv6_native) {
            return outpost_subnet_ipv6_native(Output.of(outpost_subnet_ipv6_native));
        }

        /**
         * @param outpost_subnet_ipv6_prefixes Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_ipv6_prefixes(@Nullable Output<List<String>> outpost_subnet_ipv6_prefixes) {
            $.outpost_subnet_ipv6_prefixes = outpost_subnet_ipv6_prefixes;
            return this;
        }

        /**
         * @param outpost_subnet_ipv6_prefixes Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_ipv6_prefixes(List<String> outpost_subnet_ipv6_prefixes) {
            return outpost_subnet_ipv6_prefixes(Output.of(outpost_subnet_ipv6_prefixes));
        }

        /**
         * @param outpost_subnet_ipv6_prefixes Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_ipv6_prefixes(String... outpost_subnet_ipv6_prefixes) {
            return outpost_subnet_ipv6_prefixes(List.of(outpost_subnet_ipv6_prefixes));
        }

        /**
         * @param outpost_subnet_names Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_names(@Nullable Output<List<String>> outpost_subnet_names) {
            $.outpost_subnet_names = outpost_subnet_names;
            return this;
        }

        /**
         * @param outpost_subnet_names Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_names(List<String> outpost_subnet_names) {
            return outpost_subnet_names(Output.of(outpost_subnet_names));
        }

        /**
         * @param outpost_subnet_names Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_names(String... outpost_subnet_names) {
            return outpost_subnet_names(List.of(outpost_subnet_names));
        }

        /**
         * @param outpost_subnet_private_dns_hostname_type_on_launch The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_private_dns_hostname_type_on_launch(@Nullable Output<String> outpost_subnet_private_dns_hostname_type_on_launch) {
            $.outpost_subnet_private_dns_hostname_type_on_launch = outpost_subnet_private_dns_hostname_type_on_launch;
            return this;
        }

        /**
         * @param outpost_subnet_private_dns_hostname_type_on_launch The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_private_dns_hostname_type_on_launch(String outpost_subnet_private_dns_hostname_type_on_launch) {
            return outpost_subnet_private_dns_hostname_type_on_launch(Output.of(outpost_subnet_private_dns_hostname_type_on_launch));
        }

        /**
         * @param outpost_subnet_suffix Suffix to append to outpost subnets name
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_suffix(@Nullable Output<String> outpost_subnet_suffix) {
            $.outpost_subnet_suffix = outpost_subnet_suffix;
            return this;
        }

        /**
         * @param outpost_subnet_suffix Suffix to append to outpost subnets name
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_suffix(String outpost_subnet_suffix) {
            return outpost_subnet_suffix(Output.of(outpost_subnet_suffix));
        }

        /**
         * @param outpost_subnet_tags Additional tags for the outpost subnets
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_tags(@Nullable Output<Map<String,String>> outpost_subnet_tags) {
            $.outpost_subnet_tags = outpost_subnet_tags;
            return this;
        }

        /**
         * @param outpost_subnet_tags Additional tags for the outpost subnets
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnet_tags(Map<String,String> outpost_subnet_tags) {
            return outpost_subnet_tags(Output.of(outpost_subnet_tags));
        }

        /**
         * @param outpost_subnets A list of outpost subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnets(@Nullable Output<List<String>> outpost_subnets) {
            $.outpost_subnets = outpost_subnets;
            return this;
        }

        /**
         * @param outpost_subnets A list of outpost subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnets(List<String> outpost_subnets) {
            return outpost_subnets(Output.of(outpost_subnets));
        }

        /**
         * @param outpost_subnets A list of outpost subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder outpost_subnets(String... outpost_subnets) {
            return outpost_subnets(List.of(outpost_subnets));
        }

        /**
         * @param private_acl_tags Additional tags for the private subnets network ACL
         * 
         * @return builder
         * 
         */
        public Builder private_acl_tags(@Nullable Output<Map<String,String>> private_acl_tags) {
            $.private_acl_tags = private_acl_tags;
            return this;
        }

        /**
         * @param private_acl_tags Additional tags for the private subnets network ACL
         * 
         * @return builder
         * 
         */
        public Builder private_acl_tags(Map<String,String> private_acl_tags) {
            return private_acl_tags(Output.of(private_acl_tags));
        }

        /**
         * @param private_dedicated_network_acl Whether to use dedicated network ACL (not default) and custom rules for private subnets
         * 
         * @return builder
         * 
         */
        public Builder private_dedicated_network_acl(@Nullable Output<Boolean> private_dedicated_network_acl) {
            $.private_dedicated_network_acl = private_dedicated_network_acl;
            return this;
        }

        /**
         * @param private_dedicated_network_acl Whether to use dedicated network ACL (not default) and custom rules for private subnets
         * 
         * @return builder
         * 
         */
        public Builder private_dedicated_network_acl(Boolean private_dedicated_network_acl) {
            return private_dedicated_network_acl(Output.of(private_dedicated_network_acl));
        }

        /**
         * @param private_inbound_acl_rules Private subnets inbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder private_inbound_acl_rules(@Nullable Output<List<Map<String,String>>> private_inbound_acl_rules) {
            $.private_inbound_acl_rules = private_inbound_acl_rules;
            return this;
        }

        /**
         * @param private_inbound_acl_rules Private subnets inbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder private_inbound_acl_rules(List<Map<String,String>> private_inbound_acl_rules) {
            return private_inbound_acl_rules(Output.of(private_inbound_acl_rules));
        }

        /**
         * @param private_inbound_acl_rules Private subnets inbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder private_inbound_acl_rules(Map<String,String>... private_inbound_acl_rules) {
            return private_inbound_acl_rules(List.of(private_inbound_acl_rules));
        }

        /**
         * @param private_outbound_acl_rules Private subnets outbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder private_outbound_acl_rules(@Nullable Output<List<Map<String,String>>> private_outbound_acl_rules) {
            $.private_outbound_acl_rules = private_outbound_acl_rules;
            return this;
        }

        /**
         * @param private_outbound_acl_rules Private subnets outbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder private_outbound_acl_rules(List<Map<String,String>> private_outbound_acl_rules) {
            return private_outbound_acl_rules(Output.of(private_outbound_acl_rules));
        }

        /**
         * @param private_outbound_acl_rules Private subnets outbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder private_outbound_acl_rules(Map<String,String>... private_outbound_acl_rules) {
            return private_outbound_acl_rules(List.of(private_outbound_acl_rules));
        }

        /**
         * @param private_route_table_tags Additional tags for the private route tables
         * 
         * @return builder
         * 
         */
        public Builder private_route_table_tags(@Nullable Output<Map<String,String>> private_route_table_tags) {
            $.private_route_table_tags = private_route_table_tags;
            return this;
        }

        /**
         * @param private_route_table_tags Additional tags for the private route tables
         * 
         * @return builder
         * 
         */
        public Builder private_route_table_tags(Map<String,String> private_route_table_tags) {
            return private_route_table_tags(Output.of(private_route_table_tags));
        }

        /**
         * @param private_subnet_assign_ipv6_address_on_creation Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_assign_ipv6_address_on_creation(@Nullable Output<Boolean> private_subnet_assign_ipv6_address_on_creation) {
            $.private_subnet_assign_ipv6_address_on_creation = private_subnet_assign_ipv6_address_on_creation;
            return this;
        }

        /**
         * @param private_subnet_assign_ipv6_address_on_creation Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_assign_ipv6_address_on_creation(Boolean private_subnet_assign_ipv6_address_on_creation) {
            return private_subnet_assign_ipv6_address_on_creation(Output.of(private_subnet_assign_ipv6_address_on_creation));
        }

        /**
         * @param private_subnet_enable_dns64 Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_enable_dns64(@Nullable Output<Boolean> private_subnet_enable_dns64) {
            $.private_subnet_enable_dns64 = private_subnet_enable_dns64;
            return this;
        }

        /**
         * @param private_subnet_enable_dns64 Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_enable_dns64(Boolean private_subnet_enable_dns64) {
            return private_subnet_enable_dns64(Output.of(private_subnet_enable_dns64));
        }

        /**
         * @param private_subnet_enable_resource_name_dns_a_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_enable_resource_name_dns_a_record_on_launch(@Nullable Output<Boolean> private_subnet_enable_resource_name_dns_a_record_on_launch) {
            $.private_subnet_enable_resource_name_dns_a_record_on_launch = private_subnet_enable_resource_name_dns_a_record_on_launch;
            return this;
        }

        /**
         * @param private_subnet_enable_resource_name_dns_a_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_enable_resource_name_dns_a_record_on_launch(Boolean private_subnet_enable_resource_name_dns_a_record_on_launch) {
            return private_subnet_enable_resource_name_dns_a_record_on_launch(Output.of(private_subnet_enable_resource_name_dns_a_record_on_launch));
        }

        /**
         * @param private_subnet_enable_resource_name_dns_aaaa_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_enable_resource_name_dns_aaaa_record_on_launch(@Nullable Output<Boolean> private_subnet_enable_resource_name_dns_aaaa_record_on_launch) {
            $.private_subnet_enable_resource_name_dns_aaaa_record_on_launch = private_subnet_enable_resource_name_dns_aaaa_record_on_launch;
            return this;
        }

        /**
         * @param private_subnet_enable_resource_name_dns_aaaa_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_enable_resource_name_dns_aaaa_record_on_launch(Boolean private_subnet_enable_resource_name_dns_aaaa_record_on_launch) {
            return private_subnet_enable_resource_name_dns_aaaa_record_on_launch(Output.of(private_subnet_enable_resource_name_dns_aaaa_record_on_launch));
        }

        /**
         * @param private_subnet_ipv6_native Indicates whether to create an IPv6-only subnet. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_ipv6_native(@Nullable Output<Boolean> private_subnet_ipv6_native) {
            $.private_subnet_ipv6_native = private_subnet_ipv6_native;
            return this;
        }

        /**
         * @param private_subnet_ipv6_native Indicates whether to create an IPv6-only subnet. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_ipv6_native(Boolean private_subnet_ipv6_native) {
            return private_subnet_ipv6_native(Output.of(private_subnet_ipv6_native));
        }

        /**
         * @param private_subnet_ipv6_prefixes Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_ipv6_prefixes(@Nullable Output<List<String>> private_subnet_ipv6_prefixes) {
            $.private_subnet_ipv6_prefixes = private_subnet_ipv6_prefixes;
            return this;
        }

        /**
         * @param private_subnet_ipv6_prefixes Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_ipv6_prefixes(List<String> private_subnet_ipv6_prefixes) {
            return private_subnet_ipv6_prefixes(Output.of(private_subnet_ipv6_prefixes));
        }

        /**
         * @param private_subnet_ipv6_prefixes Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_ipv6_prefixes(String... private_subnet_ipv6_prefixes) {
            return private_subnet_ipv6_prefixes(List.of(private_subnet_ipv6_prefixes));
        }

        /**
         * @param private_subnet_names Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_names(@Nullable Output<List<String>> private_subnet_names) {
            $.private_subnet_names = private_subnet_names;
            return this;
        }

        /**
         * @param private_subnet_names Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_names(List<String> private_subnet_names) {
            return private_subnet_names(Output.of(private_subnet_names));
        }

        /**
         * @param private_subnet_names Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_names(String... private_subnet_names) {
            return private_subnet_names(List.of(private_subnet_names));
        }

        /**
         * @param private_subnet_private_dns_hostname_type_on_launch The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_private_dns_hostname_type_on_launch(@Nullable Output<String> private_subnet_private_dns_hostname_type_on_launch) {
            $.private_subnet_private_dns_hostname_type_on_launch = private_subnet_private_dns_hostname_type_on_launch;
            return this;
        }

        /**
         * @param private_subnet_private_dns_hostname_type_on_launch The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_private_dns_hostname_type_on_launch(String private_subnet_private_dns_hostname_type_on_launch) {
            return private_subnet_private_dns_hostname_type_on_launch(Output.of(private_subnet_private_dns_hostname_type_on_launch));
        }

        /**
         * @param private_subnet_suffix Suffix to append to private subnets name
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_suffix(@Nullable Output<String> private_subnet_suffix) {
            $.private_subnet_suffix = private_subnet_suffix;
            return this;
        }

        /**
         * @param private_subnet_suffix Suffix to append to private subnets name
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_suffix(String private_subnet_suffix) {
            return private_subnet_suffix(Output.of(private_subnet_suffix));
        }

        /**
         * @param private_subnet_tags Additional tags for the private subnets
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_tags(@Nullable Output<Map<String,String>> private_subnet_tags) {
            $.private_subnet_tags = private_subnet_tags;
            return this;
        }

        /**
         * @param private_subnet_tags Additional tags for the private subnets
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_tags(Map<String,String> private_subnet_tags) {
            return private_subnet_tags(Output.of(private_subnet_tags));
        }

        /**
         * @param private_subnet_tags_per_az Additional tags for the private subnets where the primary key is the AZ
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_tags_per_az(@Nullable Output<Map<String,Map<String,String>>> private_subnet_tags_per_az) {
            $.private_subnet_tags_per_az = private_subnet_tags_per_az;
            return this;
        }

        /**
         * @param private_subnet_tags_per_az Additional tags for the private subnets where the primary key is the AZ
         * 
         * @return builder
         * 
         */
        public Builder private_subnet_tags_per_az(Map<String,Map<String,String>> private_subnet_tags_per_az) {
            return private_subnet_tags_per_az(Output.of(private_subnet_tags_per_az));
        }

        /**
         * @param private_subnets A list of private subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder private_subnets(@Nullable Output<List<String>> private_subnets) {
            $.private_subnets = private_subnets;
            return this;
        }

        /**
         * @param private_subnets A list of private subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder private_subnets(List<String> private_subnets) {
            return private_subnets(Output.of(private_subnets));
        }

        /**
         * @param private_subnets A list of private subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder private_subnets(String... private_subnets) {
            return private_subnets(List.of(private_subnets));
        }

        /**
         * @param propagate_intra_route_tables_vgw Should be true if you want route table propagation
         * 
         * @return builder
         * 
         */
        public Builder propagate_intra_route_tables_vgw(@Nullable Output<Boolean> propagate_intra_route_tables_vgw) {
            $.propagate_intra_route_tables_vgw = propagate_intra_route_tables_vgw;
            return this;
        }

        /**
         * @param propagate_intra_route_tables_vgw Should be true if you want route table propagation
         * 
         * @return builder
         * 
         */
        public Builder propagate_intra_route_tables_vgw(Boolean propagate_intra_route_tables_vgw) {
            return propagate_intra_route_tables_vgw(Output.of(propagate_intra_route_tables_vgw));
        }

        /**
         * @param propagate_private_route_tables_vgw Should be true if you want route table propagation
         * 
         * @return builder
         * 
         */
        public Builder propagate_private_route_tables_vgw(@Nullable Output<Boolean> propagate_private_route_tables_vgw) {
            $.propagate_private_route_tables_vgw = propagate_private_route_tables_vgw;
            return this;
        }

        /**
         * @param propagate_private_route_tables_vgw Should be true if you want route table propagation
         * 
         * @return builder
         * 
         */
        public Builder propagate_private_route_tables_vgw(Boolean propagate_private_route_tables_vgw) {
            return propagate_private_route_tables_vgw(Output.of(propagate_private_route_tables_vgw));
        }

        /**
         * @param propagate_public_route_tables_vgw Should be true if you want route table propagation
         * 
         * @return builder
         * 
         */
        public Builder propagate_public_route_tables_vgw(@Nullable Output<Boolean> propagate_public_route_tables_vgw) {
            $.propagate_public_route_tables_vgw = propagate_public_route_tables_vgw;
            return this;
        }

        /**
         * @param propagate_public_route_tables_vgw Should be true if you want route table propagation
         * 
         * @return builder
         * 
         */
        public Builder propagate_public_route_tables_vgw(Boolean propagate_public_route_tables_vgw) {
            return propagate_public_route_tables_vgw(Output.of(propagate_public_route_tables_vgw));
        }

        /**
         * @param public_acl_tags Additional tags for the public subnets network ACL
         * 
         * @return builder
         * 
         */
        public Builder public_acl_tags(@Nullable Output<Map<String,String>> public_acl_tags) {
            $.public_acl_tags = public_acl_tags;
            return this;
        }

        /**
         * @param public_acl_tags Additional tags for the public subnets network ACL
         * 
         * @return builder
         * 
         */
        public Builder public_acl_tags(Map<String,String> public_acl_tags) {
            return public_acl_tags(Output.of(public_acl_tags));
        }

        /**
         * @param public_dedicated_network_acl Whether to use dedicated network ACL (not default) and custom rules for public subnets
         * 
         * @return builder
         * 
         */
        public Builder public_dedicated_network_acl(@Nullable Output<Boolean> public_dedicated_network_acl) {
            $.public_dedicated_network_acl = public_dedicated_network_acl;
            return this;
        }

        /**
         * @param public_dedicated_network_acl Whether to use dedicated network ACL (not default) and custom rules for public subnets
         * 
         * @return builder
         * 
         */
        public Builder public_dedicated_network_acl(Boolean public_dedicated_network_acl) {
            return public_dedicated_network_acl(Output.of(public_dedicated_network_acl));
        }

        /**
         * @param public_inbound_acl_rules Public subnets inbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder public_inbound_acl_rules(@Nullable Output<List<Map<String,String>>> public_inbound_acl_rules) {
            $.public_inbound_acl_rules = public_inbound_acl_rules;
            return this;
        }

        /**
         * @param public_inbound_acl_rules Public subnets inbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder public_inbound_acl_rules(List<Map<String,String>> public_inbound_acl_rules) {
            return public_inbound_acl_rules(Output.of(public_inbound_acl_rules));
        }

        /**
         * @param public_inbound_acl_rules Public subnets inbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder public_inbound_acl_rules(Map<String,String>... public_inbound_acl_rules) {
            return public_inbound_acl_rules(List.of(public_inbound_acl_rules));
        }

        /**
         * @param public_outbound_acl_rules Public subnets outbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder public_outbound_acl_rules(@Nullable Output<List<Map<String,String>>> public_outbound_acl_rules) {
            $.public_outbound_acl_rules = public_outbound_acl_rules;
            return this;
        }

        /**
         * @param public_outbound_acl_rules Public subnets outbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder public_outbound_acl_rules(List<Map<String,String>> public_outbound_acl_rules) {
            return public_outbound_acl_rules(Output.of(public_outbound_acl_rules));
        }

        /**
         * @param public_outbound_acl_rules Public subnets outbound network ACLs
         * 
         * @return builder
         * 
         */
        public Builder public_outbound_acl_rules(Map<String,String>... public_outbound_acl_rules) {
            return public_outbound_acl_rules(List.of(public_outbound_acl_rules));
        }

        /**
         * @param public_route_table_tags Additional tags for the public route tables
         * 
         * @return builder
         * 
         */
        public Builder public_route_table_tags(@Nullable Output<Map<String,String>> public_route_table_tags) {
            $.public_route_table_tags = public_route_table_tags;
            return this;
        }

        /**
         * @param public_route_table_tags Additional tags for the public route tables
         * 
         * @return builder
         * 
         */
        public Builder public_route_table_tags(Map<String,String> public_route_table_tags) {
            return public_route_table_tags(Output.of(public_route_table_tags));
        }

        /**
         * @param public_subnet_assign_ipv6_address_on_creation Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_assign_ipv6_address_on_creation(@Nullable Output<Boolean> public_subnet_assign_ipv6_address_on_creation) {
            $.public_subnet_assign_ipv6_address_on_creation = public_subnet_assign_ipv6_address_on_creation;
            return this;
        }

        /**
         * @param public_subnet_assign_ipv6_address_on_creation Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_assign_ipv6_address_on_creation(Boolean public_subnet_assign_ipv6_address_on_creation) {
            return public_subnet_assign_ipv6_address_on_creation(Output.of(public_subnet_assign_ipv6_address_on_creation));
        }

        /**
         * @param public_subnet_enable_dns64 Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_enable_dns64(@Nullable Output<Boolean> public_subnet_enable_dns64) {
            $.public_subnet_enable_dns64 = public_subnet_enable_dns64;
            return this;
        }

        /**
         * @param public_subnet_enable_dns64 Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_enable_dns64(Boolean public_subnet_enable_dns64) {
            return public_subnet_enable_dns64(Output.of(public_subnet_enable_dns64));
        }

        /**
         * @param public_subnet_enable_resource_name_dns_a_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_enable_resource_name_dns_a_record_on_launch(@Nullable Output<Boolean> public_subnet_enable_resource_name_dns_a_record_on_launch) {
            $.public_subnet_enable_resource_name_dns_a_record_on_launch = public_subnet_enable_resource_name_dns_a_record_on_launch;
            return this;
        }

        /**
         * @param public_subnet_enable_resource_name_dns_a_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_enable_resource_name_dns_a_record_on_launch(Boolean public_subnet_enable_resource_name_dns_a_record_on_launch) {
            return public_subnet_enable_resource_name_dns_a_record_on_launch(Output.of(public_subnet_enable_resource_name_dns_a_record_on_launch));
        }

        /**
         * @param public_subnet_enable_resource_name_dns_aaaa_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_enable_resource_name_dns_aaaa_record_on_launch(@Nullable Output<Boolean> public_subnet_enable_resource_name_dns_aaaa_record_on_launch) {
            $.public_subnet_enable_resource_name_dns_aaaa_record_on_launch = public_subnet_enable_resource_name_dns_aaaa_record_on_launch;
            return this;
        }

        /**
         * @param public_subnet_enable_resource_name_dns_aaaa_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_enable_resource_name_dns_aaaa_record_on_launch(Boolean public_subnet_enable_resource_name_dns_aaaa_record_on_launch) {
            return public_subnet_enable_resource_name_dns_aaaa_record_on_launch(Output.of(public_subnet_enable_resource_name_dns_aaaa_record_on_launch));
        }

        /**
         * @param public_subnet_ipv6_native Indicates whether to create an IPv6-only subnet. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_ipv6_native(@Nullable Output<Boolean> public_subnet_ipv6_native) {
            $.public_subnet_ipv6_native = public_subnet_ipv6_native;
            return this;
        }

        /**
         * @param public_subnet_ipv6_native Indicates whether to create an IPv6-only subnet. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_ipv6_native(Boolean public_subnet_ipv6_native) {
            return public_subnet_ipv6_native(Output.of(public_subnet_ipv6_native));
        }

        /**
         * @param public_subnet_ipv6_prefixes Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_ipv6_prefixes(@Nullable Output<List<String>> public_subnet_ipv6_prefixes) {
            $.public_subnet_ipv6_prefixes = public_subnet_ipv6_prefixes;
            return this;
        }

        /**
         * @param public_subnet_ipv6_prefixes Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_ipv6_prefixes(List<String> public_subnet_ipv6_prefixes) {
            return public_subnet_ipv6_prefixes(Output.of(public_subnet_ipv6_prefixes));
        }

        /**
         * @param public_subnet_ipv6_prefixes Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_ipv6_prefixes(String... public_subnet_ipv6_prefixes) {
            return public_subnet_ipv6_prefixes(List.of(public_subnet_ipv6_prefixes));
        }

        /**
         * @param public_subnet_names Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_names(@Nullable Output<List<String>> public_subnet_names) {
            $.public_subnet_names = public_subnet_names;
            return this;
        }

        /**
         * @param public_subnet_names Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_names(List<String> public_subnet_names) {
            return public_subnet_names(Output.of(public_subnet_names));
        }

        /**
         * @param public_subnet_names Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_names(String... public_subnet_names) {
            return public_subnet_names(List.of(public_subnet_names));
        }

        /**
         * @param public_subnet_private_dns_hostname_type_on_launch The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_private_dns_hostname_type_on_launch(@Nullable Output<String> public_subnet_private_dns_hostname_type_on_launch) {
            $.public_subnet_private_dns_hostname_type_on_launch = public_subnet_private_dns_hostname_type_on_launch;
            return this;
        }

        /**
         * @param public_subnet_private_dns_hostname_type_on_launch The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_private_dns_hostname_type_on_launch(String public_subnet_private_dns_hostname_type_on_launch) {
            return public_subnet_private_dns_hostname_type_on_launch(Output.of(public_subnet_private_dns_hostname_type_on_launch));
        }

        /**
         * @param public_subnet_suffix Suffix to append to public subnets name
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_suffix(@Nullable Output<String> public_subnet_suffix) {
            $.public_subnet_suffix = public_subnet_suffix;
            return this;
        }

        /**
         * @param public_subnet_suffix Suffix to append to public subnets name
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_suffix(String public_subnet_suffix) {
            return public_subnet_suffix(Output.of(public_subnet_suffix));
        }

        /**
         * @param public_subnet_tags Additional tags for the public subnets
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_tags(@Nullable Output<Map<String,String>> public_subnet_tags) {
            $.public_subnet_tags = public_subnet_tags;
            return this;
        }

        /**
         * @param public_subnet_tags Additional tags for the public subnets
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_tags(Map<String,String> public_subnet_tags) {
            return public_subnet_tags(Output.of(public_subnet_tags));
        }

        /**
         * @param public_subnet_tags_per_az Additional tags for the public subnets where the primary key is the AZ
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_tags_per_az(@Nullable Output<Map<String,Map<String,String>>> public_subnet_tags_per_az) {
            $.public_subnet_tags_per_az = public_subnet_tags_per_az;
            return this;
        }

        /**
         * @param public_subnet_tags_per_az Additional tags for the public subnets where the primary key is the AZ
         * 
         * @return builder
         * 
         */
        public Builder public_subnet_tags_per_az(Map<String,Map<String,String>> public_subnet_tags_per_az) {
            return public_subnet_tags_per_az(Output.of(public_subnet_tags_per_az));
        }

        /**
         * @param public_subnets A list of public subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder public_subnets(@Nullable Output<List<String>> public_subnets) {
            $.public_subnets = public_subnets;
            return this;
        }

        /**
         * @param public_subnets A list of public subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder public_subnets(List<String> public_subnets) {
            return public_subnets(Output.of(public_subnets));
        }

        /**
         * @param public_subnets A list of public subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder public_subnets(String... public_subnets) {
            return public_subnets(List.of(public_subnets));
        }

        /**
         * @param putin_khuylo Do you agree that Putin doesn&#39;t respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!
         * 
         * @return builder
         * 
         */
        public Builder putin_khuylo(@Nullable Output<Boolean> putin_khuylo) {
            $.putin_khuylo = putin_khuylo;
            return this;
        }

        /**
         * @param putin_khuylo Do you agree that Putin doesn&#39;t respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!
         * 
         * @return builder
         * 
         */
        public Builder putin_khuylo(Boolean putin_khuylo) {
            return putin_khuylo(Output.of(putin_khuylo));
        }

        /**
         * @param redshift_acl_tags Additional tags for the redshift subnets network ACL
         * 
         * @return builder
         * 
         */
        public Builder redshift_acl_tags(@Nullable Output<Map<String,String>> redshift_acl_tags) {
            $.redshift_acl_tags = redshift_acl_tags;
            return this;
        }

        /**
         * @param redshift_acl_tags Additional tags for the redshift subnets network ACL
         * 
         * @return builder
         * 
         */
        public Builder redshift_acl_tags(Map<String,String> redshift_acl_tags) {
            return redshift_acl_tags(Output.of(redshift_acl_tags));
        }

        /**
         * @param redshift_dedicated_network_acl Whether to use dedicated network ACL (not default) and custom rules for redshift subnets
         * 
         * @return builder
         * 
         */
        public Builder redshift_dedicated_network_acl(@Nullable Output<Boolean> redshift_dedicated_network_acl) {
            $.redshift_dedicated_network_acl = redshift_dedicated_network_acl;
            return this;
        }

        /**
         * @param redshift_dedicated_network_acl Whether to use dedicated network ACL (not default) and custom rules for redshift subnets
         * 
         * @return builder
         * 
         */
        public Builder redshift_dedicated_network_acl(Boolean redshift_dedicated_network_acl) {
            return redshift_dedicated_network_acl(Output.of(redshift_dedicated_network_acl));
        }

        /**
         * @param redshift_inbound_acl_rules Redshift subnets inbound network ACL rules
         * 
         * @return builder
         * 
         */
        public Builder redshift_inbound_acl_rules(@Nullable Output<List<Map<String,String>>> redshift_inbound_acl_rules) {
            $.redshift_inbound_acl_rules = redshift_inbound_acl_rules;
            return this;
        }

        /**
         * @param redshift_inbound_acl_rules Redshift subnets inbound network ACL rules
         * 
         * @return builder
         * 
         */
        public Builder redshift_inbound_acl_rules(List<Map<String,String>> redshift_inbound_acl_rules) {
            return redshift_inbound_acl_rules(Output.of(redshift_inbound_acl_rules));
        }

        /**
         * @param redshift_inbound_acl_rules Redshift subnets inbound network ACL rules
         * 
         * @return builder
         * 
         */
        public Builder redshift_inbound_acl_rules(Map<String,String>... redshift_inbound_acl_rules) {
            return redshift_inbound_acl_rules(List.of(redshift_inbound_acl_rules));
        }

        /**
         * @param redshift_outbound_acl_rules Redshift subnets outbound network ACL rules
         * 
         * @return builder
         * 
         */
        public Builder redshift_outbound_acl_rules(@Nullable Output<List<Map<String,String>>> redshift_outbound_acl_rules) {
            $.redshift_outbound_acl_rules = redshift_outbound_acl_rules;
            return this;
        }

        /**
         * @param redshift_outbound_acl_rules Redshift subnets outbound network ACL rules
         * 
         * @return builder
         * 
         */
        public Builder redshift_outbound_acl_rules(List<Map<String,String>> redshift_outbound_acl_rules) {
            return redshift_outbound_acl_rules(Output.of(redshift_outbound_acl_rules));
        }

        /**
         * @param redshift_outbound_acl_rules Redshift subnets outbound network ACL rules
         * 
         * @return builder
         * 
         */
        public Builder redshift_outbound_acl_rules(Map<String,String>... redshift_outbound_acl_rules) {
            return redshift_outbound_acl_rules(List.of(redshift_outbound_acl_rules));
        }

        /**
         * @param redshift_route_table_tags Additional tags for the redshift route tables
         * 
         * @return builder
         * 
         */
        public Builder redshift_route_table_tags(@Nullable Output<Map<String,String>> redshift_route_table_tags) {
            $.redshift_route_table_tags = redshift_route_table_tags;
            return this;
        }

        /**
         * @param redshift_route_table_tags Additional tags for the redshift route tables
         * 
         * @return builder
         * 
         */
        public Builder redshift_route_table_tags(Map<String,String> redshift_route_table_tags) {
            return redshift_route_table_tags(Output.of(redshift_route_table_tags));
        }

        /**
         * @param redshift_subnet_assign_ipv6_address_on_creation Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_assign_ipv6_address_on_creation(@Nullable Output<Boolean> redshift_subnet_assign_ipv6_address_on_creation) {
            $.redshift_subnet_assign_ipv6_address_on_creation = redshift_subnet_assign_ipv6_address_on_creation;
            return this;
        }

        /**
         * @param redshift_subnet_assign_ipv6_address_on_creation Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_assign_ipv6_address_on_creation(Boolean redshift_subnet_assign_ipv6_address_on_creation) {
            return redshift_subnet_assign_ipv6_address_on_creation(Output.of(redshift_subnet_assign_ipv6_address_on_creation));
        }

        /**
         * @param redshift_subnet_enable_dns64 Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_enable_dns64(@Nullable Output<Boolean> redshift_subnet_enable_dns64) {
            $.redshift_subnet_enable_dns64 = redshift_subnet_enable_dns64;
            return this;
        }

        /**
         * @param redshift_subnet_enable_dns64 Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_enable_dns64(Boolean redshift_subnet_enable_dns64) {
            return redshift_subnet_enable_dns64(Output.of(redshift_subnet_enable_dns64));
        }

        /**
         * @param redshift_subnet_enable_resource_name_dns_a_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_enable_resource_name_dns_a_record_on_launch(@Nullable Output<Boolean> redshift_subnet_enable_resource_name_dns_a_record_on_launch) {
            $.redshift_subnet_enable_resource_name_dns_a_record_on_launch = redshift_subnet_enable_resource_name_dns_a_record_on_launch;
            return this;
        }

        /**
         * @param redshift_subnet_enable_resource_name_dns_a_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_enable_resource_name_dns_a_record_on_launch(Boolean redshift_subnet_enable_resource_name_dns_a_record_on_launch) {
            return redshift_subnet_enable_resource_name_dns_a_record_on_launch(Output.of(redshift_subnet_enable_resource_name_dns_a_record_on_launch));
        }

        /**
         * @param redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch(@Nullable Output<Boolean> redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch) {
            $.redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch = redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch;
            return this;
        }

        /**
         * @param redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch(Boolean redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch) {
            return redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch(Output.of(redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch));
        }

        /**
         * @param redshift_subnet_group_name Name of redshift subnet group
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_group_name(@Nullable Output<String> redshift_subnet_group_name) {
            $.redshift_subnet_group_name = redshift_subnet_group_name;
            return this;
        }

        /**
         * @param redshift_subnet_group_name Name of redshift subnet group
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_group_name(String redshift_subnet_group_name) {
            return redshift_subnet_group_name(Output.of(redshift_subnet_group_name));
        }

        /**
         * @param redshift_subnet_group_tags Additional tags for the redshift subnet group
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_group_tags(@Nullable Output<Map<String,String>> redshift_subnet_group_tags) {
            $.redshift_subnet_group_tags = redshift_subnet_group_tags;
            return this;
        }

        /**
         * @param redshift_subnet_group_tags Additional tags for the redshift subnet group
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_group_tags(Map<String,String> redshift_subnet_group_tags) {
            return redshift_subnet_group_tags(Output.of(redshift_subnet_group_tags));
        }

        /**
         * @param redshift_subnet_ipv6_native Indicates whether to create an IPv6-only subnet. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_ipv6_native(@Nullable Output<Boolean> redshift_subnet_ipv6_native) {
            $.redshift_subnet_ipv6_native = redshift_subnet_ipv6_native;
            return this;
        }

        /**
         * @param redshift_subnet_ipv6_native Indicates whether to create an IPv6-only subnet. Default: `false`
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_ipv6_native(Boolean redshift_subnet_ipv6_native) {
            return redshift_subnet_ipv6_native(Output.of(redshift_subnet_ipv6_native));
        }

        /**
         * @param redshift_subnet_ipv6_prefixes Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_ipv6_prefixes(@Nullable Output<List<String>> redshift_subnet_ipv6_prefixes) {
            $.redshift_subnet_ipv6_prefixes = redshift_subnet_ipv6_prefixes;
            return this;
        }

        /**
         * @param redshift_subnet_ipv6_prefixes Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_ipv6_prefixes(List<String> redshift_subnet_ipv6_prefixes) {
            return redshift_subnet_ipv6_prefixes(Output.of(redshift_subnet_ipv6_prefixes));
        }

        /**
         * @param redshift_subnet_ipv6_prefixes Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_ipv6_prefixes(String... redshift_subnet_ipv6_prefixes) {
            return redshift_subnet_ipv6_prefixes(List.of(redshift_subnet_ipv6_prefixes));
        }

        /**
         * @param redshift_subnet_names Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_names(@Nullable Output<List<String>> redshift_subnet_names) {
            $.redshift_subnet_names = redshift_subnet_names;
            return this;
        }

        /**
         * @param redshift_subnet_names Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_names(List<String> redshift_subnet_names) {
            return redshift_subnet_names(Output.of(redshift_subnet_names));
        }

        /**
         * @param redshift_subnet_names Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_names(String... redshift_subnet_names) {
            return redshift_subnet_names(List.of(redshift_subnet_names));
        }

        /**
         * @param redshift_subnet_private_dns_hostname_type_on_launch The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_private_dns_hostname_type_on_launch(@Nullable Output<String> redshift_subnet_private_dns_hostname_type_on_launch) {
            $.redshift_subnet_private_dns_hostname_type_on_launch = redshift_subnet_private_dns_hostname_type_on_launch;
            return this;
        }

        /**
         * @param redshift_subnet_private_dns_hostname_type_on_launch The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_private_dns_hostname_type_on_launch(String redshift_subnet_private_dns_hostname_type_on_launch) {
            return redshift_subnet_private_dns_hostname_type_on_launch(Output.of(redshift_subnet_private_dns_hostname_type_on_launch));
        }

        /**
         * @param redshift_subnet_suffix Suffix to append to redshift subnets name
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_suffix(@Nullable Output<String> redshift_subnet_suffix) {
            $.redshift_subnet_suffix = redshift_subnet_suffix;
            return this;
        }

        /**
         * @param redshift_subnet_suffix Suffix to append to redshift subnets name
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_suffix(String redshift_subnet_suffix) {
            return redshift_subnet_suffix(Output.of(redshift_subnet_suffix));
        }

        /**
         * @param redshift_subnet_tags Additional tags for the redshift subnets
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_tags(@Nullable Output<Map<String,String>> redshift_subnet_tags) {
            $.redshift_subnet_tags = redshift_subnet_tags;
            return this;
        }

        /**
         * @param redshift_subnet_tags Additional tags for the redshift subnets
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnet_tags(Map<String,String> redshift_subnet_tags) {
            return redshift_subnet_tags(Output.of(redshift_subnet_tags));
        }

        /**
         * @param redshift_subnets A list of redshift subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnets(@Nullable Output<List<String>> redshift_subnets) {
            $.redshift_subnets = redshift_subnets;
            return this;
        }

        /**
         * @param redshift_subnets A list of redshift subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnets(List<String> redshift_subnets) {
            return redshift_subnets(Output.of(redshift_subnets));
        }

        /**
         * @param redshift_subnets A list of redshift subnets inside the VPC
         * 
         * @return builder
         * 
         */
        public Builder redshift_subnets(String... redshift_subnets) {
            return redshift_subnets(List.of(redshift_subnets));
        }

        /**
         * @param reuse_nat_ips Should be true if you don&#39;t want EIPs to be created for your NAT Gateways and will instead pass them in via the &#39;external_nat_ip_ids&#39; variable
         * 
         * @return builder
         * 
         */
        public Builder reuse_nat_ips(@Nullable Output<Boolean> reuse_nat_ips) {
            $.reuse_nat_ips = reuse_nat_ips;
            return this;
        }

        /**
         * @param reuse_nat_ips Should be true if you don&#39;t want EIPs to be created for your NAT Gateways and will instead pass them in via the &#39;external_nat_ip_ids&#39; variable
         * 
         * @return builder
         * 
         */
        public Builder reuse_nat_ips(Boolean reuse_nat_ips) {
            return reuse_nat_ips(Output.of(reuse_nat_ips));
        }

        /**
         * @param secondary_cidr_blocks List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool
         * 
         * @return builder
         * 
         */
        public Builder secondary_cidr_blocks(@Nullable Output<List<String>> secondary_cidr_blocks) {
            $.secondary_cidr_blocks = secondary_cidr_blocks;
            return this;
        }

        /**
         * @param secondary_cidr_blocks List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool
         * 
         * @return builder
         * 
         */
        public Builder secondary_cidr_blocks(List<String> secondary_cidr_blocks) {
            return secondary_cidr_blocks(Output.of(secondary_cidr_blocks));
        }

        /**
         * @param secondary_cidr_blocks List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool
         * 
         * @return builder
         * 
         */
        public Builder secondary_cidr_blocks(String... secondary_cidr_blocks) {
            return secondary_cidr_blocks(List.of(secondary_cidr_blocks));
        }

        /**
         * @param single_nat_gateway Should be true if you want to provision a single shared NAT Gateway across all of your private networks
         * 
         * @return builder
         * 
         */
        public Builder single_nat_gateway(@Nullable Output<Boolean> single_nat_gateway) {
            $.single_nat_gateway = single_nat_gateway;
            return this;
        }

        /**
         * @param single_nat_gateway Should be true if you want to provision a single shared NAT Gateway across all of your private networks
         * 
         * @return builder
         * 
         */
        public Builder single_nat_gateway(Boolean single_nat_gateway) {
            return single_nat_gateway(Output.of(single_nat_gateway));
        }

        /**
         * @param tags A map of tags to add to all resources
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of tags to add to all resources
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param use_ipam_pool Determines whether IPAM pool is used for CIDR allocation
         * 
         * @return builder
         * 
         */
        public Builder use_ipam_pool(@Nullable Output<Boolean> use_ipam_pool) {
            $.use_ipam_pool = use_ipam_pool;
            return this;
        }

        /**
         * @param use_ipam_pool Determines whether IPAM pool is used for CIDR allocation
         * 
         * @return builder
         * 
         */
        public Builder use_ipam_pool(Boolean use_ipam_pool) {
            return use_ipam_pool(Output.of(use_ipam_pool));
        }

        /**
         * @param vpc_flow_log_iam_policy_name Name of the IAM policy
         * 
         * @return builder
         * 
         */
        public Builder vpc_flow_log_iam_policy_name(@Nullable Output<String> vpc_flow_log_iam_policy_name) {
            $.vpc_flow_log_iam_policy_name = vpc_flow_log_iam_policy_name;
            return this;
        }

        /**
         * @param vpc_flow_log_iam_policy_name Name of the IAM policy
         * 
         * @return builder
         * 
         */
        public Builder vpc_flow_log_iam_policy_name(String vpc_flow_log_iam_policy_name) {
            return vpc_flow_log_iam_policy_name(Output.of(vpc_flow_log_iam_policy_name));
        }

        /**
         * @param vpc_flow_log_iam_policy_use_name_prefix Determines whether the name of the IAM policy (`vpc_flow_log_iam_policy_name`) is used as a prefix
         * 
         * @return builder
         * 
         */
        public Builder vpc_flow_log_iam_policy_use_name_prefix(@Nullable Output<Boolean> vpc_flow_log_iam_policy_use_name_prefix) {
            $.vpc_flow_log_iam_policy_use_name_prefix = vpc_flow_log_iam_policy_use_name_prefix;
            return this;
        }

        /**
         * @param vpc_flow_log_iam_policy_use_name_prefix Determines whether the name of the IAM policy (`vpc_flow_log_iam_policy_name`) is used as a prefix
         * 
         * @return builder
         * 
         */
        public Builder vpc_flow_log_iam_policy_use_name_prefix(Boolean vpc_flow_log_iam_policy_use_name_prefix) {
            return vpc_flow_log_iam_policy_use_name_prefix(Output.of(vpc_flow_log_iam_policy_use_name_prefix));
        }

        /**
         * @param vpc_flow_log_iam_role_name Name to use on the VPC Flow Log IAM role created
         * 
         * @return builder
         * 
         */
        public Builder vpc_flow_log_iam_role_name(@Nullable Output<String> vpc_flow_log_iam_role_name) {
            $.vpc_flow_log_iam_role_name = vpc_flow_log_iam_role_name;
            return this;
        }

        /**
         * @param vpc_flow_log_iam_role_name Name to use on the VPC Flow Log IAM role created
         * 
         * @return builder
         * 
         */
        public Builder vpc_flow_log_iam_role_name(String vpc_flow_log_iam_role_name) {
            return vpc_flow_log_iam_role_name(Output.of(vpc_flow_log_iam_role_name));
        }

        /**
         * @param vpc_flow_log_iam_role_use_name_prefix Determines whether the IAM role name (`vpc_flow_log_iam_role_name_name`) is used as a prefix
         * 
         * @return builder
         * 
         */
        public Builder vpc_flow_log_iam_role_use_name_prefix(@Nullable Output<Boolean> vpc_flow_log_iam_role_use_name_prefix) {
            $.vpc_flow_log_iam_role_use_name_prefix = vpc_flow_log_iam_role_use_name_prefix;
            return this;
        }

        /**
         * @param vpc_flow_log_iam_role_use_name_prefix Determines whether the IAM role name (`vpc_flow_log_iam_role_name_name`) is used as a prefix
         * 
         * @return builder
         * 
         */
        public Builder vpc_flow_log_iam_role_use_name_prefix(Boolean vpc_flow_log_iam_role_use_name_prefix) {
            return vpc_flow_log_iam_role_use_name_prefix(Output.of(vpc_flow_log_iam_role_use_name_prefix));
        }

        /**
         * @param vpc_flow_log_permissions_boundary The ARN of the Permissions Boundary for the VPC Flow Log IAM Role
         * 
         * @return builder
         * 
         */
        public Builder vpc_flow_log_permissions_boundary(@Nullable Output<String> vpc_flow_log_permissions_boundary) {
            $.vpc_flow_log_permissions_boundary = vpc_flow_log_permissions_boundary;
            return this;
        }

        /**
         * @param vpc_flow_log_permissions_boundary The ARN of the Permissions Boundary for the VPC Flow Log IAM Role
         * 
         * @return builder
         * 
         */
        public Builder vpc_flow_log_permissions_boundary(String vpc_flow_log_permissions_boundary) {
            return vpc_flow_log_permissions_boundary(Output.of(vpc_flow_log_permissions_boundary));
        }

        /**
         * @param vpc_flow_log_tags Additional tags for the VPC Flow Logs
         * 
         * @return builder
         * 
         */
        public Builder vpc_flow_log_tags(@Nullable Output<Map<String,String>> vpc_flow_log_tags) {
            $.vpc_flow_log_tags = vpc_flow_log_tags;
            return this;
        }

        /**
         * @param vpc_flow_log_tags Additional tags for the VPC Flow Logs
         * 
         * @return builder
         * 
         */
        public Builder vpc_flow_log_tags(Map<String,String> vpc_flow_log_tags) {
            return vpc_flow_log_tags(Output.of(vpc_flow_log_tags));
        }

        /**
         * @param vpc_tags Additional tags for the VPC
         * 
         * @return builder
         * 
         */
        public Builder vpc_tags(@Nullable Output<Map<String,String>> vpc_tags) {
            $.vpc_tags = vpc_tags;
            return this;
        }

        /**
         * @param vpc_tags Additional tags for the VPC
         * 
         * @return builder
         * 
         */
        public Builder vpc_tags(Map<String,String> vpc_tags) {
            return vpc_tags(Output.of(vpc_tags));
        }

        /**
         * @param vpn_gateway_az The Availability Zone for the VPN Gateway
         * 
         * @return builder
         * 
         */
        public Builder vpn_gateway_az(@Nullable Output<String> vpn_gateway_az) {
            $.vpn_gateway_az = vpn_gateway_az;
            return this;
        }

        /**
         * @param vpn_gateway_az The Availability Zone for the VPN Gateway
         * 
         * @return builder
         * 
         */
        public Builder vpn_gateway_az(String vpn_gateway_az) {
            return vpn_gateway_az(Output.of(vpn_gateway_az));
        }

        /**
         * @param vpn_gateway_id ID of VPN Gateway to attach to the VPC
         * 
         * @return builder
         * 
         */
        public Builder vpn_gateway_id(@Nullable Output<String> vpn_gateway_id) {
            $.vpn_gateway_id = vpn_gateway_id;
            return this;
        }

        /**
         * @param vpn_gateway_id ID of VPN Gateway to attach to the VPC
         * 
         * @return builder
         * 
         */
        public Builder vpn_gateway_id(String vpn_gateway_id) {
            return vpn_gateway_id(Output.of(vpn_gateway_id));
        }

        /**
         * @param vpn_gateway_tags Additional tags for the VPN gateway
         * 
         * @return builder
         * 
         */
        public Builder vpn_gateway_tags(@Nullable Output<Map<String,String>> vpn_gateway_tags) {
            $.vpn_gateway_tags = vpn_gateway_tags;
            return this;
        }

        /**
         * @param vpn_gateway_tags Additional tags for the VPN gateway
         * 
         * @return builder
         * 
         */
        public Builder vpn_gateway_tags(Map<String,String> vpn_gateway_tags) {
            return vpn_gateway_tags(Output.of(vpn_gateway_tags));
        }

        public ModuleArgs build() {
            return $;
        }
    }

}
