// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package terraformawsmodules

import (
	"context"
	"reflect"

	"example.com/pulumi-terraform-aws-modules/sdk/go/v5/terraformawsmodules/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Vpc struct {
	pulumi.ResourceState

	// A list of availability zones specified as argument to this module
	Azs pulumi.StringArrayOutput `pulumi:"azs"`
	// List of ARNs of Customer Gateway
	Cgw_arns pulumi.StringArrayOutput `pulumi:"cgw_arns"`
	// List of IDs of Customer Gateway
	Cgw_ids pulumi.StringArrayOutput `pulumi:"cgw_ids"`
	// ID of the database internet gateway route
	Database_internet_gateway_route_id pulumi.StringPtrOutput `pulumi:"database_internet_gateway_route_id"`
	// ID of the database IPv6 egress route
	Database_ipv6_egress_route_id pulumi.StringPtrOutput `pulumi:"database_ipv6_egress_route_id"`
	// List of IDs of the database nat gateway route
	Database_nat_gateway_route_ids pulumi.StringArrayOutput `pulumi:"database_nat_gateway_route_ids"`
	// ARN of the database network ACL
	Database_network_acl_arn pulumi.StringPtrOutput `pulumi:"database_network_acl_arn"`
	// ID of the database network ACL
	Database_network_acl_id pulumi.StringPtrOutput `pulumi:"database_network_acl_id"`
	// List of IDs of the database route table association
	Database_route_table_association_ids pulumi.StringArrayOutput `pulumi:"database_route_table_association_ids"`
	// List of IDs of database route tables
	Database_route_table_ids pulumi.StringArrayOutput `pulumi:"database_route_table_ids"`
	// List of ARNs of database subnets
	Database_subnet_arns pulumi.StringArrayOutput `pulumi:"database_subnet_arns"`
	// ID of database subnet group
	Database_subnet_group pulumi.StringPtrOutput `pulumi:"database_subnet_group"`
	// Name of database subnet group
	Database_subnet_group_name pulumi.StringPtrOutput `pulumi:"database_subnet_group_name"`
	// A list of all database subnets, containing the full objects.
	Database_subnet_objects pulumi.StringPtrOutput `pulumi:"database_subnet_objects"`
	// List of IDs of database subnets
	Database_subnets pulumi.StringArrayOutput `pulumi:"database_subnets"`
	// List of cidr_blocks of database subnets
	Database_subnets_cidr_blocks pulumi.StringArrayOutput `pulumi:"database_subnets_cidr_blocks"`
	// List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC
	Database_subnets_ipv6_cidr_blocks pulumi.StringArrayOutput `pulumi:"database_subnets_ipv6_cidr_blocks"`
	// The ID of the default network ACL
	Default_network_acl_id pulumi.StringPtrOutput `pulumi:"default_network_acl_id"`
	// The ID of the default route table
	Default_route_table_id pulumi.StringPtrOutput `pulumi:"default_route_table_id"`
	// The ID of the security group created by default on VPC creation
	Default_security_group_id pulumi.StringPtrOutput `pulumi:"default_security_group_id"`
	// The ARN of the Default VPC
	Default_vpc_arn pulumi.StringPtrOutput `pulumi:"default_vpc_arn"`
	// The CIDR block of the Default VPC
	Default_vpc_cidr_block pulumi.StringPtrOutput `pulumi:"default_vpc_cidr_block"`
	// The ID of the default network ACL of the Default VPC
	Default_vpc_default_network_acl_id pulumi.StringPtrOutput `pulumi:"default_vpc_default_network_acl_id"`
	// The ID of the default route table of the Default VPC
	Default_vpc_default_route_table_id pulumi.StringPtrOutput `pulumi:"default_vpc_default_route_table_id"`
	// The ID of the security group created by default on Default VPC creation
	Default_vpc_default_security_group_id pulumi.StringPtrOutput `pulumi:"default_vpc_default_security_group_id"`
	// Whether or not the Default VPC has DNS hostname support
	Default_vpc_enable_dns_hostnames pulumi.StringPtrOutput `pulumi:"default_vpc_enable_dns_hostnames"`
	// Whether or not the Default VPC has DNS support
	Default_vpc_enable_dns_support pulumi.StringPtrOutput `pulumi:"default_vpc_enable_dns_support"`
	// The ID of the Default VPC
	Default_vpc_id pulumi.StringPtrOutput `pulumi:"default_vpc_id"`
	// Tenancy of instances spin up within Default VPC
	Default_vpc_instance_tenancy pulumi.StringPtrOutput `pulumi:"default_vpc_instance_tenancy"`
	// The ID of the main route table associated with the Default VPC
	Default_vpc_main_route_table_id pulumi.StringPtrOutput `pulumi:"default_vpc_main_route_table_id"`
	// The ID of the DHCP options
	Dhcp_options_id pulumi.StringPtrOutput `pulumi:"dhcp_options_id"`
	// The ID of the egress only Internet Gateway
	Egress_only_internet_gateway_id pulumi.StringPtrOutput `pulumi:"egress_only_internet_gateway_id"`
	// ARN of the elasticache network ACL
	Elasticache_network_acl_arn pulumi.StringPtrOutput `pulumi:"elasticache_network_acl_arn"`
	// ID of the elasticache network ACL
	Elasticache_network_acl_id pulumi.StringPtrOutput `pulumi:"elasticache_network_acl_id"`
	// List of IDs of the elasticache route table association
	Elasticache_route_table_association_ids pulumi.StringArrayOutput `pulumi:"elasticache_route_table_association_ids"`
	// List of IDs of elasticache route tables
	Elasticache_route_table_ids pulumi.StringPtrOutput `pulumi:"elasticache_route_table_ids"`
	// List of ARNs of elasticache subnets
	Elasticache_subnet_arns pulumi.StringArrayOutput `pulumi:"elasticache_subnet_arns"`
	// ID of elasticache subnet group
	Elasticache_subnet_group pulumi.StringPtrOutput `pulumi:"elasticache_subnet_group"`
	// Name of elasticache subnet group
	Elasticache_subnet_group_name pulumi.StringPtrOutput `pulumi:"elasticache_subnet_group_name"`
	// A list of all elasticache subnets, containing the full objects.
	Elasticache_subnet_objects pulumi.StringPtrOutput `pulumi:"elasticache_subnet_objects"`
	// List of IDs of elasticache subnets
	Elasticache_subnets pulumi.StringArrayOutput `pulumi:"elasticache_subnets"`
	// List of cidr_blocks of elasticache subnets
	Elasticache_subnets_cidr_blocks pulumi.StringArrayOutput `pulumi:"elasticache_subnets_cidr_blocks"`
	// List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC
	Elasticache_subnets_ipv6_cidr_blocks pulumi.StringArrayOutput `pulumi:"elasticache_subnets_ipv6_cidr_blocks"`
	// The ARN of the Internet Gateway
	Igw_arn pulumi.StringPtrOutput `pulumi:"igw_arn"`
	// The ID of the Internet Gateway
	Igw_id pulumi.StringPtrOutput `pulumi:"igw_id"`
	// ARN of the intra network ACL
	Intra_network_acl_arn pulumi.StringPtrOutput `pulumi:"intra_network_acl_arn"`
	// ID of the intra network ACL
	Intra_network_acl_id pulumi.StringPtrOutput `pulumi:"intra_network_acl_id"`
	// List of IDs of the intra route table association
	Intra_route_table_association_ids pulumi.StringArrayOutput `pulumi:"intra_route_table_association_ids"`
	// List of IDs of intra route tables
	Intra_route_table_ids pulumi.StringArrayOutput `pulumi:"intra_route_table_ids"`
	// List of ARNs of intra subnets
	Intra_subnet_arns pulumi.StringArrayOutput `pulumi:"intra_subnet_arns"`
	// A list of all intra subnets, containing the full objects.
	Intra_subnet_objects pulumi.StringPtrOutput `pulumi:"intra_subnet_objects"`
	// List of IDs of intra subnets
	Intra_subnets pulumi.StringArrayOutput `pulumi:"intra_subnets"`
	// List of cidr_blocks of intra subnets
	Intra_subnets_cidr_blocks pulumi.StringArrayOutput `pulumi:"intra_subnets_cidr_blocks"`
	// List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC
	Intra_subnets_ipv6_cidr_blocks pulumi.StringArrayOutput `pulumi:"intra_subnets_ipv6_cidr_blocks"`
	// The name of the VPC specified as argument to this module
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// List of allocation ID of Elastic IPs created for AWS NAT Gateway
	Nat_ids pulumi.StringArrayOutput `pulumi:"nat_ids"`
	// List of public Elastic IPs created for AWS NAT Gateway
	Nat_public_ips pulumi.StringPtrOutput `pulumi:"nat_public_ips"`
	// List of NAT Gateway IDs
	Natgw_ids pulumi.StringArrayOutput `pulumi:"natgw_ids"`
	// List of Network Interface IDs assigned to NAT Gateways
	Natgw_interface_ids pulumi.StringArrayOutput `pulumi:"natgw_interface_ids"`
	// ARN of the outpost network ACL
	Outpost_network_acl_arn pulumi.StringPtrOutput `pulumi:"outpost_network_acl_arn"`
	// ID of the outpost network ACL
	Outpost_network_acl_id pulumi.StringPtrOutput `pulumi:"outpost_network_acl_id"`
	// List of ARNs of outpost subnets
	Outpost_subnet_arns pulumi.StringArrayOutput `pulumi:"outpost_subnet_arns"`
	// A list of all outpost subnets, containing the full objects.
	Outpost_subnet_objects pulumi.StringPtrOutput `pulumi:"outpost_subnet_objects"`
	// List of IDs of outpost subnets
	Outpost_subnets pulumi.StringArrayOutput `pulumi:"outpost_subnets"`
	// List of cidr_blocks of outpost subnets
	Outpost_subnets_cidr_blocks pulumi.StringArrayOutput `pulumi:"outpost_subnets_cidr_blocks"`
	// List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC
	Outpost_subnets_ipv6_cidr_blocks pulumi.StringArrayOutput `pulumi:"outpost_subnets_ipv6_cidr_blocks"`
	// List of IDs of the ipv6 egress route
	Private_ipv6_egress_route_ids pulumi.StringArrayOutput `pulumi:"private_ipv6_egress_route_ids"`
	// List of IDs of the private nat gateway route
	Private_nat_gateway_route_ids pulumi.StringArrayOutput `pulumi:"private_nat_gateway_route_ids"`
	// ARN of the private network ACL
	Private_network_acl_arn pulumi.StringPtrOutput `pulumi:"private_network_acl_arn"`
	// ID of the private network ACL
	Private_network_acl_id pulumi.StringPtrOutput `pulumi:"private_network_acl_id"`
	// List of IDs of the private route table association
	Private_route_table_association_ids pulumi.StringArrayOutput `pulumi:"private_route_table_association_ids"`
	// List of IDs of private route tables
	Private_route_table_ids pulumi.StringPtrOutput `pulumi:"private_route_table_ids"`
	// List of ARNs of private subnets
	Private_subnet_arns pulumi.StringArrayOutput `pulumi:"private_subnet_arns"`
	// A list of all private subnets, containing the full objects.
	Private_subnet_objects pulumi.StringPtrOutput `pulumi:"private_subnet_objects"`
	// List of IDs of private subnets
	Private_subnets pulumi.StringArrayOutput `pulumi:"private_subnets"`
	// List of cidr_blocks of private subnets
	Private_subnets_cidr_blocks pulumi.StringArrayOutput `pulumi:"private_subnets_cidr_blocks"`
	// List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC
	Private_subnets_ipv6_cidr_blocks pulumi.StringArrayOutput `pulumi:"private_subnets_ipv6_cidr_blocks"`
	// ID of the IPv6 internet gateway route
	Public_internet_gateway_ipv6_route_id pulumi.StringPtrOutput `pulumi:"public_internet_gateway_ipv6_route_id"`
	// ID of the internet gateway route
	Public_internet_gateway_route_id pulumi.StringPtrOutput `pulumi:"public_internet_gateway_route_id"`
	// ARN of the public network ACL
	Public_network_acl_arn pulumi.StringPtrOutput `pulumi:"public_network_acl_arn"`
	// ID of the public network ACL
	Public_network_acl_id pulumi.StringPtrOutput `pulumi:"public_network_acl_id"`
	// List of IDs of the public route table association
	Public_route_table_association_ids pulumi.StringArrayOutput `pulumi:"public_route_table_association_ids"`
	// List of IDs of public route tables
	Public_route_table_ids pulumi.StringPtrOutput `pulumi:"public_route_table_ids"`
	// List of ARNs of public subnets
	Public_subnet_arns pulumi.StringArrayOutput `pulumi:"public_subnet_arns"`
	// A list of all public subnets, containing the full objects.
	Public_subnet_objects pulumi.StringPtrOutput `pulumi:"public_subnet_objects"`
	// List of IDs of public subnets
	Public_subnets pulumi.StringArrayOutput `pulumi:"public_subnets"`
	// List of cidr_blocks of public subnets
	Public_subnets_cidr_blocks pulumi.StringArrayOutput `pulumi:"public_subnets_cidr_blocks"`
	// List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC
	Public_subnets_ipv6_cidr_blocks pulumi.StringArrayOutput `pulumi:"public_subnets_ipv6_cidr_blocks"`
	// ARN of the redshift network ACL
	Redshift_network_acl_arn pulumi.StringPtrOutput `pulumi:"redshift_network_acl_arn"`
	// ID of the redshift network ACL
	Redshift_network_acl_id pulumi.StringPtrOutput `pulumi:"redshift_network_acl_id"`
	// List of IDs of the public redshift route table association
	Redshift_public_route_table_association_ids pulumi.StringArrayOutput `pulumi:"redshift_public_route_table_association_ids"`
	// List of IDs of the redshift route table association
	Redshift_route_table_association_ids pulumi.StringArrayOutput `pulumi:"redshift_route_table_association_ids"`
	// List of IDs of redshift route tables
	Redshift_route_table_ids pulumi.StringPtrOutput `pulumi:"redshift_route_table_ids"`
	// List of ARNs of redshift subnets
	Redshift_subnet_arns pulumi.StringArrayOutput `pulumi:"redshift_subnet_arns"`
	// ID of redshift subnet group
	Redshift_subnet_group pulumi.StringPtrOutput `pulumi:"redshift_subnet_group"`
	// A list of all redshift subnets, containing the full objects.
	Redshift_subnet_objects pulumi.StringPtrOutput `pulumi:"redshift_subnet_objects"`
	// List of IDs of redshift subnets
	Redshift_subnets pulumi.StringArrayOutput `pulumi:"redshift_subnets"`
	// List of cidr_blocks of redshift subnets
	Redshift_subnets_cidr_blocks pulumi.StringArrayOutput `pulumi:"redshift_subnets_cidr_blocks"`
	// List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC
	Redshift_subnets_ipv6_cidr_blocks pulumi.StringArrayOutput `pulumi:"redshift_subnets_ipv6_cidr_blocks"`
	// Map of Customer Gateway attributes
	This_customer_gateway pulumi.StringPtrOutput `pulumi:"this_customer_gateway"`
	// The ARN of the VPN Gateway
	Vgw_arn pulumi.StringPtrOutput `pulumi:"vgw_arn"`
	// The ID of the VPN Gateway
	Vgw_id pulumi.StringPtrOutput `pulumi:"vgw_id"`
	// The ARN of the VPC
	Vpc_arn pulumi.StringPtrOutput `pulumi:"vpc_arn"`
	// The CIDR block of the VPC
	Vpc_cidr_block pulumi.StringPtrOutput `pulumi:"vpc_cidr_block"`
	// Whether or not the VPC has DNS hostname support
	Vpc_enable_dns_hostnames pulumi.StringPtrOutput `pulumi:"vpc_enable_dns_hostnames"`
	// Whether or not the VPC has DNS support
	Vpc_enable_dns_support pulumi.StringPtrOutput `pulumi:"vpc_enable_dns_support"`
	// The ARN of the IAM role used when pushing logs to Cloudwatch log group
	Vpc_flow_log_cloudwatch_iam_role_arn pulumi.StringPtrOutput `pulumi:"vpc_flow_log_cloudwatch_iam_role_arn"`
	// The ARN of the IAM role used when pushing logs cross account
	Vpc_flow_log_deliver_cross_account_role pulumi.StringPtrOutput `pulumi:"vpc_flow_log_deliver_cross_account_role"`
	// The ARN of the destination for VPC Flow Logs
	Vpc_flow_log_destination_arn pulumi.StringPtrOutput `pulumi:"vpc_flow_log_destination_arn"`
	// The type of the destination for VPC Flow Logs
	Vpc_flow_log_destination_type pulumi.StringPtrOutput `pulumi:"vpc_flow_log_destination_type"`
	// The ID of the Flow Log resource
	Vpc_flow_log_id pulumi.StringPtrOutput `pulumi:"vpc_flow_log_id"`
	// The ID of the VPC
	Vpc_id pulumi.StringPtrOutput `pulumi:"vpc_id"`
	// Tenancy of instances spin up within VPC
	Vpc_instance_tenancy pulumi.StringPtrOutput `pulumi:"vpc_instance_tenancy"`
	// The association ID for the IPv6 CIDR block
	Vpc_ipv6_association_id pulumi.StringPtrOutput `pulumi:"vpc_ipv6_association_id"`
	// The IPv6 CIDR block
	Vpc_ipv6_cidr_block pulumi.StringPtrOutput `pulumi:"vpc_ipv6_cidr_block"`
	// The ID of the main route table associated with this VPC
	Vpc_main_route_table_id pulumi.StringPtrOutput `pulumi:"vpc_main_route_table_id"`
	// The ID of the AWS account that owns the VPC
	Vpc_owner_id pulumi.StringPtrOutput `pulumi:"vpc_owner_id"`
	// List of secondary CIDR blocks of the VPC
	Vpc_secondary_cidr_blocks pulumi.StringArrayOutput `pulumi:"vpc_secondary_cidr_blocks"`
}

// NewVpc registers a new resource with the given unique name, arguments, and options.
func NewVpc(ctx *pulumi.Context,
	name string, args *VpcArgs, opts ...pulumi.ResourceOption) (*Vpc, error) {
	if args == nil {
		args = &VpcArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource Vpc
	err = ctx.RegisterPackageRemoteComponentResource("terraform-aws-modules:index:Vpc", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type vpcArgs struct {
	// The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN
	Amazon_side_asn *string `pulumi:"amazon_side_asn"`
	// A list of availability zones names or ids in the region
	Azs []string `pulumi:"azs"`
	// (Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` & `ipv4_ipam_pool_id`
	Cidr *string `pulumi:"cidr"`
	// Controls if an internet gateway route for public database access should be created
	Create_database_internet_gateway_route *bool `pulumi:"create_database_internet_gateway_route"`
	// Controls if a nat gateway route should be created to give internet access to the database subnets
	Create_database_nat_gateway_route *bool `pulumi:"create_database_nat_gateway_route"`
	// Controls if database subnet group should be created (n.b. database_subnets must also be set)
	Create_database_subnet_group *bool `pulumi:"create_database_subnet_group"`
	// Controls if separate route table for database should be created
	Create_database_subnet_route_table *bool `pulumi:"create_database_subnet_route_table"`
	// Controls if an Egress Only Internet Gateway is created and its related routes
	Create_egress_only_igw *bool `pulumi:"create_egress_only_igw"`
	// Controls if elasticache subnet group should be created
	Create_elasticache_subnet_group *bool `pulumi:"create_elasticache_subnet_group"`
	// Controls if separate route table for elasticache should be created
	Create_elasticache_subnet_route_table *bool `pulumi:"create_elasticache_subnet_route_table"`
	// Whether to create IAM role for VPC Flow Logs
	Create_flow_log_cloudwatch_iam_role *bool `pulumi:"create_flow_log_cloudwatch_iam_role"`
	// Whether to create CloudWatch log group for VPC Flow Logs
	Create_flow_log_cloudwatch_log_group *bool `pulumi:"create_flow_log_cloudwatch_log_group"`
	// Controls if an Internet Gateway is created for public subnets and the related routes that connect them
	Create_igw *bool `pulumi:"create_igw"`
	// Indicates whether to create a separate route table for each intra subnet. Default: `false`
	Create_multiple_intra_route_tables *bool `pulumi:"create_multiple_intra_route_tables"`
	// Indicates whether to create a separate route table for each public subnet. Default: `false`
	Create_multiple_public_route_tables *bool `pulumi:"create_multiple_public_route_tables"`
	// Controls if a nat gateway route should be created to give internet access to the private subnets
	Create_private_nat_gateway_route *bool `pulumi:"create_private_nat_gateway_route"`
	// Controls if redshift subnet group should be created
	Create_redshift_subnet_group *bool `pulumi:"create_redshift_subnet_group"`
	// Controls if separate route table for redshift should be created
	Create_redshift_subnet_route_table *bool `pulumi:"create_redshift_subnet_route_table"`
	// Controls if VPC should be created (it affects almost all resources)
	Create_vpc *bool `pulumi:"create_vpc"`
	// Additional tags for the Customer Gateway
	Customer_gateway_tags map[string]string `pulumi:"customer_gateway_tags"`
	// Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)
	Customer_gateways map[string]map[string]string `pulumi:"customer_gateways"`
	// The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured
	Customer_owned_ipv4_pool *string `pulumi:"customer_owned_ipv4_pool"`
	// Additional tags for the database subnets network ACL
	Database_acl_tags map[string]string `pulumi:"database_acl_tags"`
	// Whether to use dedicated network ACL (not default) and custom rules for database subnets
	Database_dedicated_network_acl *bool `pulumi:"database_dedicated_network_acl"`
	// Database subnets inbound network ACL rules
	Database_inbound_acl_rules []map[string]string `pulumi:"database_inbound_acl_rules"`
	// Database subnets outbound network ACL rules
	Database_outbound_acl_rules []map[string]string `pulumi:"database_outbound_acl_rules"`
	// Additional tags for the database route tables
	Database_route_table_tags map[string]string `pulumi:"database_route_table_tags"`
	// Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
	Database_subnet_assign_ipv6_address_on_creation *bool `pulumi:"database_subnet_assign_ipv6_address_on_creation"`
	// Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
	Database_subnet_enable_dns64 *bool `pulumi:"database_subnet_enable_dns64"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
	Database_subnet_enable_resource_name_dns_a_record_on_launch *bool `pulumi:"database_subnet_enable_resource_name_dns_a_record_on_launch"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
	Database_subnet_enable_resource_name_dns_aaaa_record_on_launch *bool `pulumi:"database_subnet_enable_resource_name_dns_aaaa_record_on_launch"`
	// Name of database subnet group
	Database_subnet_group_name *string `pulumi:"database_subnet_group_name"`
	// Additional tags for the database subnet group
	Database_subnet_group_tags map[string]string `pulumi:"database_subnet_group_tags"`
	// Indicates whether to create an IPv6-only subnet. Default: `false`
	Database_subnet_ipv6_native *bool `pulumi:"database_subnet_ipv6_native"`
	// Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
	Database_subnet_ipv6_prefixes []string `pulumi:"database_subnet_ipv6_prefixes"`
	// Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated
	Database_subnet_names []string `pulumi:"database_subnet_names"`
	// The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
	Database_subnet_private_dns_hostname_type_on_launch *string `pulumi:"database_subnet_private_dns_hostname_type_on_launch"`
	// Suffix to append to database subnets name
	Database_subnet_suffix *string `pulumi:"database_subnet_suffix"`
	// Additional tags for the database subnets
	Database_subnet_tags map[string]string `pulumi:"database_subnet_tags"`
	// A list of database subnets inside the VPC
	Database_subnets []string `pulumi:"database_subnets"`
	// List of maps of egress rules to set on the Default Network ACL
	Default_network_acl_egress []map[string]string `pulumi:"default_network_acl_egress"`
	// List of maps of ingress rules to set on the Default Network ACL
	Default_network_acl_ingress []map[string]string `pulumi:"default_network_acl_ingress"`
	// Name to be used on the Default Network ACL
	Default_network_acl_name *string `pulumi:"default_network_acl_name"`
	// Additional tags for the Default Network ACL
	Default_network_acl_tags map[string]string `pulumi:"default_network_acl_tags"`
	// Name to be used on the default route table
	Default_route_table_name *string `pulumi:"default_route_table_name"`
	// List of virtual gateways for propagation
	Default_route_table_propagating_vgws []string `pulumi:"default_route_table_propagating_vgws"`
	// Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route
	Default_route_table_routes []map[string]string `pulumi:"default_route_table_routes"`
	// Additional tags for the default route table
	Default_route_table_tags map[string]string `pulumi:"default_route_table_tags"`
	// List of maps of egress rules to set on the default security group
	Default_security_group_egress []map[string]string `pulumi:"default_security_group_egress"`
	// List of maps of ingress rules to set on the default security group
	Default_security_group_ingress []map[string]string `pulumi:"default_security_group_ingress"`
	// Name to be used on the default security group
	Default_security_group_name *string `pulumi:"default_security_group_name"`
	// Additional tags for the default security group
	Default_security_group_tags map[string]string `pulumi:"default_security_group_tags"`
	// Should be true to enable DNS hostnames in the Default VPC
	Default_vpc_enable_dns_hostnames *bool `pulumi:"default_vpc_enable_dns_hostnames"`
	// Should be true to enable DNS support in the Default VPC
	Default_vpc_enable_dns_support *bool `pulumi:"default_vpc_enable_dns_support"`
	// Name to be used on the Default VPC
	Default_vpc_name *string `pulumi:"default_vpc_name"`
	// Additional tags for the Default VPC
	Default_vpc_tags map[string]string `pulumi:"default_vpc_tags"`
	// Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)
	Dhcp_options_domain_name *string `pulumi:"dhcp_options_domain_name"`
	// Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)
	Dhcp_options_domain_name_servers []string `pulumi:"dhcp_options_domain_name_servers"`
	// How frequently, in seconds, a running instance with an IPv6 assigned to it goes through DHCPv6 lease renewal (requires enable_dhcp_options set to true)
	Dhcp_options_ipv6_address_preferred_lease_time *float64 `pulumi:"dhcp_options_ipv6_address_preferred_lease_time"`
	// Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)
	Dhcp_options_netbios_name_servers []string `pulumi:"dhcp_options_netbios_name_servers"`
	// Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)
	Dhcp_options_netbios_node_type *string `pulumi:"dhcp_options_netbios_node_type"`
	// Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)
	Dhcp_options_ntp_servers []string `pulumi:"dhcp_options_ntp_servers"`
	// Additional tags for the DHCP option set (requires enable_dhcp_options set to true)
	Dhcp_options_tags map[string]string `pulumi:"dhcp_options_tags"`
	// Additional tags for the elasticache subnets network ACL
	Elasticache_acl_tags map[string]string `pulumi:"elasticache_acl_tags"`
	// Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets
	Elasticache_dedicated_network_acl *bool `pulumi:"elasticache_dedicated_network_acl"`
	// Elasticache subnets inbound network ACL rules
	Elasticache_inbound_acl_rules []map[string]string `pulumi:"elasticache_inbound_acl_rules"`
	// Elasticache subnets outbound network ACL rules
	Elasticache_outbound_acl_rules []map[string]string `pulumi:"elasticache_outbound_acl_rules"`
	// Additional tags for the elasticache route tables
	Elasticache_route_table_tags map[string]string `pulumi:"elasticache_route_table_tags"`
	// Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
	Elasticache_subnet_assign_ipv6_address_on_creation *bool `pulumi:"elasticache_subnet_assign_ipv6_address_on_creation"`
	// Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
	Elasticache_subnet_enable_dns64 *bool `pulumi:"elasticache_subnet_enable_dns64"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
	Elasticache_subnet_enable_resource_name_dns_a_record_on_launch *bool `pulumi:"elasticache_subnet_enable_resource_name_dns_a_record_on_launch"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
	Elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch *bool `pulumi:"elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch"`
	// Name of elasticache subnet group
	Elasticache_subnet_group_name *string `pulumi:"elasticache_subnet_group_name"`
	// Additional tags for the elasticache subnet group
	Elasticache_subnet_group_tags map[string]string `pulumi:"elasticache_subnet_group_tags"`
	// Indicates whether to create an IPv6-only subnet. Default: `false`
	Elasticache_subnet_ipv6_native *bool `pulumi:"elasticache_subnet_ipv6_native"`
	// Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
	Elasticache_subnet_ipv6_prefixes []string `pulumi:"elasticache_subnet_ipv6_prefixes"`
	// Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated
	Elasticache_subnet_names []string `pulumi:"elasticache_subnet_names"`
	// The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
	Elasticache_subnet_private_dns_hostname_type_on_launch *string `pulumi:"elasticache_subnet_private_dns_hostname_type_on_launch"`
	// Suffix to append to elasticache subnets name
	Elasticache_subnet_suffix *string `pulumi:"elasticache_subnet_suffix"`
	// Additional tags for the elasticache subnets
	Elasticache_subnet_tags map[string]string `pulumi:"elasticache_subnet_tags"`
	// A list of elasticache subnets inside the VPC
	Elasticache_subnets []string `pulumi:"elasticache_subnets"`
	// Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type
	Enable_dhcp_options *bool `pulumi:"enable_dhcp_options"`
	// Should be true to enable DNS hostnames in the VPC
	Enable_dns_hostnames *bool `pulumi:"enable_dns_hostnames"`
	// Should be true to enable DNS support in the VPC
	Enable_dns_support *bool `pulumi:"enable_dns_support"`
	// Whether or not to enable VPC Flow Logs
	Enable_flow_log *bool `pulumi:"enable_flow_log"`
	// Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block
	Enable_ipv6 *bool `pulumi:"enable_ipv6"`
	// Should be true if you want to provision NAT Gateways for each of your private networks
	Enable_nat_gateway *bool `pulumi:"enable_nat_gateway"`
	// Determines whether network address usage metrics are enabled for the VPC
	Enable_network_address_usage_metrics *bool `pulumi:"enable_network_address_usage_metrics"`
	// Controls if redshift should have public routing table
	Enable_public_redshift *bool `pulumi:"enable_public_redshift"`
	// Should be true if you want to create a new VPN Gateway resource and attach it to the VPC
	Enable_vpn_gateway *bool `pulumi:"enable_vpn_gateway"`
	// List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)
	External_nat_ip_ids []string `pulumi:"external_nat_ip_ids"`
	// List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)
	External_nat_ips []string `pulumi:"external_nat_ips"`
	// The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided
	Flow_log_cloudwatch_iam_role_arn *string `pulumi:"flow_log_cloudwatch_iam_role_arn"`
	// Additional conditions of the CloudWatch role assumption policy
	Flow_log_cloudwatch_iam_role_conditions []FlowLogCloudwatchIamRoleConditions `pulumi:"flow_log_cloudwatch_iam_role_conditions"`
	// Specified the log class of the log group. Possible values are: STANDARD or INFREQUENT_ACCESS
	Flow_log_cloudwatch_log_group_class *string `pulumi:"flow_log_cloudwatch_log_group_class"`
	// The ARN of the KMS Key to use when encrypting log data for VPC flow logs
	Flow_log_cloudwatch_log_group_kms_key_id *string `pulumi:"flow_log_cloudwatch_log_group_kms_key_id"`
	// Specifies the name prefix of CloudWatch Log Group for VPC flow logs
	Flow_log_cloudwatch_log_group_name_prefix *string `pulumi:"flow_log_cloudwatch_log_group_name_prefix"`
	// Specifies the name suffix of CloudWatch Log Group for VPC flow logs
	Flow_log_cloudwatch_log_group_name_suffix *string `pulumi:"flow_log_cloudwatch_log_group_name_suffix"`
	// Specifies the number of days you want to retain log events in the specified log group for VPC flow logs
	Flow_log_cloudwatch_log_group_retention_in_days *float64 `pulumi:"flow_log_cloudwatch_log_group_retention_in_days"`
	//  Set to true if you do not wish the log group (and any logs it may contain) to be deleted at destroy time, and instead just remove the log group from the Terraform state
	Flow_log_cloudwatch_log_group_skip_destroy *bool `pulumi:"flow_log_cloudwatch_log_group_skip_destroy"`
	// (Optional) ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
	Flow_log_deliver_cross_account_role *string `pulumi:"flow_log_deliver_cross_account_role"`
	// The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided
	Flow_log_destination_arn *string `pulumi:"flow_log_destination_arn"`
	// Type of flow log destination. Can be s3, kinesis-data-firehose or cloud-watch-logs
	Flow_log_destination_type *string `pulumi:"flow_log_destination_type"`
	// (Optional) The format for the flow log. Valid values: `plain-text`, `parquet`
	Flow_log_file_format *string `pulumi:"flow_log_file_format"`
	// (Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3
	Flow_log_hive_compatible_partitions *bool `pulumi:"flow_log_hive_compatible_partitions"`
	// The fields to include in the flow log record, in the order in which they should appear
	Flow_log_log_format *string `pulumi:"flow_log_log_format"`
	// The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds
	Flow_log_max_aggregation_interval *float64 `pulumi:"flow_log_max_aggregation_interval"`
	// (Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries
	Flow_log_per_hour_partition *bool `pulumi:"flow_log_per_hour_partition"`
	// The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL
	Flow_log_traffic_type *string `pulumi:"flow_log_traffic_type"`
	// Additional tags for the internet gateway
	Igw_tags map[string]string `pulumi:"igw_tags"`
	// A tenancy option for instances launched into the VPC
	Instance_tenancy *string `pulumi:"instance_tenancy"`
	// Additional tags for the intra subnets network ACL
	Intra_acl_tags map[string]string `pulumi:"intra_acl_tags"`
	// Whether to use dedicated network ACL (not default) and custom rules for intra subnets
	Intra_dedicated_network_acl *bool `pulumi:"intra_dedicated_network_acl"`
	// Intra subnets inbound network ACLs
	Intra_inbound_acl_rules []map[string]string `pulumi:"intra_inbound_acl_rules"`
	// Intra subnets outbound network ACLs
	Intra_outbound_acl_rules []map[string]string `pulumi:"intra_outbound_acl_rules"`
	// Additional tags for the intra route tables
	Intra_route_table_tags map[string]string `pulumi:"intra_route_table_tags"`
	// Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
	Intra_subnet_assign_ipv6_address_on_creation *bool `pulumi:"intra_subnet_assign_ipv6_address_on_creation"`
	// Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
	Intra_subnet_enable_dns64 *bool `pulumi:"intra_subnet_enable_dns64"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
	Intra_subnet_enable_resource_name_dns_a_record_on_launch *bool `pulumi:"intra_subnet_enable_resource_name_dns_a_record_on_launch"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
	Intra_subnet_enable_resource_name_dns_aaaa_record_on_launch *bool `pulumi:"intra_subnet_enable_resource_name_dns_aaaa_record_on_launch"`
	// Indicates whether to create an IPv6-only subnet. Default: `false`
	Intra_subnet_ipv6_native *bool `pulumi:"intra_subnet_ipv6_native"`
	// Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
	Intra_subnet_ipv6_prefixes []string `pulumi:"intra_subnet_ipv6_prefixes"`
	// Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated
	Intra_subnet_names []string `pulumi:"intra_subnet_names"`
	// The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
	Intra_subnet_private_dns_hostname_type_on_launch *string `pulumi:"intra_subnet_private_dns_hostname_type_on_launch"`
	// Suffix to append to intra subnets name
	Intra_subnet_suffix *string `pulumi:"intra_subnet_suffix"`
	// Additional tags for the intra subnets
	Intra_subnet_tags map[string]string `pulumi:"intra_subnet_tags"`
	// A list of intra subnets inside the VPC
	Intra_subnets []string `pulumi:"intra_subnets"`
	// (Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR
	Ipv4_ipam_pool_id *string `pulumi:"ipv4_ipam_pool_id"`
	// (Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id
	Ipv4_netmask_length *float64 `pulumi:"ipv4_netmask_length"`
	// (Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`
	Ipv6_cidr *string `pulumi:"ipv6_cidr"`
	// By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones
	Ipv6_cidr_block_network_border_group *string `pulumi:"ipv6_cidr_block_network_border_group"`
	// (Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`
	Ipv6_ipam_pool_id *string `pulumi:"ipv6_ipam_pool_id"`
	// (Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`
	Ipv6_netmask_length *float64 `pulumi:"ipv6_netmask_length"`
	// Should be true to adopt and manage Default Network ACL
	Manage_default_network_acl *bool `pulumi:"manage_default_network_acl"`
	// Should be true to manage default route table
	Manage_default_route_table *bool `pulumi:"manage_default_route_table"`
	// Should be true to adopt and manage default security group
	Manage_default_security_group *bool `pulumi:"manage_default_security_group"`
	// Should be true to adopt and manage Default VPC
	Manage_default_vpc *bool `pulumi:"manage_default_vpc"`
	// Specify true to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`
	Map_customer_owned_ip_on_launch *bool `pulumi:"map_customer_owned_ip_on_launch"`
	// Specify true to indicate that instances launched into the subnet should be assigned a public IP address. Default is `false`
	Map_public_ip_on_launch *bool `pulumi:"map_public_ip_on_launch"`
	// Name to be used on all the resources as identifier
	Name *string `pulumi:"name"`
	// Additional tags for the NAT EIP
	Nat_eip_tags map[string]string `pulumi:"nat_eip_tags"`
	// Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route
	Nat_gateway_destination_cidr_block *string `pulumi:"nat_gateway_destination_cidr_block"`
	// Additional tags for the NAT gateways
	Nat_gateway_tags map[string]string `pulumi:"nat_gateway_tags"`
	// Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`
	One_nat_gateway_per_az *bool `pulumi:"one_nat_gateway_per_az"`
	// Additional tags for the outpost subnets network ACL
	Outpost_acl_tags map[string]string `pulumi:"outpost_acl_tags"`
	// ARN of Outpost you want to create a subnet in
	Outpost_arn *string `pulumi:"outpost_arn"`
	// AZ where Outpost is anchored
	Outpost_az *string `pulumi:"outpost_az"`
	// Whether to use dedicated network ACL (not default) and custom rules for outpost subnets
	Outpost_dedicated_network_acl *bool `pulumi:"outpost_dedicated_network_acl"`
	// Outpost subnets inbound network ACLs
	Outpost_inbound_acl_rules []map[string]string `pulumi:"outpost_inbound_acl_rules"`
	// Outpost subnets outbound network ACLs
	Outpost_outbound_acl_rules []map[string]string `pulumi:"outpost_outbound_acl_rules"`
	// Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
	Outpost_subnet_assign_ipv6_address_on_creation *bool `pulumi:"outpost_subnet_assign_ipv6_address_on_creation"`
	// Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
	Outpost_subnet_enable_dns64 *bool `pulumi:"outpost_subnet_enable_dns64"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
	Outpost_subnet_enable_resource_name_dns_a_record_on_launch *bool `pulumi:"outpost_subnet_enable_resource_name_dns_a_record_on_launch"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
	Outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch *bool `pulumi:"outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch"`
	// Indicates whether to create an IPv6-only subnet. Default: `false`
	Outpost_subnet_ipv6_native *bool `pulumi:"outpost_subnet_ipv6_native"`
	// Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
	Outpost_subnet_ipv6_prefixes []string `pulumi:"outpost_subnet_ipv6_prefixes"`
	// Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated
	Outpost_subnet_names []string `pulumi:"outpost_subnet_names"`
	// The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
	Outpost_subnet_private_dns_hostname_type_on_launch *string `pulumi:"outpost_subnet_private_dns_hostname_type_on_launch"`
	// Suffix to append to outpost subnets name
	Outpost_subnet_suffix *string `pulumi:"outpost_subnet_suffix"`
	// Additional tags for the outpost subnets
	Outpost_subnet_tags map[string]string `pulumi:"outpost_subnet_tags"`
	// A list of outpost subnets inside the VPC
	Outpost_subnets []string `pulumi:"outpost_subnets"`
	// Additional tags for the private subnets network ACL
	Private_acl_tags map[string]string `pulumi:"private_acl_tags"`
	// Whether to use dedicated network ACL (not default) and custom rules for private subnets
	Private_dedicated_network_acl *bool `pulumi:"private_dedicated_network_acl"`
	// Private subnets inbound network ACLs
	Private_inbound_acl_rules []map[string]string `pulumi:"private_inbound_acl_rules"`
	// Private subnets outbound network ACLs
	Private_outbound_acl_rules []map[string]string `pulumi:"private_outbound_acl_rules"`
	// Additional tags for the private route tables
	Private_route_table_tags map[string]string `pulumi:"private_route_table_tags"`
	// Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
	Private_subnet_assign_ipv6_address_on_creation *bool `pulumi:"private_subnet_assign_ipv6_address_on_creation"`
	// Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
	Private_subnet_enable_dns64 *bool `pulumi:"private_subnet_enable_dns64"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
	Private_subnet_enable_resource_name_dns_a_record_on_launch *bool `pulumi:"private_subnet_enable_resource_name_dns_a_record_on_launch"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
	Private_subnet_enable_resource_name_dns_aaaa_record_on_launch *bool `pulumi:"private_subnet_enable_resource_name_dns_aaaa_record_on_launch"`
	// Indicates whether to create an IPv6-only subnet. Default: `false`
	Private_subnet_ipv6_native *bool `pulumi:"private_subnet_ipv6_native"`
	// Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
	Private_subnet_ipv6_prefixes []string `pulumi:"private_subnet_ipv6_prefixes"`
	// Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated
	Private_subnet_names []string `pulumi:"private_subnet_names"`
	// The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
	Private_subnet_private_dns_hostname_type_on_launch *string `pulumi:"private_subnet_private_dns_hostname_type_on_launch"`
	// Suffix to append to private subnets name
	Private_subnet_suffix *string `pulumi:"private_subnet_suffix"`
	// Additional tags for the private subnets
	Private_subnet_tags map[string]string `pulumi:"private_subnet_tags"`
	// Additional tags for the private subnets where the primary key is the AZ
	Private_subnet_tags_per_az map[string]map[string]string `pulumi:"private_subnet_tags_per_az"`
	// A list of private subnets inside the VPC
	Private_subnets []string `pulumi:"private_subnets"`
	// Should be true if you want route table propagation
	Propagate_intra_route_tables_vgw *bool `pulumi:"propagate_intra_route_tables_vgw"`
	// Should be true if you want route table propagation
	Propagate_private_route_tables_vgw *bool `pulumi:"propagate_private_route_tables_vgw"`
	// Should be true if you want route table propagation
	Propagate_public_route_tables_vgw *bool `pulumi:"propagate_public_route_tables_vgw"`
	// Additional tags for the public subnets network ACL
	Public_acl_tags map[string]string `pulumi:"public_acl_tags"`
	// Whether to use dedicated network ACL (not default) and custom rules for public subnets
	Public_dedicated_network_acl *bool `pulumi:"public_dedicated_network_acl"`
	// Public subnets inbound network ACLs
	Public_inbound_acl_rules []map[string]string `pulumi:"public_inbound_acl_rules"`
	// Public subnets outbound network ACLs
	Public_outbound_acl_rules []map[string]string `pulumi:"public_outbound_acl_rules"`
	// Additional tags for the public route tables
	Public_route_table_tags map[string]string `pulumi:"public_route_table_tags"`
	// Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
	Public_subnet_assign_ipv6_address_on_creation *bool `pulumi:"public_subnet_assign_ipv6_address_on_creation"`
	// Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
	Public_subnet_enable_dns64 *bool `pulumi:"public_subnet_enable_dns64"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
	Public_subnet_enable_resource_name_dns_a_record_on_launch *bool `pulumi:"public_subnet_enable_resource_name_dns_a_record_on_launch"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
	Public_subnet_enable_resource_name_dns_aaaa_record_on_launch *bool `pulumi:"public_subnet_enable_resource_name_dns_aaaa_record_on_launch"`
	// Indicates whether to create an IPv6-only subnet. Default: `false`
	Public_subnet_ipv6_native *bool `pulumi:"public_subnet_ipv6_native"`
	// Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
	Public_subnet_ipv6_prefixes []string `pulumi:"public_subnet_ipv6_prefixes"`
	// Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated
	Public_subnet_names []string `pulumi:"public_subnet_names"`
	// The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
	Public_subnet_private_dns_hostname_type_on_launch *string `pulumi:"public_subnet_private_dns_hostname_type_on_launch"`
	// Suffix to append to public subnets name
	Public_subnet_suffix *string `pulumi:"public_subnet_suffix"`
	// Additional tags for the public subnets
	Public_subnet_tags map[string]string `pulumi:"public_subnet_tags"`
	// Additional tags for the public subnets where the primary key is the AZ
	Public_subnet_tags_per_az map[string]map[string]string `pulumi:"public_subnet_tags_per_az"`
	// A list of public subnets inside the VPC
	Public_subnets []string `pulumi:"public_subnets"`
	// Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!
	Putin_khuylo *bool `pulumi:"putin_khuylo"`
	// Additional tags for the redshift subnets network ACL
	Redshift_acl_tags map[string]string `pulumi:"redshift_acl_tags"`
	// Whether to use dedicated network ACL (not default) and custom rules for redshift subnets
	Redshift_dedicated_network_acl *bool `pulumi:"redshift_dedicated_network_acl"`
	// Redshift subnets inbound network ACL rules
	Redshift_inbound_acl_rules []map[string]string `pulumi:"redshift_inbound_acl_rules"`
	// Redshift subnets outbound network ACL rules
	Redshift_outbound_acl_rules []map[string]string `pulumi:"redshift_outbound_acl_rules"`
	// Additional tags for the redshift route tables
	Redshift_route_table_tags map[string]string `pulumi:"redshift_route_table_tags"`
	// Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
	Redshift_subnet_assign_ipv6_address_on_creation *bool `pulumi:"redshift_subnet_assign_ipv6_address_on_creation"`
	// Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
	Redshift_subnet_enable_dns64 *bool `pulumi:"redshift_subnet_enable_dns64"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
	Redshift_subnet_enable_resource_name_dns_a_record_on_launch *bool `pulumi:"redshift_subnet_enable_resource_name_dns_a_record_on_launch"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
	Redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch *bool `pulumi:"redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch"`
	// Name of redshift subnet group
	Redshift_subnet_group_name *string `pulumi:"redshift_subnet_group_name"`
	// Additional tags for the redshift subnet group
	Redshift_subnet_group_tags map[string]string `pulumi:"redshift_subnet_group_tags"`
	// Indicates whether to create an IPv6-only subnet. Default: `false`
	Redshift_subnet_ipv6_native *bool `pulumi:"redshift_subnet_ipv6_native"`
	// Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
	Redshift_subnet_ipv6_prefixes []string `pulumi:"redshift_subnet_ipv6_prefixes"`
	// Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated
	Redshift_subnet_names []string `pulumi:"redshift_subnet_names"`
	// The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
	Redshift_subnet_private_dns_hostname_type_on_launch *string `pulumi:"redshift_subnet_private_dns_hostname_type_on_launch"`
	// Suffix to append to redshift subnets name
	Redshift_subnet_suffix *string `pulumi:"redshift_subnet_suffix"`
	// Additional tags for the redshift subnets
	Redshift_subnet_tags map[string]string `pulumi:"redshift_subnet_tags"`
	// A list of redshift subnets inside the VPC
	Redshift_subnets []string `pulumi:"redshift_subnets"`
	// Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable
	Reuse_nat_ips *bool `pulumi:"reuse_nat_ips"`
	// List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool
	Secondary_cidr_blocks []string `pulumi:"secondary_cidr_blocks"`
	// Should be true if you want to provision a single shared NAT Gateway across all of your private networks
	Single_nat_gateway *bool `pulumi:"single_nat_gateway"`
	// A map of tags to add to all resources
	Tags map[string]string `pulumi:"tags"`
	// Determines whether IPAM pool is used for CIDR allocation
	Use_ipam_pool *bool `pulumi:"use_ipam_pool"`
	// Name of the IAM policy
	Vpc_flow_log_iam_policy_name *string `pulumi:"vpc_flow_log_iam_policy_name"`
	// Determines whether the name of the IAM policy (`vpc_flow_log_iam_policy_name`) is used as a prefix
	Vpc_flow_log_iam_policy_use_name_prefix *bool `pulumi:"vpc_flow_log_iam_policy_use_name_prefix"`
	// Name to use on the VPC Flow Log IAM role created
	Vpc_flow_log_iam_role_name *string `pulumi:"vpc_flow_log_iam_role_name"`
	// Determines whether the IAM role name (`vpc_flow_log_iam_role_name_name`) is used as a prefix
	Vpc_flow_log_iam_role_use_name_prefix *bool `pulumi:"vpc_flow_log_iam_role_use_name_prefix"`
	// The ARN of the Permissions Boundary for the VPC Flow Log IAM Role
	Vpc_flow_log_permissions_boundary *string `pulumi:"vpc_flow_log_permissions_boundary"`
	// Additional tags for the VPC Flow Logs
	Vpc_flow_log_tags map[string]string `pulumi:"vpc_flow_log_tags"`
	// Additional tags for the VPC
	Vpc_tags map[string]string `pulumi:"vpc_tags"`
	// The Availability Zone for the VPN Gateway
	Vpn_gateway_az *string `pulumi:"vpn_gateway_az"`
	// ID of VPN Gateway to attach to the VPC
	Vpn_gateway_id *string `pulumi:"vpn_gateway_id"`
	// Additional tags for the VPN gateway
	Vpn_gateway_tags map[string]string `pulumi:"vpn_gateway_tags"`
}

// The set of arguments for constructing a Vpc resource.
type VpcArgs struct {
	// The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN
	Amazon_side_asn pulumi.StringPtrInput
	// A list of availability zones names or ids in the region
	Azs pulumi.StringArrayInput
	// (Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` & `ipv4_ipam_pool_id`
	Cidr pulumi.StringPtrInput
	// Controls if an internet gateway route for public database access should be created
	Create_database_internet_gateway_route pulumi.BoolPtrInput
	// Controls if a nat gateway route should be created to give internet access to the database subnets
	Create_database_nat_gateway_route pulumi.BoolPtrInput
	// Controls if database subnet group should be created (n.b. database_subnets must also be set)
	Create_database_subnet_group pulumi.BoolPtrInput
	// Controls if separate route table for database should be created
	Create_database_subnet_route_table pulumi.BoolPtrInput
	// Controls if an Egress Only Internet Gateway is created and its related routes
	Create_egress_only_igw pulumi.BoolPtrInput
	// Controls if elasticache subnet group should be created
	Create_elasticache_subnet_group pulumi.BoolPtrInput
	// Controls if separate route table for elasticache should be created
	Create_elasticache_subnet_route_table pulumi.BoolPtrInput
	// Whether to create IAM role for VPC Flow Logs
	Create_flow_log_cloudwatch_iam_role pulumi.BoolPtrInput
	// Whether to create CloudWatch log group for VPC Flow Logs
	Create_flow_log_cloudwatch_log_group pulumi.BoolPtrInput
	// Controls if an Internet Gateway is created for public subnets and the related routes that connect them
	Create_igw pulumi.BoolPtrInput
	// Indicates whether to create a separate route table for each intra subnet. Default: `false`
	Create_multiple_intra_route_tables pulumi.BoolPtrInput
	// Indicates whether to create a separate route table for each public subnet. Default: `false`
	Create_multiple_public_route_tables pulumi.BoolPtrInput
	// Controls if a nat gateway route should be created to give internet access to the private subnets
	Create_private_nat_gateway_route pulumi.BoolPtrInput
	// Controls if redshift subnet group should be created
	Create_redshift_subnet_group pulumi.BoolPtrInput
	// Controls if separate route table for redshift should be created
	Create_redshift_subnet_route_table pulumi.BoolPtrInput
	// Controls if VPC should be created (it affects almost all resources)
	Create_vpc pulumi.BoolPtrInput
	// Additional tags for the Customer Gateway
	Customer_gateway_tags pulumi.StringMapInput
	// Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)
	Customer_gateways pulumi.StringMapMapInput
	// The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured
	Customer_owned_ipv4_pool pulumi.StringPtrInput
	// Additional tags for the database subnets network ACL
	Database_acl_tags pulumi.StringMapInput
	// Whether to use dedicated network ACL (not default) and custom rules for database subnets
	Database_dedicated_network_acl pulumi.BoolPtrInput
	// Database subnets inbound network ACL rules
	Database_inbound_acl_rules pulumi.StringMapArrayInput
	// Database subnets outbound network ACL rules
	Database_outbound_acl_rules pulumi.StringMapArrayInput
	// Additional tags for the database route tables
	Database_route_table_tags pulumi.StringMapInput
	// Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
	Database_subnet_assign_ipv6_address_on_creation pulumi.BoolPtrInput
	// Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
	Database_subnet_enable_dns64 pulumi.BoolPtrInput
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
	Database_subnet_enable_resource_name_dns_a_record_on_launch pulumi.BoolPtrInput
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
	Database_subnet_enable_resource_name_dns_aaaa_record_on_launch pulumi.BoolPtrInput
	// Name of database subnet group
	Database_subnet_group_name pulumi.StringPtrInput
	// Additional tags for the database subnet group
	Database_subnet_group_tags pulumi.StringMapInput
	// Indicates whether to create an IPv6-only subnet. Default: `false`
	Database_subnet_ipv6_native pulumi.BoolPtrInput
	// Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
	Database_subnet_ipv6_prefixes pulumi.StringArrayInput
	// Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated
	Database_subnet_names pulumi.StringArrayInput
	// The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
	Database_subnet_private_dns_hostname_type_on_launch pulumi.StringPtrInput
	// Suffix to append to database subnets name
	Database_subnet_suffix pulumi.StringPtrInput
	// Additional tags for the database subnets
	Database_subnet_tags pulumi.StringMapInput
	// A list of database subnets inside the VPC
	Database_subnets pulumi.StringArrayInput
	// List of maps of egress rules to set on the Default Network ACL
	Default_network_acl_egress pulumi.StringMapArrayInput
	// List of maps of ingress rules to set on the Default Network ACL
	Default_network_acl_ingress pulumi.StringMapArrayInput
	// Name to be used on the Default Network ACL
	Default_network_acl_name pulumi.StringPtrInput
	// Additional tags for the Default Network ACL
	Default_network_acl_tags pulumi.StringMapInput
	// Name to be used on the default route table
	Default_route_table_name pulumi.StringPtrInput
	// List of virtual gateways for propagation
	Default_route_table_propagating_vgws pulumi.StringArrayInput
	// Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route
	Default_route_table_routes pulumi.StringMapArrayInput
	// Additional tags for the default route table
	Default_route_table_tags pulumi.StringMapInput
	// List of maps of egress rules to set on the default security group
	Default_security_group_egress pulumi.StringMapArrayInput
	// List of maps of ingress rules to set on the default security group
	Default_security_group_ingress pulumi.StringMapArrayInput
	// Name to be used on the default security group
	Default_security_group_name pulumi.StringPtrInput
	// Additional tags for the default security group
	Default_security_group_tags pulumi.StringMapInput
	// Should be true to enable DNS hostnames in the Default VPC
	Default_vpc_enable_dns_hostnames pulumi.BoolPtrInput
	// Should be true to enable DNS support in the Default VPC
	Default_vpc_enable_dns_support pulumi.BoolPtrInput
	// Name to be used on the Default VPC
	Default_vpc_name pulumi.StringPtrInput
	// Additional tags for the Default VPC
	Default_vpc_tags pulumi.StringMapInput
	// Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)
	Dhcp_options_domain_name pulumi.StringPtrInput
	// Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)
	Dhcp_options_domain_name_servers pulumi.StringArrayInput
	// How frequently, in seconds, a running instance with an IPv6 assigned to it goes through DHCPv6 lease renewal (requires enable_dhcp_options set to true)
	Dhcp_options_ipv6_address_preferred_lease_time pulumi.Float64PtrInput
	// Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)
	Dhcp_options_netbios_name_servers pulumi.StringArrayInput
	// Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)
	Dhcp_options_netbios_node_type pulumi.StringPtrInput
	// Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)
	Dhcp_options_ntp_servers pulumi.StringArrayInput
	// Additional tags for the DHCP option set (requires enable_dhcp_options set to true)
	Dhcp_options_tags pulumi.StringMapInput
	// Additional tags for the elasticache subnets network ACL
	Elasticache_acl_tags pulumi.StringMapInput
	// Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets
	Elasticache_dedicated_network_acl pulumi.BoolPtrInput
	// Elasticache subnets inbound network ACL rules
	Elasticache_inbound_acl_rules pulumi.StringMapArrayInput
	// Elasticache subnets outbound network ACL rules
	Elasticache_outbound_acl_rules pulumi.StringMapArrayInput
	// Additional tags for the elasticache route tables
	Elasticache_route_table_tags pulumi.StringMapInput
	// Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
	Elasticache_subnet_assign_ipv6_address_on_creation pulumi.BoolPtrInput
	// Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
	Elasticache_subnet_enable_dns64 pulumi.BoolPtrInput
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
	Elasticache_subnet_enable_resource_name_dns_a_record_on_launch pulumi.BoolPtrInput
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
	Elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch pulumi.BoolPtrInput
	// Name of elasticache subnet group
	Elasticache_subnet_group_name pulumi.StringPtrInput
	// Additional tags for the elasticache subnet group
	Elasticache_subnet_group_tags pulumi.StringMapInput
	// Indicates whether to create an IPv6-only subnet. Default: `false`
	Elasticache_subnet_ipv6_native pulumi.BoolPtrInput
	// Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
	Elasticache_subnet_ipv6_prefixes pulumi.StringArrayInput
	// Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated
	Elasticache_subnet_names pulumi.StringArrayInput
	// The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
	Elasticache_subnet_private_dns_hostname_type_on_launch pulumi.StringPtrInput
	// Suffix to append to elasticache subnets name
	Elasticache_subnet_suffix pulumi.StringPtrInput
	// Additional tags for the elasticache subnets
	Elasticache_subnet_tags pulumi.StringMapInput
	// A list of elasticache subnets inside the VPC
	Elasticache_subnets pulumi.StringArrayInput
	// Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type
	Enable_dhcp_options pulumi.BoolPtrInput
	// Should be true to enable DNS hostnames in the VPC
	Enable_dns_hostnames pulumi.BoolPtrInput
	// Should be true to enable DNS support in the VPC
	Enable_dns_support pulumi.BoolPtrInput
	// Whether or not to enable VPC Flow Logs
	Enable_flow_log pulumi.BoolPtrInput
	// Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block
	Enable_ipv6 pulumi.BoolPtrInput
	// Should be true if you want to provision NAT Gateways for each of your private networks
	Enable_nat_gateway pulumi.BoolPtrInput
	// Determines whether network address usage metrics are enabled for the VPC
	Enable_network_address_usage_metrics pulumi.BoolPtrInput
	// Controls if redshift should have public routing table
	Enable_public_redshift pulumi.BoolPtrInput
	// Should be true if you want to create a new VPN Gateway resource and attach it to the VPC
	Enable_vpn_gateway pulumi.BoolPtrInput
	// List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)
	External_nat_ip_ids pulumi.StringArrayInput
	// List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)
	External_nat_ips pulumi.StringArrayInput
	// The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided
	Flow_log_cloudwatch_iam_role_arn pulumi.StringPtrInput
	// Additional conditions of the CloudWatch role assumption policy
	Flow_log_cloudwatch_iam_role_conditions FlowLogCloudwatchIamRoleConditionsArrayInput
	// Specified the log class of the log group. Possible values are: STANDARD or INFREQUENT_ACCESS
	Flow_log_cloudwatch_log_group_class pulumi.StringPtrInput
	// The ARN of the KMS Key to use when encrypting log data for VPC flow logs
	Flow_log_cloudwatch_log_group_kms_key_id pulumi.StringPtrInput
	// Specifies the name prefix of CloudWatch Log Group for VPC flow logs
	Flow_log_cloudwatch_log_group_name_prefix pulumi.StringPtrInput
	// Specifies the name suffix of CloudWatch Log Group for VPC flow logs
	Flow_log_cloudwatch_log_group_name_suffix pulumi.StringPtrInput
	// Specifies the number of days you want to retain log events in the specified log group for VPC flow logs
	Flow_log_cloudwatch_log_group_retention_in_days pulumi.Float64PtrInput
	//  Set to true if you do not wish the log group (and any logs it may contain) to be deleted at destroy time, and instead just remove the log group from the Terraform state
	Flow_log_cloudwatch_log_group_skip_destroy pulumi.BoolPtrInput
	// (Optional) ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
	Flow_log_deliver_cross_account_role pulumi.StringPtrInput
	// The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided
	Flow_log_destination_arn pulumi.StringPtrInput
	// Type of flow log destination. Can be s3, kinesis-data-firehose or cloud-watch-logs
	Flow_log_destination_type pulumi.StringPtrInput
	// (Optional) The format for the flow log. Valid values: `plain-text`, `parquet`
	Flow_log_file_format pulumi.StringPtrInput
	// (Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3
	Flow_log_hive_compatible_partitions pulumi.BoolPtrInput
	// The fields to include in the flow log record, in the order in which they should appear
	Flow_log_log_format pulumi.StringPtrInput
	// The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds
	Flow_log_max_aggregation_interval pulumi.Float64PtrInput
	// (Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries
	Flow_log_per_hour_partition pulumi.BoolPtrInput
	// The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL
	Flow_log_traffic_type pulumi.StringPtrInput
	// Additional tags for the internet gateway
	Igw_tags pulumi.StringMapInput
	// A tenancy option for instances launched into the VPC
	Instance_tenancy pulumi.StringPtrInput
	// Additional tags for the intra subnets network ACL
	Intra_acl_tags pulumi.StringMapInput
	// Whether to use dedicated network ACL (not default) and custom rules for intra subnets
	Intra_dedicated_network_acl pulumi.BoolPtrInput
	// Intra subnets inbound network ACLs
	Intra_inbound_acl_rules pulumi.StringMapArrayInput
	// Intra subnets outbound network ACLs
	Intra_outbound_acl_rules pulumi.StringMapArrayInput
	// Additional tags for the intra route tables
	Intra_route_table_tags pulumi.StringMapInput
	// Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
	Intra_subnet_assign_ipv6_address_on_creation pulumi.BoolPtrInput
	// Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
	Intra_subnet_enable_dns64 pulumi.BoolPtrInput
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
	Intra_subnet_enable_resource_name_dns_a_record_on_launch pulumi.BoolPtrInput
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
	Intra_subnet_enable_resource_name_dns_aaaa_record_on_launch pulumi.BoolPtrInput
	// Indicates whether to create an IPv6-only subnet. Default: `false`
	Intra_subnet_ipv6_native pulumi.BoolPtrInput
	// Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
	Intra_subnet_ipv6_prefixes pulumi.StringArrayInput
	// Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated
	Intra_subnet_names pulumi.StringArrayInput
	// The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
	Intra_subnet_private_dns_hostname_type_on_launch pulumi.StringPtrInput
	// Suffix to append to intra subnets name
	Intra_subnet_suffix pulumi.StringPtrInput
	// Additional tags for the intra subnets
	Intra_subnet_tags pulumi.StringMapInput
	// A list of intra subnets inside the VPC
	Intra_subnets pulumi.StringArrayInput
	// (Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR
	Ipv4_ipam_pool_id pulumi.StringPtrInput
	// (Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id
	Ipv4_netmask_length pulumi.Float64PtrInput
	// (Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`
	Ipv6_cidr pulumi.StringPtrInput
	// By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones
	Ipv6_cidr_block_network_border_group pulumi.StringPtrInput
	// (Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`
	Ipv6_ipam_pool_id pulumi.StringPtrInput
	// (Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`
	Ipv6_netmask_length pulumi.Float64PtrInput
	// Should be true to adopt and manage Default Network ACL
	Manage_default_network_acl pulumi.BoolPtrInput
	// Should be true to manage default route table
	Manage_default_route_table pulumi.BoolPtrInput
	// Should be true to adopt and manage default security group
	Manage_default_security_group pulumi.BoolPtrInput
	// Should be true to adopt and manage Default VPC
	Manage_default_vpc pulumi.BoolPtrInput
	// Specify true to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`
	Map_customer_owned_ip_on_launch pulumi.BoolPtrInput
	// Specify true to indicate that instances launched into the subnet should be assigned a public IP address. Default is `false`
	Map_public_ip_on_launch pulumi.BoolPtrInput
	// Name to be used on all the resources as identifier
	Name pulumi.StringPtrInput
	// Additional tags for the NAT EIP
	Nat_eip_tags pulumi.StringMapInput
	// Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route
	Nat_gateway_destination_cidr_block pulumi.StringPtrInput
	// Additional tags for the NAT gateways
	Nat_gateway_tags pulumi.StringMapInput
	// Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`
	One_nat_gateway_per_az pulumi.BoolPtrInput
	// Additional tags for the outpost subnets network ACL
	Outpost_acl_tags pulumi.StringMapInput
	// ARN of Outpost you want to create a subnet in
	Outpost_arn pulumi.StringPtrInput
	// AZ where Outpost is anchored
	Outpost_az pulumi.StringPtrInput
	// Whether to use dedicated network ACL (not default) and custom rules for outpost subnets
	Outpost_dedicated_network_acl pulumi.BoolPtrInput
	// Outpost subnets inbound network ACLs
	Outpost_inbound_acl_rules pulumi.StringMapArrayInput
	// Outpost subnets outbound network ACLs
	Outpost_outbound_acl_rules pulumi.StringMapArrayInput
	// Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
	Outpost_subnet_assign_ipv6_address_on_creation pulumi.BoolPtrInput
	// Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
	Outpost_subnet_enable_dns64 pulumi.BoolPtrInput
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
	Outpost_subnet_enable_resource_name_dns_a_record_on_launch pulumi.BoolPtrInput
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
	Outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch pulumi.BoolPtrInput
	// Indicates whether to create an IPv6-only subnet. Default: `false`
	Outpost_subnet_ipv6_native pulumi.BoolPtrInput
	// Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
	Outpost_subnet_ipv6_prefixes pulumi.StringArrayInput
	// Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated
	Outpost_subnet_names pulumi.StringArrayInput
	// The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
	Outpost_subnet_private_dns_hostname_type_on_launch pulumi.StringPtrInput
	// Suffix to append to outpost subnets name
	Outpost_subnet_suffix pulumi.StringPtrInput
	// Additional tags for the outpost subnets
	Outpost_subnet_tags pulumi.StringMapInput
	// A list of outpost subnets inside the VPC
	Outpost_subnets pulumi.StringArrayInput
	// Additional tags for the private subnets network ACL
	Private_acl_tags pulumi.StringMapInput
	// Whether to use dedicated network ACL (not default) and custom rules for private subnets
	Private_dedicated_network_acl pulumi.BoolPtrInput
	// Private subnets inbound network ACLs
	Private_inbound_acl_rules pulumi.StringMapArrayInput
	// Private subnets outbound network ACLs
	Private_outbound_acl_rules pulumi.StringMapArrayInput
	// Additional tags for the private route tables
	Private_route_table_tags pulumi.StringMapInput
	// Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
	Private_subnet_assign_ipv6_address_on_creation pulumi.BoolPtrInput
	// Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
	Private_subnet_enable_dns64 pulumi.BoolPtrInput
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
	Private_subnet_enable_resource_name_dns_a_record_on_launch pulumi.BoolPtrInput
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
	Private_subnet_enable_resource_name_dns_aaaa_record_on_launch pulumi.BoolPtrInput
	// Indicates whether to create an IPv6-only subnet. Default: `false`
	Private_subnet_ipv6_native pulumi.BoolPtrInput
	// Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
	Private_subnet_ipv6_prefixes pulumi.StringArrayInput
	// Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated
	Private_subnet_names pulumi.StringArrayInput
	// The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
	Private_subnet_private_dns_hostname_type_on_launch pulumi.StringPtrInput
	// Suffix to append to private subnets name
	Private_subnet_suffix pulumi.StringPtrInput
	// Additional tags for the private subnets
	Private_subnet_tags pulumi.StringMapInput
	// Additional tags for the private subnets where the primary key is the AZ
	Private_subnet_tags_per_az pulumi.StringMapMapInput
	// A list of private subnets inside the VPC
	Private_subnets pulumi.StringArrayInput
	// Should be true if you want route table propagation
	Propagate_intra_route_tables_vgw pulumi.BoolPtrInput
	// Should be true if you want route table propagation
	Propagate_private_route_tables_vgw pulumi.BoolPtrInput
	// Should be true if you want route table propagation
	Propagate_public_route_tables_vgw pulumi.BoolPtrInput
	// Additional tags for the public subnets network ACL
	Public_acl_tags pulumi.StringMapInput
	// Whether to use dedicated network ACL (not default) and custom rules for public subnets
	Public_dedicated_network_acl pulumi.BoolPtrInput
	// Public subnets inbound network ACLs
	Public_inbound_acl_rules pulumi.StringMapArrayInput
	// Public subnets outbound network ACLs
	Public_outbound_acl_rules pulumi.StringMapArrayInput
	// Additional tags for the public route tables
	Public_route_table_tags pulumi.StringMapInput
	// Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
	Public_subnet_assign_ipv6_address_on_creation pulumi.BoolPtrInput
	// Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
	Public_subnet_enable_dns64 pulumi.BoolPtrInput
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
	Public_subnet_enable_resource_name_dns_a_record_on_launch pulumi.BoolPtrInput
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
	Public_subnet_enable_resource_name_dns_aaaa_record_on_launch pulumi.BoolPtrInput
	// Indicates whether to create an IPv6-only subnet. Default: `false`
	Public_subnet_ipv6_native pulumi.BoolPtrInput
	// Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
	Public_subnet_ipv6_prefixes pulumi.StringArrayInput
	// Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated
	Public_subnet_names pulumi.StringArrayInput
	// The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
	Public_subnet_private_dns_hostname_type_on_launch pulumi.StringPtrInput
	// Suffix to append to public subnets name
	Public_subnet_suffix pulumi.StringPtrInput
	// Additional tags for the public subnets
	Public_subnet_tags pulumi.StringMapInput
	// Additional tags for the public subnets where the primary key is the AZ
	Public_subnet_tags_per_az pulumi.StringMapMapInput
	// A list of public subnets inside the VPC
	Public_subnets pulumi.StringArrayInput
	// Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!
	Putin_khuylo pulumi.BoolPtrInput
	// Additional tags for the redshift subnets network ACL
	Redshift_acl_tags pulumi.StringMapInput
	// Whether to use dedicated network ACL (not default) and custom rules for redshift subnets
	Redshift_dedicated_network_acl pulumi.BoolPtrInput
	// Redshift subnets inbound network ACL rules
	Redshift_inbound_acl_rules pulumi.StringMapArrayInput
	// Redshift subnets outbound network ACL rules
	Redshift_outbound_acl_rules pulumi.StringMapArrayInput
	// Additional tags for the redshift route tables
	Redshift_route_table_tags pulumi.StringMapInput
	// Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`
	Redshift_subnet_assign_ipv6_address_on_creation pulumi.BoolPtrInput
	// Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`
	Redshift_subnet_enable_dns64 pulumi.BoolPtrInput
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`
	Redshift_subnet_enable_resource_name_dns_a_record_on_launch pulumi.BoolPtrInput
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`
	Redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch pulumi.BoolPtrInput
	// Name of redshift subnet group
	Redshift_subnet_group_name pulumi.StringPtrInput
	// Additional tags for the redshift subnet group
	Redshift_subnet_group_tags pulumi.StringMapInput
	// Indicates whether to create an IPv6-only subnet. Default: `false`
	Redshift_subnet_ipv6_native pulumi.BoolPtrInput
	// Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list
	Redshift_subnet_ipv6_prefixes pulumi.StringArrayInput
	// Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated
	Redshift_subnet_names pulumi.StringArrayInput
	// The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`
	Redshift_subnet_private_dns_hostname_type_on_launch pulumi.StringPtrInput
	// Suffix to append to redshift subnets name
	Redshift_subnet_suffix pulumi.StringPtrInput
	// Additional tags for the redshift subnets
	Redshift_subnet_tags pulumi.StringMapInput
	// A list of redshift subnets inside the VPC
	Redshift_subnets pulumi.StringArrayInput
	// Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable
	Reuse_nat_ips pulumi.BoolPtrInput
	// List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool
	Secondary_cidr_blocks pulumi.StringArrayInput
	// Should be true if you want to provision a single shared NAT Gateway across all of your private networks
	Single_nat_gateway pulumi.BoolPtrInput
	// A map of tags to add to all resources
	Tags pulumi.StringMapInput
	// Determines whether IPAM pool is used for CIDR allocation
	Use_ipam_pool pulumi.BoolPtrInput
	// Name of the IAM policy
	Vpc_flow_log_iam_policy_name pulumi.StringPtrInput
	// Determines whether the name of the IAM policy (`vpc_flow_log_iam_policy_name`) is used as a prefix
	Vpc_flow_log_iam_policy_use_name_prefix pulumi.BoolPtrInput
	// Name to use on the VPC Flow Log IAM role created
	Vpc_flow_log_iam_role_name pulumi.StringPtrInput
	// Determines whether the IAM role name (`vpc_flow_log_iam_role_name_name`) is used as a prefix
	Vpc_flow_log_iam_role_use_name_prefix pulumi.BoolPtrInput
	// The ARN of the Permissions Boundary for the VPC Flow Log IAM Role
	Vpc_flow_log_permissions_boundary pulumi.StringPtrInput
	// Additional tags for the VPC Flow Logs
	Vpc_flow_log_tags pulumi.StringMapInput
	// Additional tags for the VPC
	Vpc_tags pulumi.StringMapInput
	// The Availability Zone for the VPN Gateway
	Vpn_gateway_az pulumi.StringPtrInput
	// ID of VPN Gateway to attach to the VPC
	Vpn_gateway_id pulumi.StringPtrInput
	// Additional tags for the VPN gateway
	Vpn_gateway_tags pulumi.StringMapInput
}

func (VpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcArgs)(nil)).Elem()
}

type VpcInput interface {
	pulumi.Input

	ToVpcOutput() VpcOutput
	ToVpcOutputWithContext(ctx context.Context) VpcOutput
}

func (*Vpc) ElementType() reflect.Type {
	return reflect.TypeOf((**Vpc)(nil)).Elem()
}

func (i *Vpc) ToVpcOutput() VpcOutput {
	return i.ToVpcOutputWithContext(context.Background())
}

func (i *Vpc) ToVpcOutputWithContext(ctx context.Context) VpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcOutput)
}

type VpcOutput struct{ *pulumi.OutputState }

func (VpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Vpc)(nil)).Elem()
}

func (o VpcOutput) ToVpcOutput() VpcOutput {
	return o
}

func (o VpcOutput) ToVpcOutputWithContext(ctx context.Context) VpcOutput {
	return o
}

// A list of availability zones specified as argument to this module
func (o VpcOutput) Azs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Azs }).(pulumi.StringArrayOutput)
}

// List of ARNs of Customer Gateway
func (o VpcOutput) Cgw_arns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Cgw_arns }).(pulumi.StringArrayOutput)
}

// List of IDs of Customer Gateway
func (o VpcOutput) Cgw_ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Cgw_ids }).(pulumi.StringArrayOutput)
}

// ID of the database internet gateway route
func (o VpcOutput) Database_internet_gateway_route_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Database_internet_gateway_route_id }).(pulumi.StringPtrOutput)
}

// ID of the database IPv6 egress route
func (o VpcOutput) Database_ipv6_egress_route_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Database_ipv6_egress_route_id }).(pulumi.StringPtrOutput)
}

// List of IDs of the database nat gateway route
func (o VpcOutput) Database_nat_gateway_route_ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Database_nat_gateway_route_ids }).(pulumi.StringArrayOutput)
}

// ARN of the database network ACL
func (o VpcOutput) Database_network_acl_arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Database_network_acl_arn }).(pulumi.StringPtrOutput)
}

// ID of the database network ACL
func (o VpcOutput) Database_network_acl_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Database_network_acl_id }).(pulumi.StringPtrOutput)
}

// List of IDs of the database route table association
func (o VpcOutput) Database_route_table_association_ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Database_route_table_association_ids }).(pulumi.StringArrayOutput)
}

// List of IDs of database route tables
func (o VpcOutput) Database_route_table_ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Database_route_table_ids }).(pulumi.StringArrayOutput)
}

// List of ARNs of database subnets
func (o VpcOutput) Database_subnet_arns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Database_subnet_arns }).(pulumi.StringArrayOutput)
}

// ID of database subnet group
func (o VpcOutput) Database_subnet_group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Database_subnet_group }).(pulumi.StringPtrOutput)
}

// Name of database subnet group
func (o VpcOutput) Database_subnet_group_name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Database_subnet_group_name }).(pulumi.StringPtrOutput)
}

// A list of all database subnets, containing the full objects.
func (o VpcOutput) Database_subnet_objects() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Database_subnet_objects }).(pulumi.StringPtrOutput)
}

// List of IDs of database subnets
func (o VpcOutput) Database_subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Database_subnets }).(pulumi.StringArrayOutput)
}

// List of cidr_blocks of database subnets
func (o VpcOutput) Database_subnets_cidr_blocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Database_subnets_cidr_blocks }).(pulumi.StringArrayOutput)
}

// List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC
func (o VpcOutput) Database_subnets_ipv6_cidr_blocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Database_subnets_ipv6_cidr_blocks }).(pulumi.StringArrayOutput)
}

// The ID of the default network ACL
func (o VpcOutput) Default_network_acl_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Default_network_acl_id }).(pulumi.StringPtrOutput)
}

// The ID of the default route table
func (o VpcOutput) Default_route_table_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Default_route_table_id }).(pulumi.StringPtrOutput)
}

// The ID of the security group created by default on VPC creation
func (o VpcOutput) Default_security_group_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Default_security_group_id }).(pulumi.StringPtrOutput)
}

// The ARN of the Default VPC
func (o VpcOutput) Default_vpc_arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Default_vpc_arn }).(pulumi.StringPtrOutput)
}

// The CIDR block of the Default VPC
func (o VpcOutput) Default_vpc_cidr_block() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Default_vpc_cidr_block }).(pulumi.StringPtrOutput)
}

// The ID of the default network ACL of the Default VPC
func (o VpcOutput) Default_vpc_default_network_acl_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Default_vpc_default_network_acl_id }).(pulumi.StringPtrOutput)
}

// The ID of the default route table of the Default VPC
func (o VpcOutput) Default_vpc_default_route_table_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Default_vpc_default_route_table_id }).(pulumi.StringPtrOutput)
}

// The ID of the security group created by default on Default VPC creation
func (o VpcOutput) Default_vpc_default_security_group_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Default_vpc_default_security_group_id }).(pulumi.StringPtrOutput)
}

// Whether or not the Default VPC has DNS hostname support
func (o VpcOutput) Default_vpc_enable_dns_hostnames() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Default_vpc_enable_dns_hostnames }).(pulumi.StringPtrOutput)
}

// Whether or not the Default VPC has DNS support
func (o VpcOutput) Default_vpc_enable_dns_support() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Default_vpc_enable_dns_support }).(pulumi.StringPtrOutput)
}

// The ID of the Default VPC
func (o VpcOutput) Default_vpc_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Default_vpc_id }).(pulumi.StringPtrOutput)
}

// Tenancy of instances spin up within Default VPC
func (o VpcOutput) Default_vpc_instance_tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Default_vpc_instance_tenancy }).(pulumi.StringPtrOutput)
}

// The ID of the main route table associated with the Default VPC
func (o VpcOutput) Default_vpc_main_route_table_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Default_vpc_main_route_table_id }).(pulumi.StringPtrOutput)
}

// The ID of the DHCP options
func (o VpcOutput) Dhcp_options_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Dhcp_options_id }).(pulumi.StringPtrOutput)
}

// The ID of the egress only Internet Gateway
func (o VpcOutput) Egress_only_internet_gateway_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Egress_only_internet_gateway_id }).(pulumi.StringPtrOutput)
}

// ARN of the elasticache network ACL
func (o VpcOutput) Elasticache_network_acl_arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Elasticache_network_acl_arn }).(pulumi.StringPtrOutput)
}

// ID of the elasticache network ACL
func (o VpcOutput) Elasticache_network_acl_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Elasticache_network_acl_id }).(pulumi.StringPtrOutput)
}

// List of IDs of the elasticache route table association
func (o VpcOutput) Elasticache_route_table_association_ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Elasticache_route_table_association_ids }).(pulumi.StringArrayOutput)
}

// List of IDs of elasticache route tables
func (o VpcOutput) Elasticache_route_table_ids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Elasticache_route_table_ids }).(pulumi.StringPtrOutput)
}

// List of ARNs of elasticache subnets
func (o VpcOutput) Elasticache_subnet_arns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Elasticache_subnet_arns }).(pulumi.StringArrayOutput)
}

// ID of elasticache subnet group
func (o VpcOutput) Elasticache_subnet_group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Elasticache_subnet_group }).(pulumi.StringPtrOutput)
}

// Name of elasticache subnet group
func (o VpcOutput) Elasticache_subnet_group_name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Elasticache_subnet_group_name }).(pulumi.StringPtrOutput)
}

// A list of all elasticache subnets, containing the full objects.
func (o VpcOutput) Elasticache_subnet_objects() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Elasticache_subnet_objects }).(pulumi.StringPtrOutput)
}

// List of IDs of elasticache subnets
func (o VpcOutput) Elasticache_subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Elasticache_subnets }).(pulumi.StringArrayOutput)
}

// List of cidr_blocks of elasticache subnets
func (o VpcOutput) Elasticache_subnets_cidr_blocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Elasticache_subnets_cidr_blocks }).(pulumi.StringArrayOutput)
}

// List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC
func (o VpcOutput) Elasticache_subnets_ipv6_cidr_blocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Elasticache_subnets_ipv6_cidr_blocks }).(pulumi.StringArrayOutput)
}

// The ARN of the Internet Gateway
func (o VpcOutput) Igw_arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Igw_arn }).(pulumi.StringPtrOutput)
}

// The ID of the Internet Gateway
func (o VpcOutput) Igw_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Igw_id }).(pulumi.StringPtrOutput)
}

// ARN of the intra network ACL
func (o VpcOutput) Intra_network_acl_arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Intra_network_acl_arn }).(pulumi.StringPtrOutput)
}

// ID of the intra network ACL
func (o VpcOutput) Intra_network_acl_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Intra_network_acl_id }).(pulumi.StringPtrOutput)
}

// List of IDs of the intra route table association
func (o VpcOutput) Intra_route_table_association_ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Intra_route_table_association_ids }).(pulumi.StringArrayOutput)
}

// List of IDs of intra route tables
func (o VpcOutput) Intra_route_table_ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Intra_route_table_ids }).(pulumi.StringArrayOutput)
}

// List of ARNs of intra subnets
func (o VpcOutput) Intra_subnet_arns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Intra_subnet_arns }).(pulumi.StringArrayOutput)
}

// A list of all intra subnets, containing the full objects.
func (o VpcOutput) Intra_subnet_objects() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Intra_subnet_objects }).(pulumi.StringPtrOutput)
}

// List of IDs of intra subnets
func (o VpcOutput) Intra_subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Intra_subnets }).(pulumi.StringArrayOutput)
}

// List of cidr_blocks of intra subnets
func (o VpcOutput) Intra_subnets_cidr_blocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Intra_subnets_cidr_blocks }).(pulumi.StringArrayOutput)
}

// List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC
func (o VpcOutput) Intra_subnets_ipv6_cidr_blocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Intra_subnets_ipv6_cidr_blocks }).(pulumi.StringArrayOutput)
}

// The name of the VPC specified as argument to this module
func (o VpcOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// List of allocation ID of Elastic IPs created for AWS NAT Gateway
func (o VpcOutput) Nat_ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Nat_ids }).(pulumi.StringArrayOutput)
}

// List of public Elastic IPs created for AWS NAT Gateway
func (o VpcOutput) Nat_public_ips() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Nat_public_ips }).(pulumi.StringPtrOutput)
}

// List of NAT Gateway IDs
func (o VpcOutput) Natgw_ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Natgw_ids }).(pulumi.StringArrayOutput)
}

// List of Network Interface IDs assigned to NAT Gateways
func (o VpcOutput) Natgw_interface_ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Natgw_interface_ids }).(pulumi.StringArrayOutput)
}

// ARN of the outpost network ACL
func (o VpcOutput) Outpost_network_acl_arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Outpost_network_acl_arn }).(pulumi.StringPtrOutput)
}

// ID of the outpost network ACL
func (o VpcOutput) Outpost_network_acl_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Outpost_network_acl_id }).(pulumi.StringPtrOutput)
}

// List of ARNs of outpost subnets
func (o VpcOutput) Outpost_subnet_arns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Outpost_subnet_arns }).(pulumi.StringArrayOutput)
}

// A list of all outpost subnets, containing the full objects.
func (o VpcOutput) Outpost_subnet_objects() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Outpost_subnet_objects }).(pulumi.StringPtrOutput)
}

// List of IDs of outpost subnets
func (o VpcOutput) Outpost_subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Outpost_subnets }).(pulumi.StringArrayOutput)
}

// List of cidr_blocks of outpost subnets
func (o VpcOutput) Outpost_subnets_cidr_blocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Outpost_subnets_cidr_blocks }).(pulumi.StringArrayOutput)
}

// List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC
func (o VpcOutput) Outpost_subnets_ipv6_cidr_blocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Outpost_subnets_ipv6_cidr_blocks }).(pulumi.StringArrayOutput)
}

// List of IDs of the ipv6 egress route
func (o VpcOutput) Private_ipv6_egress_route_ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Private_ipv6_egress_route_ids }).(pulumi.StringArrayOutput)
}

// List of IDs of the private nat gateway route
func (o VpcOutput) Private_nat_gateway_route_ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Private_nat_gateway_route_ids }).(pulumi.StringArrayOutput)
}

// ARN of the private network ACL
func (o VpcOutput) Private_network_acl_arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Private_network_acl_arn }).(pulumi.StringPtrOutput)
}

// ID of the private network ACL
func (o VpcOutput) Private_network_acl_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Private_network_acl_id }).(pulumi.StringPtrOutput)
}

// List of IDs of the private route table association
func (o VpcOutput) Private_route_table_association_ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Private_route_table_association_ids }).(pulumi.StringArrayOutput)
}

// List of IDs of private route tables
func (o VpcOutput) Private_route_table_ids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Private_route_table_ids }).(pulumi.StringPtrOutput)
}

// List of ARNs of private subnets
func (o VpcOutput) Private_subnet_arns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Private_subnet_arns }).(pulumi.StringArrayOutput)
}

// A list of all private subnets, containing the full objects.
func (o VpcOutput) Private_subnet_objects() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Private_subnet_objects }).(pulumi.StringPtrOutput)
}

// List of IDs of private subnets
func (o VpcOutput) Private_subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Private_subnets }).(pulumi.StringArrayOutput)
}

// List of cidr_blocks of private subnets
func (o VpcOutput) Private_subnets_cidr_blocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Private_subnets_cidr_blocks }).(pulumi.StringArrayOutput)
}

// List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC
func (o VpcOutput) Private_subnets_ipv6_cidr_blocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Private_subnets_ipv6_cidr_blocks }).(pulumi.StringArrayOutput)
}

// ID of the IPv6 internet gateway route
func (o VpcOutput) Public_internet_gateway_ipv6_route_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Public_internet_gateway_ipv6_route_id }).(pulumi.StringPtrOutput)
}

// ID of the internet gateway route
func (o VpcOutput) Public_internet_gateway_route_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Public_internet_gateway_route_id }).(pulumi.StringPtrOutput)
}

// ARN of the public network ACL
func (o VpcOutput) Public_network_acl_arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Public_network_acl_arn }).(pulumi.StringPtrOutput)
}

// ID of the public network ACL
func (o VpcOutput) Public_network_acl_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Public_network_acl_id }).(pulumi.StringPtrOutput)
}

// List of IDs of the public route table association
func (o VpcOutput) Public_route_table_association_ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Public_route_table_association_ids }).(pulumi.StringArrayOutput)
}

// List of IDs of public route tables
func (o VpcOutput) Public_route_table_ids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Public_route_table_ids }).(pulumi.StringPtrOutput)
}

// List of ARNs of public subnets
func (o VpcOutput) Public_subnet_arns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Public_subnet_arns }).(pulumi.StringArrayOutput)
}

// A list of all public subnets, containing the full objects.
func (o VpcOutput) Public_subnet_objects() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Public_subnet_objects }).(pulumi.StringPtrOutput)
}

// List of IDs of public subnets
func (o VpcOutput) Public_subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Public_subnets }).(pulumi.StringArrayOutput)
}

// List of cidr_blocks of public subnets
func (o VpcOutput) Public_subnets_cidr_blocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Public_subnets_cidr_blocks }).(pulumi.StringArrayOutput)
}

// List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC
func (o VpcOutput) Public_subnets_ipv6_cidr_blocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Public_subnets_ipv6_cidr_blocks }).(pulumi.StringArrayOutput)
}

// ARN of the redshift network ACL
func (o VpcOutput) Redshift_network_acl_arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Redshift_network_acl_arn }).(pulumi.StringPtrOutput)
}

// ID of the redshift network ACL
func (o VpcOutput) Redshift_network_acl_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Redshift_network_acl_id }).(pulumi.StringPtrOutput)
}

// List of IDs of the public redshift route table association
func (o VpcOutput) Redshift_public_route_table_association_ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Redshift_public_route_table_association_ids }).(pulumi.StringArrayOutput)
}

// List of IDs of the redshift route table association
func (o VpcOutput) Redshift_route_table_association_ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Redshift_route_table_association_ids }).(pulumi.StringArrayOutput)
}

// List of IDs of redshift route tables
func (o VpcOutput) Redshift_route_table_ids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Redshift_route_table_ids }).(pulumi.StringPtrOutput)
}

// List of ARNs of redshift subnets
func (o VpcOutput) Redshift_subnet_arns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Redshift_subnet_arns }).(pulumi.StringArrayOutput)
}

// ID of redshift subnet group
func (o VpcOutput) Redshift_subnet_group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Redshift_subnet_group }).(pulumi.StringPtrOutput)
}

// A list of all redshift subnets, containing the full objects.
func (o VpcOutput) Redshift_subnet_objects() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Redshift_subnet_objects }).(pulumi.StringPtrOutput)
}

// List of IDs of redshift subnets
func (o VpcOutput) Redshift_subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Redshift_subnets }).(pulumi.StringArrayOutput)
}

// List of cidr_blocks of redshift subnets
func (o VpcOutput) Redshift_subnets_cidr_blocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Redshift_subnets_cidr_blocks }).(pulumi.StringArrayOutput)
}

// List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC
func (o VpcOutput) Redshift_subnets_ipv6_cidr_blocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Redshift_subnets_ipv6_cidr_blocks }).(pulumi.StringArrayOutput)
}

// Map of Customer Gateway attributes
func (o VpcOutput) This_customer_gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.This_customer_gateway }).(pulumi.StringPtrOutput)
}

// The ARN of the VPN Gateway
func (o VpcOutput) Vgw_arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Vgw_arn }).(pulumi.StringPtrOutput)
}

// The ID of the VPN Gateway
func (o VpcOutput) Vgw_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Vgw_id }).(pulumi.StringPtrOutput)
}

// The ARN of the VPC
func (o VpcOutput) Vpc_arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Vpc_arn }).(pulumi.StringPtrOutput)
}

// The CIDR block of the VPC
func (o VpcOutput) Vpc_cidr_block() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Vpc_cidr_block }).(pulumi.StringPtrOutput)
}

// Whether or not the VPC has DNS hostname support
func (o VpcOutput) Vpc_enable_dns_hostnames() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Vpc_enable_dns_hostnames }).(pulumi.StringPtrOutput)
}

// Whether or not the VPC has DNS support
func (o VpcOutput) Vpc_enable_dns_support() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Vpc_enable_dns_support }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role used when pushing logs to Cloudwatch log group
func (o VpcOutput) Vpc_flow_log_cloudwatch_iam_role_arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Vpc_flow_log_cloudwatch_iam_role_arn }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role used when pushing logs cross account
func (o VpcOutput) Vpc_flow_log_deliver_cross_account_role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Vpc_flow_log_deliver_cross_account_role }).(pulumi.StringPtrOutput)
}

// The ARN of the destination for VPC Flow Logs
func (o VpcOutput) Vpc_flow_log_destination_arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Vpc_flow_log_destination_arn }).(pulumi.StringPtrOutput)
}

// The type of the destination for VPC Flow Logs
func (o VpcOutput) Vpc_flow_log_destination_type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Vpc_flow_log_destination_type }).(pulumi.StringPtrOutput)
}

// The ID of the Flow Log resource
func (o VpcOutput) Vpc_flow_log_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Vpc_flow_log_id }).(pulumi.StringPtrOutput)
}

// The ID of the VPC
func (o VpcOutput) Vpc_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Vpc_id }).(pulumi.StringPtrOutput)
}

// Tenancy of instances spin up within VPC
func (o VpcOutput) Vpc_instance_tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Vpc_instance_tenancy }).(pulumi.StringPtrOutput)
}

// The association ID for the IPv6 CIDR block
func (o VpcOutput) Vpc_ipv6_association_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Vpc_ipv6_association_id }).(pulumi.StringPtrOutput)
}

// The IPv6 CIDR block
func (o VpcOutput) Vpc_ipv6_cidr_block() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Vpc_ipv6_cidr_block }).(pulumi.StringPtrOutput)
}

// The ID of the main route table associated with this VPC
func (o VpcOutput) Vpc_main_route_table_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Vpc_main_route_table_id }).(pulumi.StringPtrOutput)
}

// The ID of the AWS account that owns the VPC
func (o VpcOutput) Vpc_owner_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringPtrOutput { return v.Vpc_owner_id }).(pulumi.StringPtrOutput)
}

// List of secondary CIDR blocks of the VPC
func (o VpcOutput) Vpc_secondary_cidr_blocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Vpc) pulumi.StringArrayOutput { return v.Vpc_secondary_cidr_blocks }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcInput)(nil)).Elem(), &Vpc{})
	pulumi.RegisterOutputType(VpcOutput{})
}
