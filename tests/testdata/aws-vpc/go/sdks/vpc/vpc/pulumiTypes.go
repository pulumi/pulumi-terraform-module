// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-module/sdks/vpc/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type FlowLogCloudwatchIamRoleConditions struct {
	Test     *string  `pulumi:"test"`
	Values   []string `pulumi:"values"`
	Variable *string  `pulumi:"variable"`
}

// FlowLogCloudwatchIamRoleConditionsInput is an input type that accepts FlowLogCloudwatchIamRoleConditionsArgs and FlowLogCloudwatchIamRoleConditionsOutput values.
// You can construct a concrete instance of `FlowLogCloudwatchIamRoleConditionsInput` via:
//
//	FlowLogCloudwatchIamRoleConditionsArgs{...}
type FlowLogCloudwatchIamRoleConditionsInput interface {
	pulumi.Input

	ToFlowLogCloudwatchIamRoleConditionsOutput() FlowLogCloudwatchIamRoleConditionsOutput
	ToFlowLogCloudwatchIamRoleConditionsOutputWithContext(context.Context) FlowLogCloudwatchIamRoleConditionsOutput
}

type FlowLogCloudwatchIamRoleConditionsArgs struct {
	Test     pulumi.StringPtrInput   `pulumi:"test"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
	Variable pulumi.StringPtrInput   `pulumi:"variable"`
}

func (FlowLogCloudwatchIamRoleConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogCloudwatchIamRoleConditions)(nil)).Elem()
}

func (i FlowLogCloudwatchIamRoleConditionsArgs) ToFlowLogCloudwatchIamRoleConditionsOutput() FlowLogCloudwatchIamRoleConditionsOutput {
	return i.ToFlowLogCloudwatchIamRoleConditionsOutputWithContext(context.Background())
}

func (i FlowLogCloudwatchIamRoleConditionsArgs) ToFlowLogCloudwatchIamRoleConditionsOutputWithContext(ctx context.Context) FlowLogCloudwatchIamRoleConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogCloudwatchIamRoleConditionsOutput)
}

// FlowLogCloudwatchIamRoleConditionsArrayInput is an input type that accepts FlowLogCloudwatchIamRoleConditionsArray and FlowLogCloudwatchIamRoleConditionsArrayOutput values.
// You can construct a concrete instance of `FlowLogCloudwatchIamRoleConditionsArrayInput` via:
//
//	FlowLogCloudwatchIamRoleConditionsArray{ FlowLogCloudwatchIamRoleConditionsArgs{...} }
type FlowLogCloudwatchIamRoleConditionsArrayInput interface {
	pulumi.Input

	ToFlowLogCloudwatchIamRoleConditionsArrayOutput() FlowLogCloudwatchIamRoleConditionsArrayOutput
	ToFlowLogCloudwatchIamRoleConditionsArrayOutputWithContext(context.Context) FlowLogCloudwatchIamRoleConditionsArrayOutput
}

type FlowLogCloudwatchIamRoleConditionsArray []FlowLogCloudwatchIamRoleConditionsInput

func (FlowLogCloudwatchIamRoleConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowLogCloudwatchIamRoleConditions)(nil)).Elem()
}

func (i FlowLogCloudwatchIamRoleConditionsArray) ToFlowLogCloudwatchIamRoleConditionsArrayOutput() FlowLogCloudwatchIamRoleConditionsArrayOutput {
	return i.ToFlowLogCloudwatchIamRoleConditionsArrayOutputWithContext(context.Background())
}

func (i FlowLogCloudwatchIamRoleConditionsArray) ToFlowLogCloudwatchIamRoleConditionsArrayOutputWithContext(ctx context.Context) FlowLogCloudwatchIamRoleConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogCloudwatchIamRoleConditionsArrayOutput)
}

type FlowLogCloudwatchIamRoleConditionsOutput struct{ *pulumi.OutputState }

func (FlowLogCloudwatchIamRoleConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogCloudwatchIamRoleConditions)(nil)).Elem()
}

func (o FlowLogCloudwatchIamRoleConditionsOutput) ToFlowLogCloudwatchIamRoleConditionsOutput() FlowLogCloudwatchIamRoleConditionsOutput {
	return o
}

func (o FlowLogCloudwatchIamRoleConditionsOutput) ToFlowLogCloudwatchIamRoleConditionsOutputWithContext(ctx context.Context) FlowLogCloudwatchIamRoleConditionsOutput {
	return o
}

func (o FlowLogCloudwatchIamRoleConditionsOutput) Test() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowLogCloudwatchIamRoleConditions) *string { return v.Test }).(pulumi.StringPtrOutput)
}

func (o FlowLogCloudwatchIamRoleConditionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FlowLogCloudwatchIamRoleConditions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

func (o FlowLogCloudwatchIamRoleConditionsOutput) Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowLogCloudwatchIamRoleConditions) *string { return v.Variable }).(pulumi.StringPtrOutput)
}

type FlowLogCloudwatchIamRoleConditionsArrayOutput struct{ *pulumi.OutputState }

func (FlowLogCloudwatchIamRoleConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowLogCloudwatchIamRoleConditions)(nil)).Elem()
}

func (o FlowLogCloudwatchIamRoleConditionsArrayOutput) ToFlowLogCloudwatchIamRoleConditionsArrayOutput() FlowLogCloudwatchIamRoleConditionsArrayOutput {
	return o
}

func (o FlowLogCloudwatchIamRoleConditionsArrayOutput) ToFlowLogCloudwatchIamRoleConditionsArrayOutputWithContext(ctx context.Context) FlowLogCloudwatchIamRoleConditionsArrayOutput {
	return o
}

func (o FlowLogCloudwatchIamRoleConditionsArrayOutput) Index(i pulumi.IntInput) FlowLogCloudwatchIamRoleConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowLogCloudwatchIamRoleConditions {
		return vs[0].([]FlowLogCloudwatchIamRoleConditions)[vs[1].(int)]
	}).(FlowLogCloudwatchIamRoleConditionsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlowLogCloudwatchIamRoleConditionsInput)(nil)).Elem(), FlowLogCloudwatchIamRoleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowLogCloudwatchIamRoleConditionsArrayInput)(nil)).Elem(), FlowLogCloudwatchIamRoleConditionsArray{})
	pulumi.RegisterOutputType(FlowLogCloudwatchIamRoleConditionsOutput{})
	pulumi.RegisterOutputType(FlowLogCloudwatchIamRoleConditionsArrayOutput{})
}
